# Makefile.in generated by automake 1.10.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/Paths.def
applexec_PROGRAMS = eco_2_appl$(EXEEXT) eco_appl$(EXEEXT) \
	find_curve_appl$(EXEEXT) meq_convert_appl$(EXEEXT) \
	verify_order_appl$(EXEEXT) ff1_appl$(EXEEXT) ff2_appl$(EXEEXT) \
	wep_rat_function_appl$(EXEEXT) eco2_appl$(EXEEXT) \
	find_curve_gf2n_appl$(EXEEXT) \
	verify_strong_curve_appl$(EXEEXT) mv_poly_appl$(EXEEXT) \
	mv_term_appl$(EXEEXT)
subdir = examples/ec_order
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h \
	$(top_builddir)/include/LiDIA/LiDIA.h \
	$(top_builddir)/include/LiDIA/path.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(applexecdir)"
applexecPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(applexec_PROGRAMS)
am_eco2_appl_OBJECTS = eco2_appl.$(OBJEXT)
eco2_appl_OBJECTS = $(am_eco2_appl_OBJECTS)
eco2_appl_LDADD = $(LDADD)
eco2_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_eco_2_appl_OBJECTS = eco_2_appl.$(OBJEXT)
eco_2_appl_OBJECTS = $(am_eco_2_appl_OBJECTS)
eco_2_appl_LDADD = $(LDADD)
eco_2_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_eco_appl_OBJECTS = eco_appl.$(OBJEXT)
eco_appl_OBJECTS = $(am_eco_appl_OBJECTS)
eco_appl_LDADD = $(LDADD)
eco_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_ff1_appl_OBJECTS = ff1_appl.$(OBJEXT)
ff1_appl_OBJECTS = $(am_ff1_appl_OBJECTS)
ff1_appl_LDADD = $(LDADD)
ff1_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_ff2_appl_OBJECTS = ff2_appl.$(OBJEXT)
ff2_appl_OBJECTS = $(am_ff2_appl_OBJECTS)
ff2_appl_LDADD = $(LDADD)
ff2_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_find_curve_appl_OBJECTS = find_curve_appl.$(OBJEXT)
find_curve_appl_OBJECTS = $(am_find_curve_appl_OBJECTS)
find_curve_appl_LDADD = $(LDADD)
find_curve_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_find_curve_gf2n_appl_OBJECTS = find_curve_gf2n_appl.$(OBJEXT)
find_curve_gf2n_appl_OBJECTS = $(am_find_curve_gf2n_appl_OBJECTS)
find_curve_gf2n_appl_LDADD = $(LDADD)
find_curve_gf2n_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_meq_convert_appl_OBJECTS = meq_convert_appl.$(OBJEXT)
meq_convert_appl_OBJECTS = $(am_meq_convert_appl_OBJECTS)
meq_convert_appl_LDADD = $(LDADD)
meq_convert_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_mv_poly_appl_OBJECTS = mv_poly_appl.$(OBJEXT)
mv_poly_appl_OBJECTS = $(am_mv_poly_appl_OBJECTS)
mv_poly_appl_LDADD = $(LDADD)
mv_poly_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_mv_term_appl_OBJECTS = mv_term_appl.$(OBJEXT)
mv_term_appl_OBJECTS = $(am_mv_term_appl_OBJECTS)
mv_term_appl_LDADD = $(LDADD)
mv_term_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_verify_order_appl_OBJECTS = verify_order_appl.$(OBJEXT)
verify_order_appl_OBJECTS = $(am_verify_order_appl_OBJECTS)
verify_order_appl_LDADD = $(LDADD)
verify_order_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_verify_strong_curve_appl_OBJECTS =  \
	verify_strong_curve_appl.$(OBJEXT)
verify_strong_curve_appl_OBJECTS =  \
	$(am_verify_strong_curve_appl_OBJECTS)
verify_strong_curve_appl_LDADD = $(LDADD)
verify_strong_curve_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_wep_rat_function_appl_OBJECTS = wep_rat_function_appl.$(OBJEXT)
wep_rat_function_appl_OBJECTS = $(am_wep_rat_function_appl_OBJECTS)
wep_rat_function_appl_LDADD = $(LDADD)
wep_rat_function_appl_DEPENDENCIES = $(LIDIA_LTLIB)
DEFAULT_INCLUDES = 
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(eco2_appl_SOURCES) $(eco_2_appl_SOURCES) \
	$(eco_appl_SOURCES) $(ff1_appl_SOURCES) $(ff2_appl_SOURCES) \
	$(find_curve_appl_SOURCES) $(find_curve_gf2n_appl_SOURCES) \
	$(meq_convert_appl_SOURCES) $(mv_poly_appl_SOURCES) \
	$(mv_term_appl_SOURCES) $(verify_order_appl_SOURCES) \
	$(verify_strong_curve_appl_SOURCES) \
	$(wep_rat_function_appl_SOURCES)
DIST_SOURCES = $(eco2_appl_SOURCES) $(eco_2_appl_SOURCES) \
	$(eco_appl_SOURCES) $(ff1_appl_SOURCES) $(ff2_appl_SOURCES) \
	$(find_curve_appl_SOURCES) $(find_curve_gf2n_appl_SOURCES) \
	$(meq_convert_appl_SOURCES) $(mv_poly_appl_SOURCES) \
	$(mv_term_appl_SOURCES) $(verify_order_appl_SOURCES) \
	$(verify_strong_curve_appl_SOURCES) \
	$(wep_rat_function_appl_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BIBTEX = @BIBTEX@
BUNZIP2 = @BUNZIP2@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
DVIPS = @DVIPS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
GUNZIP = @GUNZIP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LATEX = @LATEX@
LATEX2HTML = @LATEX2HTML@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIDIA_BASE_XLIBOBJS = @LIDIA_BASE_XLIBOBJS@
LIDIA_BASE_XLTLIBOBJS = @LIDIA_BASE_XLTLIBOBJS@
LIDIA_LTCLIBS = @LIDIA_LTCLIBS@
LIDIA_LT_XLIBOBJS = @LIDIA_LT_XLIBOBJS@
LIDIA_LT_XLTLIBOBJS = @LIDIA_LT_XLTLIBOBJS@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINDEX = @MAKEINDEX@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PDFLATEX = @PDFLATEX@
PKG_DIRS = @PKG_DIRS@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TEXI2DVI = @TEXI2DVI@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = 1.5 nostdinc
ETAGS_ARGS = -C -l c++

#
# Use the following prefix for stuff that is normally found in ${top_srcdir}
# but must be specified in a simple-minded fashion (i.e. ${top_builddir}).
# Note that the normal path can be made by prepending ${srcdir}/,
# though that results in weird paths like ../../../library/base/../../xxx.
#
topdir = ${top_builddir}

#
# Main directories of the LiDIA packages
#
LIDIA_DATADIR = ${topdir}/share
LIDIA_PKGDATADIR = ${LIDIA_DATADIR}/LiDIA
LIDIA_CONFIG_LINKDIR = ${top_builddir}/src/base/interfaces
LIDIA_CONFIG_SRCDIR = ${topdir}/src/interfaces
LIDIA_CONFIG_INCLUDEDIR = ${top_builddir}/include
LIDIA_CONFIG_PKGINCLUDEDIR = ${LIDIA_CONFIG_INCLUDEDIR}/LiDIA
LIDIA_PORTAB_SRCDIR = ${topdir}/src/portability
LIDIA_BASE_SRCDIR = ${topdir}/src/base
LIDIA_BASE_INCLUDEDIR = ${LIDIA_BASE_SRCDIR}/include
LIDIA_BASE_PKGINCLUDEDIR = ${LIDIA_BASE_INCLUDEDIR}/LiDIA
LIDIA_FF_SRCDIR = ${topdir}/src/finite_fields
LIDIA_FF_INCLUDEDIR = ${LIDIA_FF_SRCDIR}/include
LIDIA_FF_PKGINCLUDEDIR = ${LIDIA_FF_INCLUDEDIR}/LiDIA
LIDIA_LA_SRCDIR = ${topdir}/src/linear_algebra
LIDIA_LA_INCLUDEDIR = ${LIDIA_LA_SRCDIR}/include
LIDIA_LA_PKGINCLUDEDIR = ${LIDIA_LA_INCLUDEDIR}/LiDIA
LIDIA_LT_SRCDIR = ${topdir}/src/lattices
LIDIA_LT_INCLUDEDIR = ${LIDIA_LT_SRCDIR}/include
LIDIA_LT_PKGINCLUDEDIR = ${LIDIA_LT_INCLUDEDIR}/LiDIA
LIDIA_NF_SRCDIR = ${topdir}/src/number_fields
LIDIA_NF_INCLUDEDIR = ${LIDIA_NF_SRCDIR}/include
LIDIA_NF_PKGINCLUDEDIR = ${LIDIA_NF_INCLUDEDIR}/LiDIA
LIDIA_EC_SRCDIR = ${topdir}/src/elliptic_curves
LIDIA_EC_INCLUDEDIR = ${LIDIA_EC_SRCDIR}/include
LIDIA_EC_PKGINCLUDEDIR = ${LIDIA_EC_INCLUDEDIR}/LiDIA
LIDIA_ECO_SRCDIR = ${topdir}/src/ec_order
LIDIA_ECO_INCLUDEDIR = ${LIDIA_ECO_SRCDIR}/include
LIDIA_ECO_PKGINCLUDEDIR = ${LIDIA_ECO_INCLUDEDIR}/LiDIA
LIDIA_GEC_SRCDIR = ${topdir}/src/gec
LIDIA_GEC_INCLUDEDIR = ${LIDIA_GEC_SRCDIR}/include
LIDIA_GEC_PKGINCLUDEDIR = ${LIDIA_GEC_INCLUDEDIR}/LiDIA

#
# Path to the Libtool library libLiDIA.la resulting from the build
#
LIDIA_LTLIB = ${top_builddir}/library/libLiDIA.la

#
# libLiDIA's version info for Libtool,
# specified as a triplet CURRENT:REVISION:AGE of non-negative integers.
# CURRENT identifies the set of object interfaces exported by the library.
# REVISION specifies CURRENT's implementation release number.
# AGE specifies how many interface sets preceding CURRENT are supported.
# The precise meaning of the version info numbers is defined in the Libtool
# texinfo manual, together with rules for updating them.
# Never try to achieve similarity with the package version!
#
LIDIA_LTVERSION = 7:0:0

#
# Paths to each package's Libtool convenience library.
# The configure-determined variable LIDIA_LTCLIBS refers
# to a subset of these variables.
#
LIDIA_BASE_LTCLIB = ${top_builddir}/library/base/libLiDIA-base.la
LIDIA_FF_LTCLIB = ${top_builddir}/library/finite_fields/libLiDIA-FF.la
LIDIA_LA_LTCLIB = ${top_builddir}/library/linear_algebra/libLiDIA-LA.la
LIDIA_LT_LTCLIB = ${top_builddir}/library/lattices/libLiDIA-LT.la
LIDIA_NF_LTCLIB = ${top_builddir}/library/number_fields/libLiDIA-NF.la
LIDIA_EC_LTCLIB = ${top_builddir}/library/elliptic_curves/libLiDIA-EC.la
LIDIA_ECO_LTCLIB = ${top_builddir}/library/ec_order/libLiDIA-ECO.la
LIDIA_GEC_LTCLIB = ${top_builddir}/library/gec/libLiDIA-GEC.la
AM_CPPFLAGS = \
	-I$(LIDIA_CONFIG_INCLUDEDIR) \
	-I$(LIDIA_BASE_INCLUDEDIR) -I$(srcdir)/$(LIDIA_BASE_INCLUDEDIR) \
	-I$(LIDIA_FF_INCLUDEDIR) -I$(srcdir)/$(LIDIA_FF_INCLUDEDIR) \
	-I$(LIDIA_LA_INCLUDEDIR) -I$(srcdir)/$(LIDIA_LA_INCLUDEDIR) \
	-I$(LIDIA_EC_INCLUDEDIR) -I$(srcdir)/$(LIDIA_EC_INCLUDEDIR) \
	-I$(LIDIA_ECO_INCLUDEDIR) -I$(srcdir)/$(LIDIA_ECO_INCLUDEDIR)

applexecdir = $(pkglibdir)/examples
LDADD = $(LIDIA_LTLIB)
eco_2_appl_SOURCES = \
	$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/eco_2_appl.cc

eco_appl_SOURCES = \
	$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/eco_appl.cc

find_curve_appl_SOURCES = \
	$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/find_curve_appl.cc

meq_convert_appl_SOURCES = \
	$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/meq_convert_appl.cc

verify_order_appl_SOURCES = \
	$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/verify_order_appl.cc

ff1_appl_SOURCES = \
	$(LIDIA_ECO_SRCDIR)/eco_gfp/ffx/ff1_appl.cc

ff2_appl_SOURCES = \
	$(LIDIA_ECO_SRCDIR)/eco_gfp/ffx/ff2_appl.cc

wep_rat_function_appl_SOURCES = \
	$(LIDIA_ECO_SRCDIR)/eco_gfp/wep_rat_function/wep_rat_function_appl.cc

eco2_appl_SOURCES = \
	$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/eco2_appl.cc

find_curve_gf2n_appl_SOURCES = \
	$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/find_curve_gf2n_appl.cc

verify_strong_curve_appl_SOURCES = \
	$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/verify_strong_curve_appl.cc

mv_poly_appl_SOURCES = \
	$(LIDIA_ECO_SRCDIR)/eco_gf2n/mv_pol/mv_poly_appl.cc

mv_term_appl_SOURCES = \
	$(LIDIA_ECO_SRCDIR)/eco_gf2n/mv_pol/mv_term_appl.cc

EXTRA_DIST = \
	${LIDIA_ECO_SRCDIR}/eco_gf2n/mv_pol/mv_poly_timing.cc \
	${LIDIA_ECO_SRCDIR}/eco_gfp/wep_rat_function/wep_rat_function_timing.cc

all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Paths.def $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  examples/ec_order/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  examples/ec_order/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-applexecPROGRAMS: $(applexec_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(applexecdir)" || $(MKDIR_P) "$(DESTDIR)$(applexecdir)"
	@list='$(applexec_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(applexecPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(applexecdir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(applexecPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(applexecdir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-applexecPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(applexec_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(applexecdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(applexecdir)/$$f"; \
	done

clean-applexecPROGRAMS:
	@list='$(applexec_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
eco2_appl$(EXEEXT): $(eco2_appl_OBJECTS) $(eco2_appl_DEPENDENCIES) 
	@rm -f eco2_appl$(EXEEXT)
	$(CXXLINK) $(eco2_appl_OBJECTS) $(eco2_appl_LDADD) $(LIBS)
eco_2_appl$(EXEEXT): $(eco_2_appl_OBJECTS) $(eco_2_appl_DEPENDENCIES) 
	@rm -f eco_2_appl$(EXEEXT)
	$(CXXLINK) $(eco_2_appl_OBJECTS) $(eco_2_appl_LDADD) $(LIBS)
eco_appl$(EXEEXT): $(eco_appl_OBJECTS) $(eco_appl_DEPENDENCIES) 
	@rm -f eco_appl$(EXEEXT)
	$(CXXLINK) $(eco_appl_OBJECTS) $(eco_appl_LDADD) $(LIBS)
ff1_appl$(EXEEXT): $(ff1_appl_OBJECTS) $(ff1_appl_DEPENDENCIES) 
	@rm -f ff1_appl$(EXEEXT)
	$(CXXLINK) $(ff1_appl_OBJECTS) $(ff1_appl_LDADD) $(LIBS)
ff2_appl$(EXEEXT): $(ff2_appl_OBJECTS) $(ff2_appl_DEPENDENCIES) 
	@rm -f ff2_appl$(EXEEXT)
	$(CXXLINK) $(ff2_appl_OBJECTS) $(ff2_appl_LDADD) $(LIBS)
find_curve_appl$(EXEEXT): $(find_curve_appl_OBJECTS) $(find_curve_appl_DEPENDENCIES) 
	@rm -f find_curve_appl$(EXEEXT)
	$(CXXLINK) $(find_curve_appl_OBJECTS) $(find_curve_appl_LDADD) $(LIBS)
find_curve_gf2n_appl$(EXEEXT): $(find_curve_gf2n_appl_OBJECTS) $(find_curve_gf2n_appl_DEPENDENCIES) 
	@rm -f find_curve_gf2n_appl$(EXEEXT)
	$(CXXLINK) $(find_curve_gf2n_appl_OBJECTS) $(find_curve_gf2n_appl_LDADD) $(LIBS)
meq_convert_appl$(EXEEXT): $(meq_convert_appl_OBJECTS) $(meq_convert_appl_DEPENDENCIES) 
	@rm -f meq_convert_appl$(EXEEXT)
	$(CXXLINK) $(meq_convert_appl_OBJECTS) $(meq_convert_appl_LDADD) $(LIBS)
mv_poly_appl$(EXEEXT): $(mv_poly_appl_OBJECTS) $(mv_poly_appl_DEPENDENCIES) 
	@rm -f mv_poly_appl$(EXEEXT)
	$(CXXLINK) $(mv_poly_appl_OBJECTS) $(mv_poly_appl_LDADD) $(LIBS)
mv_term_appl$(EXEEXT): $(mv_term_appl_OBJECTS) $(mv_term_appl_DEPENDENCIES) 
	@rm -f mv_term_appl$(EXEEXT)
	$(CXXLINK) $(mv_term_appl_OBJECTS) $(mv_term_appl_LDADD) $(LIBS)
verify_order_appl$(EXEEXT): $(verify_order_appl_OBJECTS) $(verify_order_appl_DEPENDENCIES) 
	@rm -f verify_order_appl$(EXEEXT)
	$(CXXLINK) $(verify_order_appl_OBJECTS) $(verify_order_appl_LDADD) $(LIBS)
verify_strong_curve_appl$(EXEEXT): $(verify_strong_curve_appl_OBJECTS) $(verify_strong_curve_appl_DEPENDENCIES) 
	@rm -f verify_strong_curve_appl$(EXEEXT)
	$(CXXLINK) $(verify_strong_curve_appl_OBJECTS) $(verify_strong_curve_appl_LDADD) $(LIBS)
wep_rat_function_appl$(EXEEXT): $(wep_rat_function_appl_OBJECTS) $(wep_rat_function_appl_DEPENDENCIES) 
	@rm -f wep_rat_function_appl$(EXEEXT)
	$(CXXLINK) $(wep_rat_function_appl_OBJECTS) $(wep_rat_function_appl_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eco2_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eco_2_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eco_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ff1_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ff2_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/find_curve_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/find_curve_gf2n_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/meq_convert_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mv_poly_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mv_term_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/verify_order_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/verify_strong_curve_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wep_rat_function_appl.Po@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

eco2_appl.o: $(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/eco2_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eco2_appl.o -MD -MP -MF $(DEPDIR)/eco2_appl.Tpo -c -o eco2_appl.o `test -f '$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/eco2_appl.cc' || echo '$(srcdir)/'`$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/eco2_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eco2_appl.Tpo $(DEPDIR)/eco2_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/eco2_appl.cc' object='eco2_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eco2_appl.o `test -f '$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/eco2_appl.cc' || echo '$(srcdir)/'`$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/eco2_appl.cc

eco2_appl.obj: $(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/eco2_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eco2_appl.obj -MD -MP -MF $(DEPDIR)/eco2_appl.Tpo -c -o eco2_appl.obj `if test -f '$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/eco2_appl.cc'; then $(CYGPATH_W) '$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/eco2_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/eco2_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eco2_appl.Tpo $(DEPDIR)/eco2_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/eco2_appl.cc' object='eco2_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eco2_appl.obj `if test -f '$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/eco2_appl.cc'; then $(CYGPATH_W) '$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/eco2_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/eco2_appl.cc'; fi`

eco_2_appl.o: $(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/eco_2_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eco_2_appl.o -MD -MP -MF $(DEPDIR)/eco_2_appl.Tpo -c -o eco_2_appl.o `test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/eco_2_appl.cc' || echo '$(srcdir)/'`$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/eco_2_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eco_2_appl.Tpo $(DEPDIR)/eco_2_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/eco_2_appl.cc' object='eco_2_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eco_2_appl.o `test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/eco_2_appl.cc' || echo '$(srcdir)/'`$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/eco_2_appl.cc

eco_2_appl.obj: $(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/eco_2_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eco_2_appl.obj -MD -MP -MF $(DEPDIR)/eco_2_appl.Tpo -c -o eco_2_appl.obj `if test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/eco_2_appl.cc'; then $(CYGPATH_W) '$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/eco_2_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/eco_2_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eco_2_appl.Tpo $(DEPDIR)/eco_2_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/eco_2_appl.cc' object='eco_2_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eco_2_appl.obj `if test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/eco_2_appl.cc'; then $(CYGPATH_W) '$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/eco_2_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/eco_2_appl.cc'; fi`

eco_appl.o: $(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/eco_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eco_appl.o -MD -MP -MF $(DEPDIR)/eco_appl.Tpo -c -o eco_appl.o `test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/eco_appl.cc' || echo '$(srcdir)/'`$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/eco_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eco_appl.Tpo $(DEPDIR)/eco_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/eco_appl.cc' object='eco_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eco_appl.o `test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/eco_appl.cc' || echo '$(srcdir)/'`$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/eco_appl.cc

eco_appl.obj: $(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/eco_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eco_appl.obj -MD -MP -MF $(DEPDIR)/eco_appl.Tpo -c -o eco_appl.obj `if test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/eco_appl.cc'; then $(CYGPATH_W) '$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/eco_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/eco_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/eco_appl.Tpo $(DEPDIR)/eco_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/eco_appl.cc' object='eco_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eco_appl.obj `if test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/eco_appl.cc'; then $(CYGPATH_W) '$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/eco_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/eco_appl.cc'; fi`

ff1_appl.o: $(LIDIA_ECO_SRCDIR)/eco_gfp/ffx/ff1_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ff1_appl.o -MD -MP -MF $(DEPDIR)/ff1_appl.Tpo -c -o ff1_appl.o `test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/ffx/ff1_appl.cc' || echo '$(srcdir)/'`$(LIDIA_ECO_SRCDIR)/eco_gfp/ffx/ff1_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ff1_appl.Tpo $(DEPDIR)/ff1_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_ECO_SRCDIR)/eco_gfp/ffx/ff1_appl.cc' object='ff1_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ff1_appl.o `test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/ffx/ff1_appl.cc' || echo '$(srcdir)/'`$(LIDIA_ECO_SRCDIR)/eco_gfp/ffx/ff1_appl.cc

ff1_appl.obj: $(LIDIA_ECO_SRCDIR)/eco_gfp/ffx/ff1_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ff1_appl.obj -MD -MP -MF $(DEPDIR)/ff1_appl.Tpo -c -o ff1_appl.obj `if test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/ffx/ff1_appl.cc'; then $(CYGPATH_W) '$(LIDIA_ECO_SRCDIR)/eco_gfp/ffx/ff1_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_ECO_SRCDIR)/eco_gfp/ffx/ff1_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ff1_appl.Tpo $(DEPDIR)/ff1_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_ECO_SRCDIR)/eco_gfp/ffx/ff1_appl.cc' object='ff1_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ff1_appl.obj `if test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/ffx/ff1_appl.cc'; then $(CYGPATH_W) '$(LIDIA_ECO_SRCDIR)/eco_gfp/ffx/ff1_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_ECO_SRCDIR)/eco_gfp/ffx/ff1_appl.cc'; fi`

ff2_appl.o: $(LIDIA_ECO_SRCDIR)/eco_gfp/ffx/ff2_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ff2_appl.o -MD -MP -MF $(DEPDIR)/ff2_appl.Tpo -c -o ff2_appl.o `test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/ffx/ff2_appl.cc' || echo '$(srcdir)/'`$(LIDIA_ECO_SRCDIR)/eco_gfp/ffx/ff2_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ff2_appl.Tpo $(DEPDIR)/ff2_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_ECO_SRCDIR)/eco_gfp/ffx/ff2_appl.cc' object='ff2_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ff2_appl.o `test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/ffx/ff2_appl.cc' || echo '$(srcdir)/'`$(LIDIA_ECO_SRCDIR)/eco_gfp/ffx/ff2_appl.cc

ff2_appl.obj: $(LIDIA_ECO_SRCDIR)/eco_gfp/ffx/ff2_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ff2_appl.obj -MD -MP -MF $(DEPDIR)/ff2_appl.Tpo -c -o ff2_appl.obj `if test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/ffx/ff2_appl.cc'; then $(CYGPATH_W) '$(LIDIA_ECO_SRCDIR)/eco_gfp/ffx/ff2_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_ECO_SRCDIR)/eco_gfp/ffx/ff2_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ff2_appl.Tpo $(DEPDIR)/ff2_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_ECO_SRCDIR)/eco_gfp/ffx/ff2_appl.cc' object='ff2_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ff2_appl.obj `if test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/ffx/ff2_appl.cc'; then $(CYGPATH_W) '$(LIDIA_ECO_SRCDIR)/eco_gfp/ffx/ff2_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_ECO_SRCDIR)/eco_gfp/ffx/ff2_appl.cc'; fi`

find_curve_appl.o: $(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/find_curve_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT find_curve_appl.o -MD -MP -MF $(DEPDIR)/find_curve_appl.Tpo -c -o find_curve_appl.o `test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/find_curve_appl.cc' || echo '$(srcdir)/'`$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/find_curve_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/find_curve_appl.Tpo $(DEPDIR)/find_curve_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/find_curve_appl.cc' object='find_curve_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o find_curve_appl.o `test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/find_curve_appl.cc' || echo '$(srcdir)/'`$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/find_curve_appl.cc

find_curve_appl.obj: $(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/find_curve_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT find_curve_appl.obj -MD -MP -MF $(DEPDIR)/find_curve_appl.Tpo -c -o find_curve_appl.obj `if test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/find_curve_appl.cc'; then $(CYGPATH_W) '$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/find_curve_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/find_curve_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/find_curve_appl.Tpo $(DEPDIR)/find_curve_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/find_curve_appl.cc' object='find_curve_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o find_curve_appl.obj `if test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/find_curve_appl.cc'; then $(CYGPATH_W) '$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/find_curve_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/find_curve_appl.cc'; fi`

find_curve_gf2n_appl.o: $(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/find_curve_gf2n_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT find_curve_gf2n_appl.o -MD -MP -MF $(DEPDIR)/find_curve_gf2n_appl.Tpo -c -o find_curve_gf2n_appl.o `test -f '$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/find_curve_gf2n_appl.cc' || echo '$(srcdir)/'`$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/find_curve_gf2n_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/find_curve_gf2n_appl.Tpo $(DEPDIR)/find_curve_gf2n_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/find_curve_gf2n_appl.cc' object='find_curve_gf2n_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o find_curve_gf2n_appl.o `test -f '$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/find_curve_gf2n_appl.cc' || echo '$(srcdir)/'`$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/find_curve_gf2n_appl.cc

find_curve_gf2n_appl.obj: $(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/find_curve_gf2n_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT find_curve_gf2n_appl.obj -MD -MP -MF $(DEPDIR)/find_curve_gf2n_appl.Tpo -c -o find_curve_gf2n_appl.obj `if test -f '$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/find_curve_gf2n_appl.cc'; then $(CYGPATH_W) '$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/find_curve_gf2n_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/find_curve_gf2n_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/find_curve_gf2n_appl.Tpo $(DEPDIR)/find_curve_gf2n_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/find_curve_gf2n_appl.cc' object='find_curve_gf2n_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o find_curve_gf2n_appl.obj `if test -f '$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/find_curve_gf2n_appl.cc'; then $(CYGPATH_W) '$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/find_curve_gf2n_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/find_curve_gf2n_appl.cc'; fi`

meq_convert_appl.o: $(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/meq_convert_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT meq_convert_appl.o -MD -MP -MF $(DEPDIR)/meq_convert_appl.Tpo -c -o meq_convert_appl.o `test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/meq_convert_appl.cc' || echo '$(srcdir)/'`$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/meq_convert_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/meq_convert_appl.Tpo $(DEPDIR)/meq_convert_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/meq_convert_appl.cc' object='meq_convert_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o meq_convert_appl.o `test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/meq_convert_appl.cc' || echo '$(srcdir)/'`$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/meq_convert_appl.cc

meq_convert_appl.obj: $(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/meq_convert_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT meq_convert_appl.obj -MD -MP -MF $(DEPDIR)/meq_convert_appl.Tpo -c -o meq_convert_appl.obj `if test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/meq_convert_appl.cc'; then $(CYGPATH_W) '$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/meq_convert_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/meq_convert_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/meq_convert_appl.Tpo $(DEPDIR)/meq_convert_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/meq_convert_appl.cc' object='meq_convert_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o meq_convert_appl.obj `if test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/meq_convert_appl.cc'; then $(CYGPATH_W) '$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/meq_convert_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/meq_convert_appl.cc'; fi`

mv_poly_appl.o: $(LIDIA_ECO_SRCDIR)/eco_gf2n/mv_pol/mv_poly_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mv_poly_appl.o -MD -MP -MF $(DEPDIR)/mv_poly_appl.Tpo -c -o mv_poly_appl.o `test -f '$(LIDIA_ECO_SRCDIR)/eco_gf2n/mv_pol/mv_poly_appl.cc' || echo '$(srcdir)/'`$(LIDIA_ECO_SRCDIR)/eco_gf2n/mv_pol/mv_poly_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mv_poly_appl.Tpo $(DEPDIR)/mv_poly_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_ECO_SRCDIR)/eco_gf2n/mv_pol/mv_poly_appl.cc' object='mv_poly_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mv_poly_appl.o `test -f '$(LIDIA_ECO_SRCDIR)/eco_gf2n/mv_pol/mv_poly_appl.cc' || echo '$(srcdir)/'`$(LIDIA_ECO_SRCDIR)/eco_gf2n/mv_pol/mv_poly_appl.cc

mv_poly_appl.obj: $(LIDIA_ECO_SRCDIR)/eco_gf2n/mv_pol/mv_poly_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mv_poly_appl.obj -MD -MP -MF $(DEPDIR)/mv_poly_appl.Tpo -c -o mv_poly_appl.obj `if test -f '$(LIDIA_ECO_SRCDIR)/eco_gf2n/mv_pol/mv_poly_appl.cc'; then $(CYGPATH_W) '$(LIDIA_ECO_SRCDIR)/eco_gf2n/mv_pol/mv_poly_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_ECO_SRCDIR)/eco_gf2n/mv_pol/mv_poly_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mv_poly_appl.Tpo $(DEPDIR)/mv_poly_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_ECO_SRCDIR)/eco_gf2n/mv_pol/mv_poly_appl.cc' object='mv_poly_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mv_poly_appl.obj `if test -f '$(LIDIA_ECO_SRCDIR)/eco_gf2n/mv_pol/mv_poly_appl.cc'; then $(CYGPATH_W) '$(LIDIA_ECO_SRCDIR)/eco_gf2n/mv_pol/mv_poly_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_ECO_SRCDIR)/eco_gf2n/mv_pol/mv_poly_appl.cc'; fi`

mv_term_appl.o: $(LIDIA_ECO_SRCDIR)/eco_gf2n/mv_pol/mv_term_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mv_term_appl.o -MD -MP -MF $(DEPDIR)/mv_term_appl.Tpo -c -o mv_term_appl.o `test -f '$(LIDIA_ECO_SRCDIR)/eco_gf2n/mv_pol/mv_term_appl.cc' || echo '$(srcdir)/'`$(LIDIA_ECO_SRCDIR)/eco_gf2n/mv_pol/mv_term_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mv_term_appl.Tpo $(DEPDIR)/mv_term_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_ECO_SRCDIR)/eco_gf2n/mv_pol/mv_term_appl.cc' object='mv_term_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mv_term_appl.o `test -f '$(LIDIA_ECO_SRCDIR)/eco_gf2n/mv_pol/mv_term_appl.cc' || echo '$(srcdir)/'`$(LIDIA_ECO_SRCDIR)/eco_gf2n/mv_pol/mv_term_appl.cc

mv_term_appl.obj: $(LIDIA_ECO_SRCDIR)/eco_gf2n/mv_pol/mv_term_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mv_term_appl.obj -MD -MP -MF $(DEPDIR)/mv_term_appl.Tpo -c -o mv_term_appl.obj `if test -f '$(LIDIA_ECO_SRCDIR)/eco_gf2n/mv_pol/mv_term_appl.cc'; then $(CYGPATH_W) '$(LIDIA_ECO_SRCDIR)/eco_gf2n/mv_pol/mv_term_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_ECO_SRCDIR)/eco_gf2n/mv_pol/mv_term_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mv_term_appl.Tpo $(DEPDIR)/mv_term_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_ECO_SRCDIR)/eco_gf2n/mv_pol/mv_term_appl.cc' object='mv_term_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mv_term_appl.obj `if test -f '$(LIDIA_ECO_SRCDIR)/eco_gf2n/mv_pol/mv_term_appl.cc'; then $(CYGPATH_W) '$(LIDIA_ECO_SRCDIR)/eco_gf2n/mv_pol/mv_term_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_ECO_SRCDIR)/eco_gf2n/mv_pol/mv_term_appl.cc'; fi`

verify_order_appl.o: $(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/verify_order_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT verify_order_appl.o -MD -MP -MF $(DEPDIR)/verify_order_appl.Tpo -c -o verify_order_appl.o `test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/verify_order_appl.cc' || echo '$(srcdir)/'`$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/verify_order_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/verify_order_appl.Tpo $(DEPDIR)/verify_order_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/verify_order_appl.cc' object='verify_order_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o verify_order_appl.o `test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/verify_order_appl.cc' || echo '$(srcdir)/'`$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/verify_order_appl.cc

verify_order_appl.obj: $(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/verify_order_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT verify_order_appl.obj -MD -MP -MF $(DEPDIR)/verify_order_appl.Tpo -c -o verify_order_appl.obj `if test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/verify_order_appl.cc'; then $(CYGPATH_W) '$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/verify_order_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/verify_order_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/verify_order_appl.Tpo $(DEPDIR)/verify_order_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/verify_order_appl.cc' object='verify_order_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o verify_order_appl.obj `if test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/verify_order_appl.cc'; then $(CYGPATH_W) '$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/verify_order_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_ECO_SRCDIR)/eco_gfp/eco_gfp/verify_order_appl.cc'; fi`

verify_strong_curve_appl.o: $(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/verify_strong_curve_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT verify_strong_curve_appl.o -MD -MP -MF $(DEPDIR)/verify_strong_curve_appl.Tpo -c -o verify_strong_curve_appl.o `test -f '$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/verify_strong_curve_appl.cc' || echo '$(srcdir)/'`$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/verify_strong_curve_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/verify_strong_curve_appl.Tpo $(DEPDIR)/verify_strong_curve_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/verify_strong_curve_appl.cc' object='verify_strong_curve_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o verify_strong_curve_appl.o `test -f '$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/verify_strong_curve_appl.cc' || echo '$(srcdir)/'`$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/verify_strong_curve_appl.cc

verify_strong_curve_appl.obj: $(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/verify_strong_curve_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT verify_strong_curve_appl.obj -MD -MP -MF $(DEPDIR)/verify_strong_curve_appl.Tpo -c -o verify_strong_curve_appl.obj `if test -f '$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/verify_strong_curve_appl.cc'; then $(CYGPATH_W) '$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/verify_strong_curve_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/verify_strong_curve_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/verify_strong_curve_appl.Tpo $(DEPDIR)/verify_strong_curve_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/verify_strong_curve_appl.cc' object='verify_strong_curve_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o verify_strong_curve_appl.obj `if test -f '$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/verify_strong_curve_appl.cc'; then $(CYGPATH_W) '$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/verify_strong_curve_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_ECO_SRCDIR)/eco_gf2n/eco_gf2n/verify_strong_curve_appl.cc'; fi`

wep_rat_function_appl.o: $(LIDIA_ECO_SRCDIR)/eco_gfp/wep_rat_function/wep_rat_function_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wep_rat_function_appl.o -MD -MP -MF $(DEPDIR)/wep_rat_function_appl.Tpo -c -o wep_rat_function_appl.o `test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/wep_rat_function/wep_rat_function_appl.cc' || echo '$(srcdir)/'`$(LIDIA_ECO_SRCDIR)/eco_gfp/wep_rat_function/wep_rat_function_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/wep_rat_function_appl.Tpo $(DEPDIR)/wep_rat_function_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_ECO_SRCDIR)/eco_gfp/wep_rat_function/wep_rat_function_appl.cc' object='wep_rat_function_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wep_rat_function_appl.o `test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/wep_rat_function/wep_rat_function_appl.cc' || echo '$(srcdir)/'`$(LIDIA_ECO_SRCDIR)/eco_gfp/wep_rat_function/wep_rat_function_appl.cc

wep_rat_function_appl.obj: $(LIDIA_ECO_SRCDIR)/eco_gfp/wep_rat_function/wep_rat_function_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wep_rat_function_appl.obj -MD -MP -MF $(DEPDIR)/wep_rat_function_appl.Tpo -c -o wep_rat_function_appl.obj `if test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/wep_rat_function/wep_rat_function_appl.cc'; then $(CYGPATH_W) '$(LIDIA_ECO_SRCDIR)/eco_gfp/wep_rat_function/wep_rat_function_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_ECO_SRCDIR)/eco_gfp/wep_rat_function/wep_rat_function_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/wep_rat_function_appl.Tpo $(DEPDIR)/wep_rat_function_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_ECO_SRCDIR)/eco_gfp/wep_rat_function/wep_rat_function_appl.cc' object='wep_rat_function_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wep_rat_function_appl.obj `if test -f '$(LIDIA_ECO_SRCDIR)/eco_gfp/wep_rat_function/wep_rat_function_appl.cc'; then $(CYGPATH_W) '$(LIDIA_ECO_SRCDIR)/eco_gfp/wep_rat_function/wep_rat_function_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_ECO_SRCDIR)/eco_gfp/wep_rat_function/wep_rat_function_appl.cc'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(applexecdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-applexecPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-applexecPROGRAMS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-applexecPROGRAMS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook

.MAKE: install-am install-strip uninstall-am

.PHONY: CTAGS GTAGS all all-am check check-am clean \
	clean-applexecPROGRAMS clean-generic clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am \
	install-applexecPROGRAMS install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-applexecPROGRAMS uninstall-hook


 #

$(applexec_PROGRAMS): $(LIDIA_LTLIB)

# Remove installation subdirectories after uninstalling, unless left non-empty.
uninstall-hook:
	rmdir	$(DESTDIR)$(applexecdir) \
		$(DESTDIR)$(pkglibdir) \
		2>/dev/null; :

# Delete half-made targets when their commands fail
.DELETE_ON_ERROR:
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
