# Makefile.in generated by automake 1.11.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(instantinclude_HEADERS) $(nfinclude_HEADERS) \
	$(pkginclude_HEADERS) $(specialinclude_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/Paths.def
subdir = library/number_fields
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h \
	$(top_builddir)/include/LiDIA/LiDIA.h \
	$(top_builddir)/include/LiDIA/path.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libLiDIA_NF_la_LIBADD =
am_libLiDIA_NF_la_OBJECTS = alg_factor.lo alg_number.lo \
	sf_alg_ideal.lo ideal.lo module.lo order.lo prime_ideal.lo \
	bpf_quadratic_number_standard.lo bpp_quadratic_ideal.lo \
	bv_bpp_qi_bigint.lo bv_p_bigint.lo bv_partial_relation.lo \
	bv_pp_sf_alg_ideal.lo bv_qi_class.lo bv_qi_class_real.lo \
	bv_quadratic_form.lo bv_quadratic_ideal.lo \
	bv_quadratic_number_power_product.lo \
	bv_quadratic_number_standard.lo bv_xbigfloat.lo \
	fact_alg_ideal.lo ht_ideal_node.lo ht_qi_class_real.lo \
	ht_quadratic_form.lo iht_ideal_node.lo iht_qi_class_real.lo \
	lpf_quadratic_number_standard.lo \
	mv_quadratic_number_standard.lo pair_bigint.lo \
	rcl_quadratic_number_power_product_basis.lo sv_p_bigint.lo \
	sv_pp_sf_alg_ideal.lo compute_class_group.lo \
	bigint_matrix_qo.lo qi_class.lo qi_class_real.lo qo_list.lo \
	qo_sieve.lo qo_subexp.lo qo_util.lo quadratic_form.lo \
	quadratic_ideal.lo quadratic_ideal_power_product.lo \
	quadratic_number_logarithm.lo \
	quadratic_number_power_product.lo \
	quadratic_number_power_product_basis.lo \
	quadratic_number_standard.lo quadratic_order1.lo \
	quadratic_order2.lo quadratic_order3.lo
libLiDIA_NF_la_OBJECTS = $(am_libLiDIA_NF_la_OBJECTS)
DEFAULT_INCLUDES = 
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libLiDIA_NF_la_SOURCES)
DIST_SOURCES = $(libLiDIA_NF_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(instantincludedir)" \
	"$(DESTDIR)$(nfincludedir)" "$(DESTDIR)$(pkgincludedir)" \
	"$(DESTDIR)$(specialincludedir)"
HEADERS = $(instantinclude_HEADERS) $(nfinclude_HEADERS) \
	$(pkginclude_HEADERS) $(specialinclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BIBTEX = @BIBTEX@
BUNZIP2 = @BUNZIP2@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
DVIPS = @DVIPS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
GUNZIP = @GUNZIP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LATEX = @LATEX@
LATEX2HTML = @LATEX2HTML@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@

# We don't want to have $(LIBS) in the convenience library.
# FIXME: This is not safe against command-line overrides.
LIBS = 
LIBTOOL = @LIBTOOL@
LIDIA_BASE_XLIBOBJS = @LIDIA_BASE_XLIBOBJS@
LIDIA_BASE_XLTLIBOBJS = @LIDIA_BASE_XLTLIBOBJS@
LIDIA_LTCLIBS = @LIDIA_LTCLIBS@
LIDIA_LT_XLIBOBJS = @LIDIA_LT_XLIBOBJS@
LIDIA_LT_XLTLIBOBJS = @LIDIA_LT_XLTLIBOBJS@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINDEX = @MAKEINDEX@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PDFLATEX = @PDFLATEX@
PKG_DIRS = @PKG_DIRS@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TEXI2DVI = @TEXI2DVI@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = 1.5 nostdinc
ETAGS_ARGS = -C -l c++

#
# Use the following prefix for stuff that is normally found in ${top_srcdir}
# but must be specified in a simple-minded fashion (i.e. ${top_builddir}).
# Note that the normal path can be made by prepending ${srcdir}/,
# though that results in weird paths like ../../../library/base/../../xxx.
#
topdir = ${top_builddir}

#
# Main directories of the LiDIA packages
#
LIDIA_DATADIR = ${topdir}/share
LIDIA_PKGDATADIR = ${LIDIA_DATADIR}/LiDIA
LIDIA_CONFIG_LINKDIR = ${top_builddir}/src/base/interfaces
LIDIA_CONFIG_SRCDIR = ${topdir}/src/interfaces
LIDIA_CONFIG_INCLUDEDIR = ${top_builddir}/include
LIDIA_CONFIG_PKGINCLUDEDIR = ${LIDIA_CONFIG_INCLUDEDIR}/LiDIA
LIDIA_PORTAB_SRCDIR = ${topdir}/src/portability
LIDIA_BASE_SRCDIR = ${topdir}/src/base
LIDIA_BASE_INCLUDEDIR = ${LIDIA_BASE_SRCDIR}/include
LIDIA_BASE_PKGINCLUDEDIR = ${LIDIA_BASE_INCLUDEDIR}/LiDIA
LIDIA_FF_SRCDIR = ${topdir}/src/finite_fields
LIDIA_FF_INCLUDEDIR = ${LIDIA_FF_SRCDIR}/include
LIDIA_FF_PKGINCLUDEDIR = ${LIDIA_FF_INCLUDEDIR}/LiDIA
LIDIA_LA_SRCDIR = ${topdir}/src/linear_algebra
LIDIA_LA_INCLUDEDIR = ${LIDIA_LA_SRCDIR}/include
LIDIA_LA_PKGINCLUDEDIR = ${LIDIA_LA_INCLUDEDIR}/LiDIA
LIDIA_LT_SRCDIR = ${topdir}/src/lattices
LIDIA_LT_INCLUDEDIR = ${LIDIA_LT_SRCDIR}/include
LIDIA_LT_PKGINCLUDEDIR = ${LIDIA_LT_INCLUDEDIR}/LiDIA
LIDIA_NF_SRCDIR = ${topdir}/src/number_fields
LIDIA_NF_INCLUDEDIR = ${LIDIA_NF_SRCDIR}/include
LIDIA_NF_PKGINCLUDEDIR = ${LIDIA_NF_INCLUDEDIR}/LiDIA
LIDIA_EC_SRCDIR = ${topdir}/src/elliptic_curves
LIDIA_EC_INCLUDEDIR = ${LIDIA_EC_SRCDIR}/include
LIDIA_EC_PKGINCLUDEDIR = ${LIDIA_EC_INCLUDEDIR}/LiDIA
LIDIA_ECO_SRCDIR = ${topdir}/src/ec_order
LIDIA_ECO_INCLUDEDIR = ${LIDIA_ECO_SRCDIR}/include
LIDIA_ECO_PKGINCLUDEDIR = ${LIDIA_ECO_INCLUDEDIR}/LiDIA
LIDIA_GEC_SRCDIR = ${topdir}/src/gec
LIDIA_GEC_INCLUDEDIR = ${LIDIA_GEC_SRCDIR}/include
LIDIA_GEC_PKGINCLUDEDIR = ${LIDIA_GEC_INCLUDEDIR}/LiDIA

#
# Path to the Libtool library libLiDIA.la resulting from the build
#
LIDIA_LTLIB = ${top_builddir}/library/libLiDIA.la

#
# libLiDIA's version info for Libtool,
# specified as a triplet CURRENT:REVISION:AGE of non-negative integers.
# CURRENT identifies the set of object interfaces exported by the library.
# REVISION specifies CURRENT's implementation release number.
# AGE specifies how many interface sets preceding CURRENT are supported.
# The precise meaning of the version info numbers is defined in the Libtool
# texinfo manual, together with rules for updating them.
# Never try to achieve similarity with the package version!
#
LIDIA_LTVERSION = 7:0:0

#
# Paths to each package's Libtool convenience library.
# The configure-determined variable LIDIA_LTCLIBS refers
# to a subset of these variables.
#
LIDIA_BASE_LTCLIB = ${top_builddir}/library/base/libLiDIA-base.la
LIDIA_FF_LTCLIB = ${top_builddir}/library/finite_fields/libLiDIA-FF.la
LIDIA_LA_LTCLIB = ${top_builddir}/library/linear_algebra/libLiDIA-LA.la
LIDIA_LT_LTCLIB = ${top_builddir}/library/lattices/libLiDIA-LT.la
LIDIA_NF_LTCLIB = ${top_builddir}/library/number_fields/libLiDIA-NF.la
LIDIA_EC_LTCLIB = ${top_builddir}/library/elliptic_curves/libLiDIA-EC.la
LIDIA_ECO_LTCLIB = ${top_builddir}/library/ec_order/libLiDIA-ECO.la
LIDIA_GEC_LTCLIB = ${top_builddir}/library/gec/libLiDIA-GEC.la
AM_CPPFLAGS = \
	-I$(LIDIA_CONFIG_INCLUDEDIR) \
	-I$(LIDIA_BASE_INCLUDEDIR) -I$(srcdir)/$(LIDIA_BASE_INCLUDEDIR) \
	-I$(LIDIA_FF_INCLUDEDIR) -I$(srcdir)/$(LIDIA_FF_INCLUDEDIR) \
	-I$(LIDIA_LA_INCLUDEDIR) -I$(srcdir)/$(LIDIA_LA_INCLUDEDIR) \
	-I$(LIDIA_LT_INCLUDEDIR) -I$(srcdir)/$(LIDIA_LT_INCLUDEDIR) \
	-I$(LIDIA_NF_INCLUDEDIR) -I$(srcdir)/$(LIDIA_NF_INCLUDEDIR)

noinst_LTLIBRARIES = libLiDIA-NF.la
libLiDIA_NF_la_SOURCES = \
	$(LIDIA_NF_SRCDIR)/algebraic_num/alg_factor.cc \
	$(LIDIA_NF_SRCDIR)/algebraic_num/alg_number.cc \
	$(LIDIA_NF_SRCDIR)/algebraic_num/factorization/sf_alg_ideal.cc \
	$(LIDIA_NF_SRCDIR)/algebraic_num/ideal.cc \
	$(LIDIA_NF_SRCDIR)/algebraic_num/module.cc \
	$(LIDIA_NF_SRCDIR)/algebraic_num/order.cc \
	$(LIDIA_NF_SRCDIR)/algebraic_num/prime_ideal.cc \
	$(LIDIA_NF_SRCDIR)/instantiate/bpf_quadratic_number_standard.cc \
	$(LIDIA_NF_SRCDIR)/instantiate/bpp_quadratic_ideal.cc \
	$(LIDIA_NF_SRCDIR)/instantiate/bv_bpp_qi_bigint.cc \
	$(LIDIA_NF_SRCDIR)/instantiate/bv_p_bigint.cc \
	$(LIDIA_NF_SRCDIR)/instantiate/bv_partial_relation.cc \
	$(LIDIA_NF_SRCDIR)/instantiate/bv_pp_sf_alg_ideal.cc \
	$(LIDIA_NF_SRCDIR)/instantiate/bv_qi_class.cc \
	$(LIDIA_NF_SRCDIR)/instantiate/bv_qi_class_real.cc \
	$(LIDIA_NF_SRCDIR)/instantiate/bv_quadratic_form.cc \
	$(LIDIA_NF_SRCDIR)/instantiate/bv_quadratic_ideal.cc \
	$(LIDIA_NF_SRCDIR)/instantiate/bv_quadratic_number_power_product.cc \
	$(LIDIA_NF_SRCDIR)/instantiate/bv_quadratic_number_standard.cc \
	$(LIDIA_NF_SRCDIR)/instantiate/bv_xbigfloat.cc \
	$(LIDIA_NF_SRCDIR)/instantiate/fact_alg_ideal.cc \
	$(LIDIA_NF_SRCDIR)/instantiate/ht_ideal_node.cc \
	$(LIDIA_NF_SRCDIR)/instantiate/ht_qi_class_real.cc \
	$(LIDIA_NF_SRCDIR)/instantiate/ht_quadratic_form.cc \
	$(LIDIA_NF_SRCDIR)/instantiate/iht_ideal_node.cc \
	$(LIDIA_NF_SRCDIR)/instantiate/iht_qi_class_real.cc \
	$(LIDIA_NF_SRCDIR)/instantiate/lpf_quadratic_number_standard.cc \
	$(LIDIA_NF_SRCDIR)/instantiate/mv_quadratic_number_standard.cc \
	$(LIDIA_NF_SRCDIR)/instantiate/pair_bigint.cc \
	$(LIDIA_NF_SRCDIR)/instantiate/rcl_quadratic_number_power_product_basis.cc \
	$(LIDIA_NF_SRCDIR)/instantiate/sv_p_bigint.cc \
	$(LIDIA_NF_SRCDIR)/instantiate/sv_pp_sf_alg_ideal.cc \
	$(LIDIA_NF_SRCDIR)/quadratic_order/compute_class_group.cc \
	$(LIDIA_NF_SRCDIR)/quadratic_order/matrix/bigint_matrix_qo.cc \
	$(LIDIA_NF_SRCDIR)/quadratic_order/qi_class.cc \
	$(LIDIA_NF_SRCDIR)/quadratic_order/qi_class_real.cc \
	$(LIDIA_NF_SRCDIR)/quadratic_order/qo_list.cc \
	$(LIDIA_NF_SRCDIR)/quadratic_order/qo_sieve.cc \
	$(LIDIA_NF_SRCDIR)/quadratic_order/qo_subexp.cc \
	$(LIDIA_NF_SRCDIR)/quadratic_order/qo_util.cc \
	$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_form.cc \
	$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_ideal.cc \
	$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_ideal_power_product.cc \
	$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_number_logarithm.cc \
	$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_number_power_product.cc \
	$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_number_power_product_basis.cc \
	$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_number_standard.cc \
	$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_order1.cc \
	$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_order2.cc \
	$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_order3.cc

instantincludedir = $(pkgincludedir)/instantiate
specialincludedir = $(pkgincludedir)/specialization
nfincludedir = $(pkgincludedir)/number_fields
instantinclude_HEADERS = \
	$(LIDIA_NF_PKGINCLUDEDIR)/instantiate/power_product.cc

specialinclude_HEADERS = \
	$(LIDIA_NF_PKGINCLUDEDIR)/specialization/alg_ideal.special

nfinclude_HEADERS = \
	$(LIDIA_NF_PKGINCLUDEDIR)/number_fields/partial_relation.h \
	$(LIDIA_NF_PKGINCLUDEDIR)/number_fields/qo_list.h \
	$(LIDIA_NF_PKGINCLUDEDIR)/number_fields/qo_sieve.h \
	$(LIDIA_NF_PKGINCLUDEDIR)/number_fields/qo_util.h \
	$(LIDIA_NF_PKGINCLUDEDIR)/number_fields/sf_alg_ideal.h

pkginclude_HEADERS = \
	$(LIDIA_NF_PKGINCLUDEDIR)/alg_number.h \
	$(LIDIA_NF_PKGINCLUDEDIR)/prime_ideal.h \
	$(LIDIA_NF_PKGINCLUDEDIR)/qi_class.h \
	$(LIDIA_NF_PKGINCLUDEDIR)/qi_class_real.h \
	$(LIDIA_NF_PKGINCLUDEDIR)/quadratic_form.h \
	$(LIDIA_NF_PKGINCLUDEDIR)/quadratic_ideal.h \
	$(LIDIA_NF_PKGINCLUDEDIR)/quadratic_ideal_power_product.h \
	$(LIDIA_NF_PKGINCLUDEDIR)/quadratic_number_logarithm.h \
	$(LIDIA_NF_PKGINCLUDEDIR)/quadratic_number_power_product.h \
	$(LIDIA_NF_PKGINCLUDEDIR)/quadratic_number_power_product_basis.h \
	$(LIDIA_NF_PKGINCLUDEDIR)/quadratic_number_standard.h \
	$(LIDIA_NF_PKGINCLUDEDIR)/quadratic_order.h

EXTRA_DIST = 
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Paths.def $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu library/number_fields/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu library/number_fields/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/Paths.def:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libLiDIA-NF.la: $(libLiDIA_NF_la_OBJECTS) $(libLiDIA_NF_la_DEPENDENCIES) $(EXTRA_libLiDIA_NF_la_DEPENDENCIES) 
	$(CXXLINK)  $(libLiDIA_NF_la_OBJECTS) $(libLiDIA_NF_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/alg_factor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/alg_number.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bigint_matrix_qo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bpf_quadratic_number_standard.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bpp_quadratic_ideal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_bpp_qi_bigint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_p_bigint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_partial_relation.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_pp_sf_alg_ideal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_qi_class.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_qi_class_real.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_quadratic_form.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_quadratic_ideal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_quadratic_number_power_product.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_quadratic_number_standard.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_xbigfloat.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/compute_class_group.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fact_alg_ideal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ht_ideal_node.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ht_qi_class_real.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ht_quadratic_form.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ideal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iht_ideal_node.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iht_qi_class_real.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lpf_quadratic_number_standard.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/module.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mv_quadratic_number_standard.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/order.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pair_bigint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prime_ideal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qi_class.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qi_class_real.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qo_list.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qo_sieve.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qo_subexp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qo_util.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quadratic_form.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quadratic_ideal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quadratic_ideal_power_product.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quadratic_number_logarithm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quadratic_number_power_product.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quadratic_number_power_product_basis.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quadratic_number_standard.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quadratic_order1.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quadratic_order2.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quadratic_order3.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rcl_quadratic_number_power_product_basis.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sf_alg_ideal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sv_p_bigint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sv_pp_sf_alg_ideal.Plo@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

alg_factor.lo: $(LIDIA_NF_SRCDIR)/algebraic_num/alg_factor.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT alg_factor.lo -MD -MP -MF $(DEPDIR)/alg_factor.Tpo -c -o alg_factor.lo `test -f '$(LIDIA_NF_SRCDIR)/algebraic_num/alg_factor.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/algebraic_num/alg_factor.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/alg_factor.Tpo $(DEPDIR)/alg_factor.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/algebraic_num/alg_factor.cc' object='alg_factor.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o alg_factor.lo `test -f '$(LIDIA_NF_SRCDIR)/algebraic_num/alg_factor.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/algebraic_num/alg_factor.cc

alg_number.lo: $(LIDIA_NF_SRCDIR)/algebraic_num/alg_number.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT alg_number.lo -MD -MP -MF $(DEPDIR)/alg_number.Tpo -c -o alg_number.lo `test -f '$(LIDIA_NF_SRCDIR)/algebraic_num/alg_number.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/algebraic_num/alg_number.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/alg_number.Tpo $(DEPDIR)/alg_number.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/algebraic_num/alg_number.cc' object='alg_number.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o alg_number.lo `test -f '$(LIDIA_NF_SRCDIR)/algebraic_num/alg_number.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/algebraic_num/alg_number.cc

sf_alg_ideal.lo: $(LIDIA_NF_SRCDIR)/algebraic_num/factorization/sf_alg_ideal.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sf_alg_ideal.lo -MD -MP -MF $(DEPDIR)/sf_alg_ideal.Tpo -c -o sf_alg_ideal.lo `test -f '$(LIDIA_NF_SRCDIR)/algebraic_num/factorization/sf_alg_ideal.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/algebraic_num/factorization/sf_alg_ideal.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/sf_alg_ideal.Tpo $(DEPDIR)/sf_alg_ideal.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/algebraic_num/factorization/sf_alg_ideal.cc' object='sf_alg_ideal.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sf_alg_ideal.lo `test -f '$(LIDIA_NF_SRCDIR)/algebraic_num/factorization/sf_alg_ideal.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/algebraic_num/factorization/sf_alg_ideal.cc

ideal.lo: $(LIDIA_NF_SRCDIR)/algebraic_num/ideal.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ideal.lo -MD -MP -MF $(DEPDIR)/ideal.Tpo -c -o ideal.lo `test -f '$(LIDIA_NF_SRCDIR)/algebraic_num/ideal.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/algebraic_num/ideal.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ideal.Tpo $(DEPDIR)/ideal.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/algebraic_num/ideal.cc' object='ideal.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ideal.lo `test -f '$(LIDIA_NF_SRCDIR)/algebraic_num/ideal.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/algebraic_num/ideal.cc

module.lo: $(LIDIA_NF_SRCDIR)/algebraic_num/module.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT module.lo -MD -MP -MF $(DEPDIR)/module.Tpo -c -o module.lo `test -f '$(LIDIA_NF_SRCDIR)/algebraic_num/module.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/algebraic_num/module.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/module.Tpo $(DEPDIR)/module.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/algebraic_num/module.cc' object='module.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o module.lo `test -f '$(LIDIA_NF_SRCDIR)/algebraic_num/module.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/algebraic_num/module.cc

order.lo: $(LIDIA_NF_SRCDIR)/algebraic_num/order.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT order.lo -MD -MP -MF $(DEPDIR)/order.Tpo -c -o order.lo `test -f '$(LIDIA_NF_SRCDIR)/algebraic_num/order.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/algebraic_num/order.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/order.Tpo $(DEPDIR)/order.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/algebraic_num/order.cc' object='order.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o order.lo `test -f '$(LIDIA_NF_SRCDIR)/algebraic_num/order.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/algebraic_num/order.cc

prime_ideal.lo: $(LIDIA_NF_SRCDIR)/algebraic_num/prime_ideal.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT prime_ideal.lo -MD -MP -MF $(DEPDIR)/prime_ideal.Tpo -c -o prime_ideal.lo `test -f '$(LIDIA_NF_SRCDIR)/algebraic_num/prime_ideal.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/algebraic_num/prime_ideal.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/prime_ideal.Tpo $(DEPDIR)/prime_ideal.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/algebraic_num/prime_ideal.cc' object='prime_ideal.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o prime_ideal.lo `test -f '$(LIDIA_NF_SRCDIR)/algebraic_num/prime_ideal.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/algebraic_num/prime_ideal.cc

bpf_quadratic_number_standard.lo: $(LIDIA_NF_SRCDIR)/instantiate/bpf_quadratic_number_standard.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bpf_quadratic_number_standard.lo -MD -MP -MF $(DEPDIR)/bpf_quadratic_number_standard.Tpo -c -o bpf_quadratic_number_standard.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/bpf_quadratic_number_standard.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/bpf_quadratic_number_standard.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/bpf_quadratic_number_standard.Tpo $(DEPDIR)/bpf_quadratic_number_standard.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/instantiate/bpf_quadratic_number_standard.cc' object='bpf_quadratic_number_standard.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bpf_quadratic_number_standard.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/bpf_quadratic_number_standard.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/bpf_quadratic_number_standard.cc

bpp_quadratic_ideal.lo: $(LIDIA_NF_SRCDIR)/instantiate/bpp_quadratic_ideal.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bpp_quadratic_ideal.lo -MD -MP -MF $(DEPDIR)/bpp_quadratic_ideal.Tpo -c -o bpp_quadratic_ideal.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/bpp_quadratic_ideal.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/bpp_quadratic_ideal.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/bpp_quadratic_ideal.Tpo $(DEPDIR)/bpp_quadratic_ideal.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/instantiate/bpp_quadratic_ideal.cc' object='bpp_quadratic_ideal.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bpp_quadratic_ideal.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/bpp_quadratic_ideal.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/bpp_quadratic_ideal.cc

bv_bpp_qi_bigint.lo: $(LIDIA_NF_SRCDIR)/instantiate/bv_bpp_qi_bigint.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_bpp_qi_bigint.lo -MD -MP -MF $(DEPDIR)/bv_bpp_qi_bigint.Tpo -c -o bv_bpp_qi_bigint.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/bv_bpp_qi_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/bv_bpp_qi_bigint.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/bv_bpp_qi_bigint.Tpo $(DEPDIR)/bv_bpp_qi_bigint.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/instantiate/bv_bpp_qi_bigint.cc' object='bv_bpp_qi_bigint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_bpp_qi_bigint.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/bv_bpp_qi_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/bv_bpp_qi_bigint.cc

bv_p_bigint.lo: $(LIDIA_NF_SRCDIR)/instantiate/bv_p_bigint.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_p_bigint.lo -MD -MP -MF $(DEPDIR)/bv_p_bigint.Tpo -c -o bv_p_bigint.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/bv_p_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/bv_p_bigint.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/bv_p_bigint.Tpo $(DEPDIR)/bv_p_bigint.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/instantiate/bv_p_bigint.cc' object='bv_p_bigint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_p_bigint.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/bv_p_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/bv_p_bigint.cc

bv_partial_relation.lo: $(LIDIA_NF_SRCDIR)/instantiate/bv_partial_relation.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_partial_relation.lo -MD -MP -MF $(DEPDIR)/bv_partial_relation.Tpo -c -o bv_partial_relation.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/bv_partial_relation.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/bv_partial_relation.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/bv_partial_relation.Tpo $(DEPDIR)/bv_partial_relation.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/instantiate/bv_partial_relation.cc' object='bv_partial_relation.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_partial_relation.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/bv_partial_relation.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/bv_partial_relation.cc

bv_pp_sf_alg_ideal.lo: $(LIDIA_NF_SRCDIR)/instantiate/bv_pp_sf_alg_ideal.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_pp_sf_alg_ideal.lo -MD -MP -MF $(DEPDIR)/bv_pp_sf_alg_ideal.Tpo -c -o bv_pp_sf_alg_ideal.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/bv_pp_sf_alg_ideal.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/bv_pp_sf_alg_ideal.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/bv_pp_sf_alg_ideal.Tpo $(DEPDIR)/bv_pp_sf_alg_ideal.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/instantiate/bv_pp_sf_alg_ideal.cc' object='bv_pp_sf_alg_ideal.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_pp_sf_alg_ideal.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/bv_pp_sf_alg_ideal.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/bv_pp_sf_alg_ideal.cc

bv_qi_class.lo: $(LIDIA_NF_SRCDIR)/instantiate/bv_qi_class.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_qi_class.lo -MD -MP -MF $(DEPDIR)/bv_qi_class.Tpo -c -o bv_qi_class.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/bv_qi_class.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/bv_qi_class.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/bv_qi_class.Tpo $(DEPDIR)/bv_qi_class.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/instantiate/bv_qi_class.cc' object='bv_qi_class.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_qi_class.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/bv_qi_class.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/bv_qi_class.cc

bv_qi_class_real.lo: $(LIDIA_NF_SRCDIR)/instantiate/bv_qi_class_real.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_qi_class_real.lo -MD -MP -MF $(DEPDIR)/bv_qi_class_real.Tpo -c -o bv_qi_class_real.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/bv_qi_class_real.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/bv_qi_class_real.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/bv_qi_class_real.Tpo $(DEPDIR)/bv_qi_class_real.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/instantiate/bv_qi_class_real.cc' object='bv_qi_class_real.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_qi_class_real.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/bv_qi_class_real.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/bv_qi_class_real.cc

bv_quadratic_form.lo: $(LIDIA_NF_SRCDIR)/instantiate/bv_quadratic_form.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_quadratic_form.lo -MD -MP -MF $(DEPDIR)/bv_quadratic_form.Tpo -c -o bv_quadratic_form.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/bv_quadratic_form.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/bv_quadratic_form.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/bv_quadratic_form.Tpo $(DEPDIR)/bv_quadratic_form.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/instantiate/bv_quadratic_form.cc' object='bv_quadratic_form.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_quadratic_form.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/bv_quadratic_form.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/bv_quadratic_form.cc

bv_quadratic_ideal.lo: $(LIDIA_NF_SRCDIR)/instantiate/bv_quadratic_ideal.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_quadratic_ideal.lo -MD -MP -MF $(DEPDIR)/bv_quadratic_ideal.Tpo -c -o bv_quadratic_ideal.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/bv_quadratic_ideal.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/bv_quadratic_ideal.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/bv_quadratic_ideal.Tpo $(DEPDIR)/bv_quadratic_ideal.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/instantiate/bv_quadratic_ideal.cc' object='bv_quadratic_ideal.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_quadratic_ideal.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/bv_quadratic_ideal.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/bv_quadratic_ideal.cc

bv_quadratic_number_power_product.lo: $(LIDIA_NF_SRCDIR)/instantiate/bv_quadratic_number_power_product.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_quadratic_number_power_product.lo -MD -MP -MF $(DEPDIR)/bv_quadratic_number_power_product.Tpo -c -o bv_quadratic_number_power_product.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/bv_quadratic_number_power_product.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/bv_quadratic_number_power_product.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/bv_quadratic_number_power_product.Tpo $(DEPDIR)/bv_quadratic_number_power_product.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/instantiate/bv_quadratic_number_power_product.cc' object='bv_quadratic_number_power_product.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_quadratic_number_power_product.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/bv_quadratic_number_power_product.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/bv_quadratic_number_power_product.cc

bv_quadratic_number_standard.lo: $(LIDIA_NF_SRCDIR)/instantiate/bv_quadratic_number_standard.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_quadratic_number_standard.lo -MD -MP -MF $(DEPDIR)/bv_quadratic_number_standard.Tpo -c -o bv_quadratic_number_standard.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/bv_quadratic_number_standard.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/bv_quadratic_number_standard.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/bv_quadratic_number_standard.Tpo $(DEPDIR)/bv_quadratic_number_standard.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/instantiate/bv_quadratic_number_standard.cc' object='bv_quadratic_number_standard.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_quadratic_number_standard.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/bv_quadratic_number_standard.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/bv_quadratic_number_standard.cc

bv_xbigfloat.lo: $(LIDIA_NF_SRCDIR)/instantiate/bv_xbigfloat.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_xbigfloat.lo -MD -MP -MF $(DEPDIR)/bv_xbigfloat.Tpo -c -o bv_xbigfloat.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/bv_xbigfloat.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/bv_xbigfloat.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/bv_xbigfloat.Tpo $(DEPDIR)/bv_xbigfloat.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/instantiate/bv_xbigfloat.cc' object='bv_xbigfloat.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_xbigfloat.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/bv_xbigfloat.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/bv_xbigfloat.cc

fact_alg_ideal.lo: $(LIDIA_NF_SRCDIR)/instantiate/fact_alg_ideal.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fact_alg_ideal.lo -MD -MP -MF $(DEPDIR)/fact_alg_ideal.Tpo -c -o fact_alg_ideal.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/fact_alg_ideal.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/fact_alg_ideal.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fact_alg_ideal.Tpo $(DEPDIR)/fact_alg_ideal.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/instantiate/fact_alg_ideal.cc' object='fact_alg_ideal.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fact_alg_ideal.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/fact_alg_ideal.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/fact_alg_ideal.cc

ht_ideal_node.lo: $(LIDIA_NF_SRCDIR)/instantiate/ht_ideal_node.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ht_ideal_node.lo -MD -MP -MF $(DEPDIR)/ht_ideal_node.Tpo -c -o ht_ideal_node.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/ht_ideal_node.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/ht_ideal_node.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ht_ideal_node.Tpo $(DEPDIR)/ht_ideal_node.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/instantiate/ht_ideal_node.cc' object='ht_ideal_node.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ht_ideal_node.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/ht_ideal_node.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/ht_ideal_node.cc

ht_qi_class_real.lo: $(LIDIA_NF_SRCDIR)/instantiate/ht_qi_class_real.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ht_qi_class_real.lo -MD -MP -MF $(DEPDIR)/ht_qi_class_real.Tpo -c -o ht_qi_class_real.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/ht_qi_class_real.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/ht_qi_class_real.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ht_qi_class_real.Tpo $(DEPDIR)/ht_qi_class_real.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/instantiate/ht_qi_class_real.cc' object='ht_qi_class_real.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ht_qi_class_real.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/ht_qi_class_real.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/ht_qi_class_real.cc

ht_quadratic_form.lo: $(LIDIA_NF_SRCDIR)/instantiate/ht_quadratic_form.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ht_quadratic_form.lo -MD -MP -MF $(DEPDIR)/ht_quadratic_form.Tpo -c -o ht_quadratic_form.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/ht_quadratic_form.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/ht_quadratic_form.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ht_quadratic_form.Tpo $(DEPDIR)/ht_quadratic_form.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/instantiate/ht_quadratic_form.cc' object='ht_quadratic_form.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ht_quadratic_form.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/ht_quadratic_form.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/ht_quadratic_form.cc

iht_ideal_node.lo: $(LIDIA_NF_SRCDIR)/instantiate/iht_ideal_node.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT iht_ideal_node.lo -MD -MP -MF $(DEPDIR)/iht_ideal_node.Tpo -c -o iht_ideal_node.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/iht_ideal_node.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/iht_ideal_node.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/iht_ideal_node.Tpo $(DEPDIR)/iht_ideal_node.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/instantiate/iht_ideal_node.cc' object='iht_ideal_node.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o iht_ideal_node.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/iht_ideal_node.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/iht_ideal_node.cc

iht_qi_class_real.lo: $(LIDIA_NF_SRCDIR)/instantiate/iht_qi_class_real.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT iht_qi_class_real.lo -MD -MP -MF $(DEPDIR)/iht_qi_class_real.Tpo -c -o iht_qi_class_real.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/iht_qi_class_real.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/iht_qi_class_real.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/iht_qi_class_real.Tpo $(DEPDIR)/iht_qi_class_real.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/instantiate/iht_qi_class_real.cc' object='iht_qi_class_real.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o iht_qi_class_real.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/iht_qi_class_real.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/iht_qi_class_real.cc

lpf_quadratic_number_standard.lo: $(LIDIA_NF_SRCDIR)/instantiate/lpf_quadratic_number_standard.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lpf_quadratic_number_standard.lo -MD -MP -MF $(DEPDIR)/lpf_quadratic_number_standard.Tpo -c -o lpf_quadratic_number_standard.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/lpf_quadratic_number_standard.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/lpf_quadratic_number_standard.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/lpf_quadratic_number_standard.Tpo $(DEPDIR)/lpf_quadratic_number_standard.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/instantiate/lpf_quadratic_number_standard.cc' object='lpf_quadratic_number_standard.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lpf_quadratic_number_standard.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/lpf_quadratic_number_standard.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/lpf_quadratic_number_standard.cc

mv_quadratic_number_standard.lo: $(LIDIA_NF_SRCDIR)/instantiate/mv_quadratic_number_standard.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mv_quadratic_number_standard.lo -MD -MP -MF $(DEPDIR)/mv_quadratic_number_standard.Tpo -c -o mv_quadratic_number_standard.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/mv_quadratic_number_standard.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/mv_quadratic_number_standard.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mv_quadratic_number_standard.Tpo $(DEPDIR)/mv_quadratic_number_standard.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/instantiate/mv_quadratic_number_standard.cc' object='mv_quadratic_number_standard.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mv_quadratic_number_standard.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/mv_quadratic_number_standard.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/mv_quadratic_number_standard.cc

pair_bigint.lo: $(LIDIA_NF_SRCDIR)/instantiate/pair_bigint.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pair_bigint.lo -MD -MP -MF $(DEPDIR)/pair_bigint.Tpo -c -o pair_bigint.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/pair_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/pair_bigint.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/pair_bigint.Tpo $(DEPDIR)/pair_bigint.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/instantiate/pair_bigint.cc' object='pair_bigint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pair_bigint.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/pair_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/pair_bigint.cc

rcl_quadratic_number_power_product_basis.lo: $(LIDIA_NF_SRCDIR)/instantiate/rcl_quadratic_number_power_product_basis.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rcl_quadratic_number_power_product_basis.lo -MD -MP -MF $(DEPDIR)/rcl_quadratic_number_power_product_basis.Tpo -c -o rcl_quadratic_number_power_product_basis.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/rcl_quadratic_number_power_product_basis.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/rcl_quadratic_number_power_product_basis.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/rcl_quadratic_number_power_product_basis.Tpo $(DEPDIR)/rcl_quadratic_number_power_product_basis.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/instantiate/rcl_quadratic_number_power_product_basis.cc' object='rcl_quadratic_number_power_product_basis.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rcl_quadratic_number_power_product_basis.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/rcl_quadratic_number_power_product_basis.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/rcl_quadratic_number_power_product_basis.cc

sv_p_bigint.lo: $(LIDIA_NF_SRCDIR)/instantiate/sv_p_bigint.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sv_p_bigint.lo -MD -MP -MF $(DEPDIR)/sv_p_bigint.Tpo -c -o sv_p_bigint.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/sv_p_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/sv_p_bigint.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/sv_p_bigint.Tpo $(DEPDIR)/sv_p_bigint.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/instantiate/sv_p_bigint.cc' object='sv_p_bigint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sv_p_bigint.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/sv_p_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/sv_p_bigint.cc

sv_pp_sf_alg_ideal.lo: $(LIDIA_NF_SRCDIR)/instantiate/sv_pp_sf_alg_ideal.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sv_pp_sf_alg_ideal.lo -MD -MP -MF $(DEPDIR)/sv_pp_sf_alg_ideal.Tpo -c -o sv_pp_sf_alg_ideal.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/sv_pp_sf_alg_ideal.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/sv_pp_sf_alg_ideal.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/sv_pp_sf_alg_ideal.Tpo $(DEPDIR)/sv_pp_sf_alg_ideal.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/instantiate/sv_pp_sf_alg_ideal.cc' object='sv_pp_sf_alg_ideal.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sv_pp_sf_alg_ideal.lo `test -f '$(LIDIA_NF_SRCDIR)/instantiate/sv_pp_sf_alg_ideal.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/instantiate/sv_pp_sf_alg_ideal.cc

compute_class_group.lo: $(LIDIA_NF_SRCDIR)/quadratic_order/compute_class_group.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compute_class_group.lo -MD -MP -MF $(DEPDIR)/compute_class_group.Tpo -c -o compute_class_group.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/compute_class_group.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/compute_class_group.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/compute_class_group.Tpo $(DEPDIR)/compute_class_group.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/quadratic_order/compute_class_group.cc' object='compute_class_group.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compute_class_group.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/compute_class_group.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/compute_class_group.cc

bigint_matrix_qo.lo: $(LIDIA_NF_SRCDIR)/quadratic_order/matrix/bigint_matrix_qo.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigint_matrix_qo.lo -MD -MP -MF $(DEPDIR)/bigint_matrix_qo.Tpo -c -o bigint_matrix_qo.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/matrix/bigint_matrix_qo.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/matrix/bigint_matrix_qo.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/bigint_matrix_qo.Tpo $(DEPDIR)/bigint_matrix_qo.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/quadratic_order/matrix/bigint_matrix_qo.cc' object='bigint_matrix_qo.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigint_matrix_qo.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/matrix/bigint_matrix_qo.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/matrix/bigint_matrix_qo.cc

qi_class.lo: $(LIDIA_NF_SRCDIR)/quadratic_order/qi_class.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qi_class.lo -MD -MP -MF $(DEPDIR)/qi_class.Tpo -c -o qi_class.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/qi_class.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/qi_class.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/qi_class.Tpo $(DEPDIR)/qi_class.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/quadratic_order/qi_class.cc' object='qi_class.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qi_class.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/qi_class.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/qi_class.cc

qi_class_real.lo: $(LIDIA_NF_SRCDIR)/quadratic_order/qi_class_real.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qi_class_real.lo -MD -MP -MF $(DEPDIR)/qi_class_real.Tpo -c -o qi_class_real.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/qi_class_real.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/qi_class_real.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/qi_class_real.Tpo $(DEPDIR)/qi_class_real.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/quadratic_order/qi_class_real.cc' object='qi_class_real.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qi_class_real.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/qi_class_real.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/qi_class_real.cc

qo_list.lo: $(LIDIA_NF_SRCDIR)/quadratic_order/qo_list.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qo_list.lo -MD -MP -MF $(DEPDIR)/qo_list.Tpo -c -o qo_list.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/qo_list.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/qo_list.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/qo_list.Tpo $(DEPDIR)/qo_list.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/quadratic_order/qo_list.cc' object='qo_list.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qo_list.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/qo_list.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/qo_list.cc

qo_sieve.lo: $(LIDIA_NF_SRCDIR)/quadratic_order/qo_sieve.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qo_sieve.lo -MD -MP -MF $(DEPDIR)/qo_sieve.Tpo -c -o qo_sieve.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/qo_sieve.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/qo_sieve.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/qo_sieve.Tpo $(DEPDIR)/qo_sieve.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/quadratic_order/qo_sieve.cc' object='qo_sieve.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qo_sieve.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/qo_sieve.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/qo_sieve.cc

qo_subexp.lo: $(LIDIA_NF_SRCDIR)/quadratic_order/qo_subexp.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qo_subexp.lo -MD -MP -MF $(DEPDIR)/qo_subexp.Tpo -c -o qo_subexp.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/qo_subexp.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/qo_subexp.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/qo_subexp.Tpo $(DEPDIR)/qo_subexp.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/quadratic_order/qo_subexp.cc' object='qo_subexp.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qo_subexp.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/qo_subexp.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/qo_subexp.cc

qo_util.lo: $(LIDIA_NF_SRCDIR)/quadratic_order/qo_util.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qo_util.lo -MD -MP -MF $(DEPDIR)/qo_util.Tpo -c -o qo_util.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/qo_util.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/qo_util.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/qo_util.Tpo $(DEPDIR)/qo_util.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/quadratic_order/qo_util.cc' object='qo_util.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qo_util.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/qo_util.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/qo_util.cc

quadratic_form.lo: $(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_form.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT quadratic_form.lo -MD -MP -MF $(DEPDIR)/quadratic_form.Tpo -c -o quadratic_form.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_form.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_form.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/quadratic_form.Tpo $(DEPDIR)/quadratic_form.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_form.cc' object='quadratic_form.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o quadratic_form.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_form.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_form.cc

quadratic_ideal.lo: $(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_ideal.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT quadratic_ideal.lo -MD -MP -MF $(DEPDIR)/quadratic_ideal.Tpo -c -o quadratic_ideal.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_ideal.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_ideal.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/quadratic_ideal.Tpo $(DEPDIR)/quadratic_ideal.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_ideal.cc' object='quadratic_ideal.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o quadratic_ideal.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_ideal.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_ideal.cc

quadratic_ideal_power_product.lo: $(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_ideal_power_product.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT quadratic_ideal_power_product.lo -MD -MP -MF $(DEPDIR)/quadratic_ideal_power_product.Tpo -c -o quadratic_ideal_power_product.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_ideal_power_product.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_ideal_power_product.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/quadratic_ideal_power_product.Tpo $(DEPDIR)/quadratic_ideal_power_product.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_ideal_power_product.cc' object='quadratic_ideal_power_product.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o quadratic_ideal_power_product.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_ideal_power_product.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_ideal_power_product.cc

quadratic_number_logarithm.lo: $(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_number_logarithm.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT quadratic_number_logarithm.lo -MD -MP -MF $(DEPDIR)/quadratic_number_logarithm.Tpo -c -o quadratic_number_logarithm.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_number_logarithm.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_number_logarithm.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/quadratic_number_logarithm.Tpo $(DEPDIR)/quadratic_number_logarithm.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_number_logarithm.cc' object='quadratic_number_logarithm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o quadratic_number_logarithm.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_number_logarithm.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_number_logarithm.cc

quadratic_number_power_product.lo: $(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_number_power_product.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT quadratic_number_power_product.lo -MD -MP -MF $(DEPDIR)/quadratic_number_power_product.Tpo -c -o quadratic_number_power_product.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_number_power_product.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_number_power_product.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/quadratic_number_power_product.Tpo $(DEPDIR)/quadratic_number_power_product.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_number_power_product.cc' object='quadratic_number_power_product.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o quadratic_number_power_product.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_number_power_product.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_number_power_product.cc

quadratic_number_power_product_basis.lo: $(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_number_power_product_basis.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT quadratic_number_power_product_basis.lo -MD -MP -MF $(DEPDIR)/quadratic_number_power_product_basis.Tpo -c -o quadratic_number_power_product_basis.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_number_power_product_basis.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_number_power_product_basis.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/quadratic_number_power_product_basis.Tpo $(DEPDIR)/quadratic_number_power_product_basis.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_number_power_product_basis.cc' object='quadratic_number_power_product_basis.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o quadratic_number_power_product_basis.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_number_power_product_basis.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_number_power_product_basis.cc

quadratic_number_standard.lo: $(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_number_standard.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT quadratic_number_standard.lo -MD -MP -MF $(DEPDIR)/quadratic_number_standard.Tpo -c -o quadratic_number_standard.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_number_standard.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_number_standard.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/quadratic_number_standard.Tpo $(DEPDIR)/quadratic_number_standard.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_number_standard.cc' object='quadratic_number_standard.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o quadratic_number_standard.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_number_standard.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_number_standard.cc

quadratic_order1.lo: $(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_order1.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT quadratic_order1.lo -MD -MP -MF $(DEPDIR)/quadratic_order1.Tpo -c -o quadratic_order1.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_order1.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_order1.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/quadratic_order1.Tpo $(DEPDIR)/quadratic_order1.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_order1.cc' object='quadratic_order1.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o quadratic_order1.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_order1.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_order1.cc

quadratic_order2.lo: $(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_order2.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT quadratic_order2.lo -MD -MP -MF $(DEPDIR)/quadratic_order2.Tpo -c -o quadratic_order2.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_order2.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_order2.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/quadratic_order2.Tpo $(DEPDIR)/quadratic_order2.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_order2.cc' object='quadratic_order2.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o quadratic_order2.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_order2.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_order2.cc

quadratic_order3.lo: $(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_order3.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT quadratic_order3.lo -MD -MP -MF $(DEPDIR)/quadratic_order3.Tpo -c -o quadratic_order3.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_order3.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_order3.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/quadratic_order3.Tpo $(DEPDIR)/quadratic_order3.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_order3.cc' object='quadratic_order3.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o quadratic_order3.lo `test -f '$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_order3.cc' || echo '$(srcdir)/'`$(LIDIA_NF_SRCDIR)/quadratic_order/quadratic_order3.cc

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-instantincludeHEADERS: $(instantinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(instantinclude_HEADERS)'; test -n "$(instantincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(instantincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(instantincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(instantincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(instantincludedir)" || exit $$?; \
	done

uninstall-instantincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(instantinclude_HEADERS)'; test -n "$(instantincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(instantincludedir)'; $(am__uninstall_files_from_dir)
install-nfincludeHEADERS: $(nfinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nfinclude_HEADERS)'; test -n "$(nfincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(nfincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(nfincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(nfincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(nfincludedir)" || exit $$?; \
	done

uninstall-nfincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nfinclude_HEADERS)'; test -n "$(nfincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(nfincludedir)'; $(am__uninstall_files_from_dir)
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgincludedir)'; $(am__uninstall_files_from_dir)
install-specialincludeHEADERS: $(specialinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(specialinclude_HEADERS)'; test -n "$(specialincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(specialincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(specialincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(specialincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(specialincludedir)" || exit $$?; \
	done

uninstall-specialincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(specialinclude_HEADERS)'; test -n "$(specialincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(specialincludedir)'; $(am__uninstall_files_from_dir)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(instantincludedir)" "$(DESTDIR)$(nfincludedir)" "$(DESTDIR)$(pkgincludedir)" "$(DESTDIR)$(specialincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-instantincludeHEADERS \
	install-nfincludeHEADERS install-pkgincludeHEADERS \
	install-specialincludeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-instantincludeHEADERS \
	uninstall-nfincludeHEADERS uninstall-pkgincludeHEADERS \
	uninstall-specialincludeHEADERS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook
.MAKE: install-am install-strip uninstall-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-instantincludeHEADERS install-man \
	install-nfincludeHEADERS install-pdf install-pdf-am \
	install-pkgincludeHEADERS install-ps install-ps-am \
	install-specialincludeHEADERS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-hook \
	uninstall-instantincludeHEADERS uninstall-nfincludeHEADERS \
	uninstall-pkgincludeHEADERS uninstall-specialincludeHEADERS


 #

# Remove installation subdirectories after uninstalling, unless left non-empty.
uninstall-hook:
	rmdir	$(DESTDIR)$(instantincludedir) \
		$(DESTDIR)$(specialincludedir) \
		$(DESTDIR)$(nfincludedir) \
		$(DESTDIR)$(pkgincludedir) \
		2>/dev/null; :

# Delete half-made targets when their commands fail
.DELETE_ON_ERROR:

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
