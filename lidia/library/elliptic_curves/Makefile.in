# Makefile.in generated by automake 1.10.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(ecinclude_HEADERS) $(instantinclude_HEADERS) \
	$(pkginclude_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(top_srcdir)/Paths.def
subdir = library/elliptic_curves
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h \
	$(top_builddir)/include/LiDIA/LiDIA.h \
	$(top_builddir)/include/LiDIA/path.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libLiDIA_EC_la_LIBADD =
am_libLiDIA_EC_la_OBJECTS = elliptic_curve_gf_element.lo \
	elliptic_curve_rep_gf_element.lo point_gf_element.lo \
	point_operations_gf_element.lo complex_periods.lo ec_arith.lo \
	elliptic_curve_bigint.lo elliptic_curve_rep_bigint.lo \
	instant_curve_isomorphism.lo instant_ec_bigint.lo \
	kodaira_code.lo minimal_model.lo point_bigint.lo \
	point_operations_bigint.lo quartic.lo reduction_type.lo \
	bv_point_bigint.lo ec_bigrational.lo ec_gf_element.lo
libLiDIA_EC_la_OBJECTS = $(am_libLiDIA_EC_la_OBJECTS)
DEFAULT_INCLUDES = 
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libLiDIA_EC_la_SOURCES)
DIST_SOURCES = $(libLiDIA_EC_la_SOURCES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(ecincludedir)" \
	"$(DESTDIR)$(instantincludedir)" "$(DESTDIR)$(pkgincludedir)"
ecincludeHEADERS_INSTALL = $(INSTALL_HEADER)
instantincludeHEADERS_INSTALL = $(INSTALL_HEADER)
pkgincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(ecinclude_HEADERS) $(instantinclude_HEADERS) \
	$(pkginclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BIBTEX = @BIBTEX@
BUNZIP2 = @BUNZIP2@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
DVIPS = @DVIPS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
GUNZIP = @GUNZIP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LATEX = @LATEX@
LATEX2HTML = @LATEX2HTML@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@

# We don't want to have $(LIBS) in the convenience library.
# FIXME: This is not safe against command-line overrides.
LIBS = 
LIBTOOL = @LIBTOOL@
LIDIA_BASE_XLIBOBJS = @LIDIA_BASE_XLIBOBJS@
LIDIA_BASE_XLTLIBOBJS = @LIDIA_BASE_XLTLIBOBJS@
LIDIA_LTCLIBS = @LIDIA_LTCLIBS@
LIDIA_LT_XLIBOBJS = @LIDIA_LT_XLIBOBJS@
LIDIA_LT_XLTLIBOBJS = @LIDIA_LT_XLTLIBOBJS@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINDEX = @MAKEINDEX@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PDFLATEX = @PDFLATEX@
PKG_DIRS = @PKG_DIRS@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TEXI2DVI = @TEXI2DVI@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = 1.5 nostdinc
ETAGS_ARGS = -C -l c++

#
# Use the following prefix for stuff that is normally found in ${top_srcdir}
# but must be specified in a simple-minded fashion (i.e. ${top_builddir}).
# Note that the normal path can be made by prepending ${srcdir}/,
# though that results in weird paths like ../../../library/base/../../xxx.
#
topdir = ${top_builddir}

#
# Main directories of the LiDIA packages
#
LIDIA_DATADIR = ${topdir}/share
LIDIA_PKGDATADIR = ${LIDIA_DATADIR}/LiDIA
LIDIA_CONFIG_LINKDIR = ${top_builddir}/src/base/interfaces
LIDIA_CONFIG_SRCDIR = ${topdir}/src/interfaces
LIDIA_CONFIG_INCLUDEDIR = ${top_builddir}/include
LIDIA_CONFIG_PKGINCLUDEDIR = ${LIDIA_CONFIG_INCLUDEDIR}/LiDIA
LIDIA_PORTAB_SRCDIR = ${topdir}/src/portability
LIDIA_BASE_SRCDIR = ${topdir}/src/base
LIDIA_BASE_INCLUDEDIR = ${LIDIA_BASE_SRCDIR}/include
LIDIA_BASE_PKGINCLUDEDIR = ${LIDIA_BASE_INCLUDEDIR}/LiDIA
LIDIA_FF_SRCDIR = ${topdir}/src/finite_fields
LIDIA_FF_INCLUDEDIR = ${LIDIA_FF_SRCDIR}/include
LIDIA_FF_PKGINCLUDEDIR = ${LIDIA_FF_INCLUDEDIR}/LiDIA
LIDIA_LA_SRCDIR = ${topdir}/src/linear_algebra
LIDIA_LA_INCLUDEDIR = ${LIDIA_LA_SRCDIR}/include
LIDIA_LA_PKGINCLUDEDIR = ${LIDIA_LA_INCLUDEDIR}/LiDIA
LIDIA_LT_SRCDIR = ${topdir}/src/lattices
LIDIA_LT_INCLUDEDIR = ${LIDIA_LT_SRCDIR}/include
LIDIA_LT_PKGINCLUDEDIR = ${LIDIA_LT_INCLUDEDIR}/LiDIA
LIDIA_NF_SRCDIR = ${topdir}/src/number_fields
LIDIA_NF_INCLUDEDIR = ${LIDIA_NF_SRCDIR}/include
LIDIA_NF_PKGINCLUDEDIR = ${LIDIA_NF_INCLUDEDIR}/LiDIA
LIDIA_EC_SRCDIR = ${topdir}/src/elliptic_curves
LIDIA_EC_INCLUDEDIR = ${LIDIA_EC_SRCDIR}/include
LIDIA_EC_PKGINCLUDEDIR = ${LIDIA_EC_INCLUDEDIR}/LiDIA
LIDIA_ECO_SRCDIR = ${topdir}/src/ec_order
LIDIA_ECO_INCLUDEDIR = ${LIDIA_ECO_SRCDIR}/include
LIDIA_ECO_PKGINCLUDEDIR = ${LIDIA_ECO_INCLUDEDIR}/LiDIA
LIDIA_GEC_SRCDIR = ${topdir}/src/gec
LIDIA_GEC_INCLUDEDIR = ${LIDIA_GEC_SRCDIR}/include
LIDIA_GEC_PKGINCLUDEDIR = ${LIDIA_GEC_INCLUDEDIR}/LiDIA

#
# Path to the Libtool library libLiDIA.la resulting from the build
#
LIDIA_LTLIB = ${top_builddir}/library/libLiDIA.la

#
# libLiDIA's version info for Libtool,
# specified as a triplet CURRENT:REVISION:AGE of non-negative integers.
# CURRENT identifies the set of object interfaces exported by the library.
# REVISION specifies CURRENT's implementation release number.
# AGE specifies how many interface sets preceding CURRENT are supported.
# The precise meaning of the version info numbers is defined in the Libtool
# texinfo manual, together with rules for updating them.
# Never try to achieve similarity with the package version!
#
LIDIA_LTVERSION = 7:0:0

#
# Paths to each package's Libtool convenience library.
# The configure-determined variable LIDIA_LTCLIBS refers
# to a subset of these variables.
#
LIDIA_BASE_LTCLIB = ${top_builddir}/library/base/libLiDIA-base.la
LIDIA_FF_LTCLIB = ${top_builddir}/library/finite_fields/libLiDIA-FF.la
LIDIA_LA_LTCLIB = ${top_builddir}/library/linear_algebra/libLiDIA-LA.la
LIDIA_LT_LTCLIB = ${top_builddir}/library/lattices/libLiDIA-LT.la
LIDIA_NF_LTCLIB = ${top_builddir}/library/number_fields/libLiDIA-NF.la
LIDIA_EC_LTCLIB = ${top_builddir}/library/elliptic_curves/libLiDIA-EC.la
LIDIA_ECO_LTCLIB = ${top_builddir}/library/ec_order/libLiDIA-ECO.la
LIDIA_GEC_LTCLIB = ${top_builddir}/library/gec/libLiDIA-GEC.la
AM_CPPFLAGS = \
	-I$(LIDIA_CONFIG_INCLUDEDIR) \
	-I$(LIDIA_BASE_INCLUDEDIR) -I$(srcdir)/$(LIDIA_BASE_INCLUDEDIR) \
	-I$(LIDIA_FF_INCLUDEDIR) -I$(srcdir)/$(LIDIA_FF_INCLUDEDIR) \
	-I$(LIDIA_LA_INCLUDEDIR) -I$(srcdir)/$(LIDIA_LA_INCLUDEDIR) \
	-I$(LIDIA_EC_INCLUDEDIR) -I$(srcdir)/$(LIDIA_EC_INCLUDEDIR)

noinst_LTLIBRARIES = libLiDIA-EC.la
libLiDIA_EC_la_SOURCES = \
	$(LIDIA_EC_SRCDIR)/ec_finite_fields/elliptic_curve_gf_element.cc \
	$(LIDIA_EC_SRCDIR)/ec_finite_fields/elliptic_curve_rep_gf_element.cc \
	$(LIDIA_EC_SRCDIR)/ec_finite_fields/point_gf_element.cc \
	$(LIDIA_EC_SRCDIR)/ec_finite_fields/point_operations_gf_element.cc \
	$(LIDIA_EC_SRCDIR)/ec_rationals/complex_periods.cc \
	$(LIDIA_EC_SRCDIR)/ec_rationals/ec_arith.cc \
	$(LIDIA_EC_SRCDIR)/ec_rationals/elliptic_curve_bigint.cc \
	$(LIDIA_EC_SRCDIR)/ec_rationals/elliptic_curve_rep_bigint.cc \
	$(LIDIA_EC_SRCDIR)/ec_rationals/instant_curve_isomorphism.cc \
	$(LIDIA_EC_SRCDIR)/ec_rationals/instant_ec_bigint.cc \
	$(LIDIA_EC_SRCDIR)/ec_rationals/kodaira_code.cc \
	$(LIDIA_EC_SRCDIR)/ec_rationals/minimal_model.cc \
	$(LIDIA_EC_SRCDIR)/ec_rationals/point_bigint.cc \
	$(LIDIA_EC_SRCDIR)/ec_rationals/point_operations_bigint.cc \
	$(LIDIA_EC_SRCDIR)/ec_rationals/quartic.cc \
	$(LIDIA_EC_SRCDIR)/ec_rationals/reduction_type.cc \
	$(LIDIA_EC_SRCDIR)/instantiate/bv_point_bigint.cc \
	$(LIDIA_EC_SRCDIR)/instantiate/ec_bigrational.cc \
	$(LIDIA_EC_SRCDIR)/instantiate/ec_gf_element.cc

instantincludedir = $(pkgincludedir)/instantiate
ecincludedir = $(pkgincludedir)/elliptic_curves
instantinclude_HEADERS = \
	$(LIDIA_EC_PKGINCLUDEDIR)/instantiate/ec_finite_fields.cc \
	$(LIDIA_EC_PKGINCLUDEDIR)/instantiate/ec_rationals.cc

ecinclude_HEADERS = \
	$(LIDIA_EC_PKGINCLUDEDIR)/elliptic_curves/base_elliptic_curve.cc \
	$(LIDIA_EC_PKGINCLUDEDIR)/elliptic_curves/base_elliptic_curve.h \
	$(LIDIA_EC_PKGINCLUDEDIR)/elliptic_curves/base_elliptic_curve_rep.cc \
	$(LIDIA_EC_PKGINCLUDEDIR)/elliptic_curves/base_elliptic_curve_rep.h \
	$(LIDIA_EC_PKGINCLUDEDIR)/elliptic_curves/base_point.cc \
	$(LIDIA_EC_PKGINCLUDEDIR)/elliptic_curves/base_point.h \
	$(LIDIA_EC_PKGINCLUDEDIR)/elliptic_curves/ec_arith.h \
	$(LIDIA_EC_PKGINCLUDEDIR)/elliptic_curves/elliptic_curve_rep.cc \
	$(LIDIA_EC_PKGINCLUDEDIR)/elliptic_curves/elliptic_curve_rep.h \
	$(LIDIA_EC_PKGINCLUDEDIR)/elliptic_curves/elliptic_curve_rep_bigint.h \
	$(LIDIA_EC_PKGINCLUDEDIR)/elliptic_curves/point_operations.cc \
	$(LIDIA_EC_PKGINCLUDEDIR)/elliptic_curves/point_operations.h \
	$(LIDIA_EC_PKGINCLUDEDIR)/elliptic_curves/point_operations_bigint.h

pkginclude_HEADERS = \
	$(LIDIA_EC_PKGINCLUDEDIR)/complex_periods.h \
	$(LIDIA_EC_PKGINCLUDEDIR)/curve_isomorphism.cc \
	$(LIDIA_EC_PKGINCLUDEDIR)/curve_isomorphism.h \
	$(LIDIA_EC_PKGINCLUDEDIR)/elliptic_curve.cc \
	$(LIDIA_EC_PKGINCLUDEDIR)/elliptic_curve.h \
	$(LIDIA_EC_PKGINCLUDEDIR)/elliptic_curve_bigint.h \
	$(LIDIA_EC_PKGINCLUDEDIR)/elliptic_curve_flags.h \
	$(LIDIA_EC_PKGINCLUDEDIR)/kodaira_code.h \
	$(LIDIA_EC_PKGINCLUDEDIR)/minimal_model.h \
	$(LIDIA_EC_PKGINCLUDEDIR)/point.cc \
	$(LIDIA_EC_PKGINCLUDEDIR)/point.h \
	$(LIDIA_EC_PKGINCLUDEDIR)/point_bigint.h \
	$(LIDIA_EC_PKGINCLUDEDIR)/quartic.h \
	$(LIDIA_EC_PKGINCLUDEDIR)/reduction_type.h

EXTRA_DIST = 
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Paths.def $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  library/elliptic_curves/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  library/elliptic_curves/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libLiDIA-EC.la: $(libLiDIA_EC_la_OBJECTS) $(libLiDIA_EC_la_DEPENDENCIES) 
	$(CXXLINK)  $(libLiDIA_EC_la_OBJECTS) $(libLiDIA_EC_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_point_bigint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/complex_periods.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ec_arith.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ec_bigrational.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ec_gf_element.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elliptic_curve_bigint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elliptic_curve_gf_element.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elliptic_curve_rep_bigint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elliptic_curve_rep_gf_element.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/instant_curve_isomorphism.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/instant_ec_bigint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kodaira_code.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/minimal_model.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/point_bigint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/point_gf_element.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/point_operations_bigint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/point_operations_gf_element.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quartic.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reduction_type.Plo@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

elliptic_curve_gf_element.lo: $(LIDIA_EC_SRCDIR)/ec_finite_fields/elliptic_curve_gf_element.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT elliptic_curve_gf_element.lo -MD -MP -MF $(DEPDIR)/elliptic_curve_gf_element.Tpo -c -o elliptic_curve_gf_element.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_finite_fields/elliptic_curve_gf_element.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_finite_fields/elliptic_curve_gf_element.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/elliptic_curve_gf_element.Tpo $(DEPDIR)/elliptic_curve_gf_element.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_EC_SRCDIR)/ec_finite_fields/elliptic_curve_gf_element.cc' object='elliptic_curve_gf_element.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o elliptic_curve_gf_element.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_finite_fields/elliptic_curve_gf_element.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_finite_fields/elliptic_curve_gf_element.cc

elliptic_curve_rep_gf_element.lo: $(LIDIA_EC_SRCDIR)/ec_finite_fields/elliptic_curve_rep_gf_element.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT elliptic_curve_rep_gf_element.lo -MD -MP -MF $(DEPDIR)/elliptic_curve_rep_gf_element.Tpo -c -o elliptic_curve_rep_gf_element.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_finite_fields/elliptic_curve_rep_gf_element.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_finite_fields/elliptic_curve_rep_gf_element.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/elliptic_curve_rep_gf_element.Tpo $(DEPDIR)/elliptic_curve_rep_gf_element.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_EC_SRCDIR)/ec_finite_fields/elliptic_curve_rep_gf_element.cc' object='elliptic_curve_rep_gf_element.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o elliptic_curve_rep_gf_element.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_finite_fields/elliptic_curve_rep_gf_element.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_finite_fields/elliptic_curve_rep_gf_element.cc

point_gf_element.lo: $(LIDIA_EC_SRCDIR)/ec_finite_fields/point_gf_element.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT point_gf_element.lo -MD -MP -MF $(DEPDIR)/point_gf_element.Tpo -c -o point_gf_element.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_finite_fields/point_gf_element.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_finite_fields/point_gf_element.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/point_gf_element.Tpo $(DEPDIR)/point_gf_element.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_EC_SRCDIR)/ec_finite_fields/point_gf_element.cc' object='point_gf_element.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o point_gf_element.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_finite_fields/point_gf_element.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_finite_fields/point_gf_element.cc

point_operations_gf_element.lo: $(LIDIA_EC_SRCDIR)/ec_finite_fields/point_operations_gf_element.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT point_operations_gf_element.lo -MD -MP -MF $(DEPDIR)/point_operations_gf_element.Tpo -c -o point_operations_gf_element.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_finite_fields/point_operations_gf_element.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_finite_fields/point_operations_gf_element.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/point_operations_gf_element.Tpo $(DEPDIR)/point_operations_gf_element.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_EC_SRCDIR)/ec_finite_fields/point_operations_gf_element.cc' object='point_operations_gf_element.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o point_operations_gf_element.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_finite_fields/point_operations_gf_element.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_finite_fields/point_operations_gf_element.cc

complex_periods.lo: $(LIDIA_EC_SRCDIR)/ec_rationals/complex_periods.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT complex_periods.lo -MD -MP -MF $(DEPDIR)/complex_periods.Tpo -c -o complex_periods.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_rationals/complex_periods.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_rationals/complex_periods.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/complex_periods.Tpo $(DEPDIR)/complex_periods.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_EC_SRCDIR)/ec_rationals/complex_periods.cc' object='complex_periods.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o complex_periods.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_rationals/complex_periods.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_rationals/complex_periods.cc

ec_arith.lo: $(LIDIA_EC_SRCDIR)/ec_rationals/ec_arith.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ec_arith.lo -MD -MP -MF $(DEPDIR)/ec_arith.Tpo -c -o ec_arith.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_rationals/ec_arith.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_rationals/ec_arith.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ec_arith.Tpo $(DEPDIR)/ec_arith.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_EC_SRCDIR)/ec_rationals/ec_arith.cc' object='ec_arith.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ec_arith.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_rationals/ec_arith.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_rationals/ec_arith.cc

elliptic_curve_bigint.lo: $(LIDIA_EC_SRCDIR)/ec_rationals/elliptic_curve_bigint.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT elliptic_curve_bigint.lo -MD -MP -MF $(DEPDIR)/elliptic_curve_bigint.Tpo -c -o elliptic_curve_bigint.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_rationals/elliptic_curve_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_rationals/elliptic_curve_bigint.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/elliptic_curve_bigint.Tpo $(DEPDIR)/elliptic_curve_bigint.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_EC_SRCDIR)/ec_rationals/elliptic_curve_bigint.cc' object='elliptic_curve_bigint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o elliptic_curve_bigint.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_rationals/elliptic_curve_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_rationals/elliptic_curve_bigint.cc

elliptic_curve_rep_bigint.lo: $(LIDIA_EC_SRCDIR)/ec_rationals/elliptic_curve_rep_bigint.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT elliptic_curve_rep_bigint.lo -MD -MP -MF $(DEPDIR)/elliptic_curve_rep_bigint.Tpo -c -o elliptic_curve_rep_bigint.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_rationals/elliptic_curve_rep_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_rationals/elliptic_curve_rep_bigint.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/elliptic_curve_rep_bigint.Tpo $(DEPDIR)/elliptic_curve_rep_bigint.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_EC_SRCDIR)/ec_rationals/elliptic_curve_rep_bigint.cc' object='elliptic_curve_rep_bigint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o elliptic_curve_rep_bigint.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_rationals/elliptic_curve_rep_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_rationals/elliptic_curve_rep_bigint.cc

instant_curve_isomorphism.lo: $(LIDIA_EC_SRCDIR)/ec_rationals/instant_curve_isomorphism.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT instant_curve_isomorphism.lo -MD -MP -MF $(DEPDIR)/instant_curve_isomorphism.Tpo -c -o instant_curve_isomorphism.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_rationals/instant_curve_isomorphism.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_rationals/instant_curve_isomorphism.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/instant_curve_isomorphism.Tpo $(DEPDIR)/instant_curve_isomorphism.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_EC_SRCDIR)/ec_rationals/instant_curve_isomorphism.cc' object='instant_curve_isomorphism.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o instant_curve_isomorphism.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_rationals/instant_curve_isomorphism.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_rationals/instant_curve_isomorphism.cc

instant_ec_bigint.lo: $(LIDIA_EC_SRCDIR)/ec_rationals/instant_ec_bigint.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT instant_ec_bigint.lo -MD -MP -MF $(DEPDIR)/instant_ec_bigint.Tpo -c -o instant_ec_bigint.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_rationals/instant_ec_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_rationals/instant_ec_bigint.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/instant_ec_bigint.Tpo $(DEPDIR)/instant_ec_bigint.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_EC_SRCDIR)/ec_rationals/instant_ec_bigint.cc' object='instant_ec_bigint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o instant_ec_bigint.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_rationals/instant_ec_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_rationals/instant_ec_bigint.cc

kodaira_code.lo: $(LIDIA_EC_SRCDIR)/ec_rationals/kodaira_code.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kodaira_code.lo -MD -MP -MF $(DEPDIR)/kodaira_code.Tpo -c -o kodaira_code.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_rationals/kodaira_code.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_rationals/kodaira_code.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/kodaira_code.Tpo $(DEPDIR)/kodaira_code.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_EC_SRCDIR)/ec_rationals/kodaira_code.cc' object='kodaira_code.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kodaira_code.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_rationals/kodaira_code.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_rationals/kodaira_code.cc

minimal_model.lo: $(LIDIA_EC_SRCDIR)/ec_rationals/minimal_model.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT minimal_model.lo -MD -MP -MF $(DEPDIR)/minimal_model.Tpo -c -o minimal_model.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_rationals/minimal_model.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_rationals/minimal_model.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/minimal_model.Tpo $(DEPDIR)/minimal_model.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_EC_SRCDIR)/ec_rationals/minimal_model.cc' object='minimal_model.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o minimal_model.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_rationals/minimal_model.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_rationals/minimal_model.cc

point_bigint.lo: $(LIDIA_EC_SRCDIR)/ec_rationals/point_bigint.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT point_bigint.lo -MD -MP -MF $(DEPDIR)/point_bigint.Tpo -c -o point_bigint.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_rationals/point_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_rationals/point_bigint.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/point_bigint.Tpo $(DEPDIR)/point_bigint.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_EC_SRCDIR)/ec_rationals/point_bigint.cc' object='point_bigint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o point_bigint.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_rationals/point_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_rationals/point_bigint.cc

point_operations_bigint.lo: $(LIDIA_EC_SRCDIR)/ec_rationals/point_operations_bigint.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT point_operations_bigint.lo -MD -MP -MF $(DEPDIR)/point_operations_bigint.Tpo -c -o point_operations_bigint.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_rationals/point_operations_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_rationals/point_operations_bigint.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/point_operations_bigint.Tpo $(DEPDIR)/point_operations_bigint.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_EC_SRCDIR)/ec_rationals/point_operations_bigint.cc' object='point_operations_bigint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o point_operations_bigint.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_rationals/point_operations_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_rationals/point_operations_bigint.cc

quartic.lo: $(LIDIA_EC_SRCDIR)/ec_rationals/quartic.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT quartic.lo -MD -MP -MF $(DEPDIR)/quartic.Tpo -c -o quartic.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_rationals/quartic.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_rationals/quartic.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/quartic.Tpo $(DEPDIR)/quartic.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_EC_SRCDIR)/ec_rationals/quartic.cc' object='quartic.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o quartic.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_rationals/quartic.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_rationals/quartic.cc

reduction_type.lo: $(LIDIA_EC_SRCDIR)/ec_rationals/reduction_type.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT reduction_type.lo -MD -MP -MF $(DEPDIR)/reduction_type.Tpo -c -o reduction_type.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_rationals/reduction_type.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_rationals/reduction_type.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/reduction_type.Tpo $(DEPDIR)/reduction_type.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_EC_SRCDIR)/ec_rationals/reduction_type.cc' object='reduction_type.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o reduction_type.lo `test -f '$(LIDIA_EC_SRCDIR)/ec_rationals/reduction_type.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/ec_rationals/reduction_type.cc

bv_point_bigint.lo: $(LIDIA_EC_SRCDIR)/instantiate/bv_point_bigint.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_point_bigint.lo -MD -MP -MF $(DEPDIR)/bv_point_bigint.Tpo -c -o bv_point_bigint.lo `test -f '$(LIDIA_EC_SRCDIR)/instantiate/bv_point_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/instantiate/bv_point_bigint.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bv_point_bigint.Tpo $(DEPDIR)/bv_point_bigint.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_EC_SRCDIR)/instantiate/bv_point_bigint.cc' object='bv_point_bigint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_point_bigint.lo `test -f '$(LIDIA_EC_SRCDIR)/instantiate/bv_point_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/instantiate/bv_point_bigint.cc

ec_bigrational.lo: $(LIDIA_EC_SRCDIR)/instantiate/ec_bigrational.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ec_bigrational.lo -MD -MP -MF $(DEPDIR)/ec_bigrational.Tpo -c -o ec_bigrational.lo `test -f '$(LIDIA_EC_SRCDIR)/instantiate/ec_bigrational.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/instantiate/ec_bigrational.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ec_bigrational.Tpo $(DEPDIR)/ec_bigrational.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_EC_SRCDIR)/instantiate/ec_bigrational.cc' object='ec_bigrational.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ec_bigrational.lo `test -f '$(LIDIA_EC_SRCDIR)/instantiate/ec_bigrational.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/instantiate/ec_bigrational.cc

ec_gf_element.lo: $(LIDIA_EC_SRCDIR)/instantiate/ec_gf_element.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ec_gf_element.lo -MD -MP -MF $(DEPDIR)/ec_gf_element.Tpo -c -o ec_gf_element.lo `test -f '$(LIDIA_EC_SRCDIR)/instantiate/ec_gf_element.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/instantiate/ec_gf_element.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ec_gf_element.Tpo $(DEPDIR)/ec_gf_element.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_EC_SRCDIR)/instantiate/ec_gf_element.cc' object='ec_gf_element.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ec_gf_element.lo `test -f '$(LIDIA_EC_SRCDIR)/instantiate/ec_gf_element.cc' || echo '$(srcdir)/'`$(LIDIA_EC_SRCDIR)/instantiate/ec_gf_element.cc

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-ecincludeHEADERS: $(ecinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(ecincludedir)" || $(MKDIR_P) "$(DESTDIR)$(ecincludedir)"
	@list='$(ecinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(ecincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(ecincludedir)/$$f'"; \
	  $(ecincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(ecincludedir)/$$f"; \
	done

uninstall-ecincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(ecinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(ecincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(ecincludedir)/$$f"; \
	done
install-instantincludeHEADERS: $(instantinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(instantincludedir)" || $(MKDIR_P) "$(DESTDIR)$(instantincludedir)"
	@list='$(instantinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(instantincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(instantincludedir)/$$f'"; \
	  $(instantincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(instantincludedir)/$$f"; \
	done

uninstall-instantincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(instantinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(instantincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(instantincludedir)/$$f"; \
	done
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(pkgincludedir)" || $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)"
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(pkgincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(pkgincludedir)/$$f'"; \
	  $(pkgincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(pkgincludedir)/$$f"; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(pkgincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(pkgincludedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(ecincludedir)" "$(DESTDIR)$(instantincludedir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-ecincludeHEADERS \
	install-instantincludeHEADERS install-pkgincludeHEADERS

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-ecincludeHEADERS \
	uninstall-instantincludeHEADERS uninstall-pkgincludeHEADERS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook

.MAKE: install-am install-strip uninstall-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-ecincludeHEADERS install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-instantincludeHEADERS install-man \
	install-pdf install-pdf-am install-pkgincludeHEADERS \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-ecincludeHEADERS \
	uninstall-hook uninstall-instantincludeHEADERS \
	uninstall-pkgincludeHEADERS


 #

# Remove installation subdirectories after uninstalling, unless left non-empty.
uninstall-hook:
	rmdir	$(DESTDIR)$(instantincludedir) \
		$(DESTDIR)$(ecincludedir) \
		$(DESTDIR)$(pkgincludedir) \
		2>/dev/null; :

# Delete half-made targets when their commands fail
.DELETE_ON_ERROR:
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
