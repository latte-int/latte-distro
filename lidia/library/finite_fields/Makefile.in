# Makefile.in generated by automake 1.10.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(dist_pkgdata_DATA) $(ffinclude_HEADERS) \
	$(instantinclude_HEADERS) $(pkginclude_HEADERS) \
	$(specialinclude_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(top_srcdir)/Paths.def
subdir = library/finite_fields
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h \
	$(top_builddir)/include/LiDIA/LiDIA.h \
	$(top_builddir)/include/LiDIA/path.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libLiDIA_FF_la_LIBADD =
am_libLiDIA_FF_la_OBJECTS = Fp_pol_arithmetic.lo Fp_pol_tools.lo \
	Fp_poly_modulus.lo Fp_poly_multiplier.lo Fp_polynomial.lo \
	compose.lo crossover_class.lo factoring.lo fft_arith.lo \
	fft_reps.lo fractions.lo gcd.lo plain_arith.lo \
	poly_argument.lo poly_matrix.lo Fp_rational_function.lo dlp.lo \
	Fp_factor.lo Fp_factor_generic.lo berlekamp.lo binomial.lo \
	canzass.lo ddf.lo edf.lo find_factors.lo old_ddf.lo \
	squarefree.lo checked_min_poly.lo gf_berlekamp.lo \
	gf_can_zass.lo gf_fact_util.lo gf_factor.lo gf_squarefree.lo \
	sf_Fp_polynomial.lo sf_gf_polynomial.lo bit_reverse_table.lo \
	fft_prime.lo gf2n.lo gf2nIO.lo gf2n_init.lo gf2n_invert.lo \
	gf2n_lib.lo gf2n_mult.lo gf2n_reduce.lo gf2nin.lo gf2nout.lo \
	gf2n_find_root.lo gf2n_poly_karatzuba.lo gf2n_poly_modulus.lo \
	gf2n_poly_remainder.lo gf2n_polynomial.lo \
	gf2n_rational_function.lo gf_pol_arith.lo gf_pol_instant.lo \
	gf_pol_util.lo gf_poly_argument.lo gf_poly_modulus.lo \
	gf_polynomial.lo galois_field.lo galois_field_iterator.lo \
	galois_field_rep.lo gf_element.lo gf_rep_GF2n.lo gf_rep_GFp.lo \
	gf_rep_GFpn.lo info_gf2n.lo info_gf2n_inv.lo info_gf2n_mul.lo \
	info_gf2n_red.lo bpf_gf2n.lo bpf_gf_element.lo \
	bv_Fp_polynomial.lo bv_gf2n.lo bv_gf_element.lo \
	bv_pp_sf_Fp_polynomial.lo bv_pp_sf_gf_polynomial.lo \
	bv_spc_bigint.lo bv_spc_bigmod.lo bv_spc_bigrational.lo \
	bv_spc_udigit_mod.lo dpsr_bigint.lo dpsr_bigrational.lo \
	fact_Fp_polynomial.lo fact_gf_polynomial.lo lpf_gf2n.lo \
	spsr_bigint.lo spsr_bigrational.lo spsr_udigit_mod.lo \
	sv_pp_sf_Fp_polynomial.lo sv_pp_sf_gf_polynomial.lo \
	sv_spc_bigint.lo sv_spc_bigmod.lo sv_spc_bigrational.lo \
	sv_spc_udigit_mod.lo dpsr_bigmod.lo dpsr_udigit_mod.lo \
	spsr_bigmod.lo
libLiDIA_FF_la_OBJECTS = $(am_libLiDIA_FF_la_OBJECTS)
DEFAULT_INCLUDES = 
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libLiDIA_FF_la_SOURCES)
DIST_SOURCES = $(libLiDIA_FF_la_SOURCES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(pkgdatadir)" \
	"$(DESTDIR)$(ffincludedir)" "$(DESTDIR)$(instantincludedir)" \
	"$(DESTDIR)$(pkgincludedir)" "$(DESTDIR)$(specialincludedir)"
dist_pkgdataDATA_INSTALL = $(INSTALL_DATA)
DATA = $(dist_pkgdata_DATA)
ffincludeHEADERS_INSTALL = $(INSTALL_HEADER)
instantincludeHEADERS_INSTALL = $(INSTALL_HEADER)
pkgincludeHEADERS_INSTALL = $(INSTALL_HEADER)
specialincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(ffinclude_HEADERS) $(instantinclude_HEADERS) \
	$(pkginclude_HEADERS) $(specialinclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BIBTEX = @BIBTEX@
BUNZIP2 = @BUNZIP2@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
DVIPS = @DVIPS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
GUNZIP = @GUNZIP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LATEX = @LATEX@
LATEX2HTML = @LATEX2HTML@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@

# We don't want to have $(LIBS) in the convenience library.
# FIXME: This is not safe against command-line overrides.
LIBS = 
LIBTOOL = @LIBTOOL@
LIDIA_BASE_XLIBOBJS = @LIDIA_BASE_XLIBOBJS@
LIDIA_BASE_XLTLIBOBJS = @LIDIA_BASE_XLTLIBOBJS@
LIDIA_LTCLIBS = @LIDIA_LTCLIBS@
LIDIA_LT_XLIBOBJS = @LIDIA_LT_XLIBOBJS@
LIDIA_LT_XLTLIBOBJS = @LIDIA_LT_XLTLIBOBJS@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINDEX = @MAKEINDEX@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PDFLATEX = @PDFLATEX@
PKG_DIRS = @PKG_DIRS@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TEXI2DVI = @TEXI2DVI@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = 1.5 nostdinc
ETAGS_ARGS = -C -l c++

#
# Use the following prefix for stuff that is normally found in ${top_srcdir}
# but must be specified in a simple-minded fashion (i.e. ${top_builddir}).
# Note that the normal path can be made by prepending ${srcdir}/,
# though that results in weird paths like ../../../library/base/../../xxx.
#
topdir = ${top_builddir}

#
# Main directories of the LiDIA packages
#
LIDIA_DATADIR = ${topdir}/share
LIDIA_PKGDATADIR = ${LIDIA_DATADIR}/LiDIA
LIDIA_CONFIG_LINKDIR = ${top_builddir}/src/base/interfaces
LIDIA_CONFIG_SRCDIR = ${topdir}/src/interfaces
LIDIA_CONFIG_INCLUDEDIR = ${top_builddir}/include
LIDIA_CONFIG_PKGINCLUDEDIR = ${LIDIA_CONFIG_INCLUDEDIR}/LiDIA
LIDIA_PORTAB_SRCDIR = ${topdir}/src/portability
LIDIA_BASE_SRCDIR = ${topdir}/src/base
LIDIA_BASE_INCLUDEDIR = ${LIDIA_BASE_SRCDIR}/include
LIDIA_BASE_PKGINCLUDEDIR = ${LIDIA_BASE_INCLUDEDIR}/LiDIA
LIDIA_FF_SRCDIR = ${topdir}/src/finite_fields
LIDIA_FF_INCLUDEDIR = ${LIDIA_FF_SRCDIR}/include
LIDIA_FF_PKGINCLUDEDIR = ${LIDIA_FF_INCLUDEDIR}/LiDIA
LIDIA_LA_SRCDIR = ${topdir}/src/linear_algebra
LIDIA_LA_INCLUDEDIR = ${LIDIA_LA_SRCDIR}/include
LIDIA_LA_PKGINCLUDEDIR = ${LIDIA_LA_INCLUDEDIR}/LiDIA
LIDIA_LT_SRCDIR = ${topdir}/src/lattices
LIDIA_LT_INCLUDEDIR = ${LIDIA_LT_SRCDIR}/include
LIDIA_LT_PKGINCLUDEDIR = ${LIDIA_LT_INCLUDEDIR}/LiDIA
LIDIA_NF_SRCDIR = ${topdir}/src/number_fields
LIDIA_NF_INCLUDEDIR = ${LIDIA_NF_SRCDIR}/include
LIDIA_NF_PKGINCLUDEDIR = ${LIDIA_NF_INCLUDEDIR}/LiDIA
LIDIA_EC_SRCDIR = ${topdir}/src/elliptic_curves
LIDIA_EC_INCLUDEDIR = ${LIDIA_EC_SRCDIR}/include
LIDIA_EC_PKGINCLUDEDIR = ${LIDIA_EC_INCLUDEDIR}/LiDIA
LIDIA_ECO_SRCDIR = ${topdir}/src/ec_order
LIDIA_ECO_INCLUDEDIR = ${LIDIA_ECO_SRCDIR}/include
LIDIA_ECO_PKGINCLUDEDIR = ${LIDIA_ECO_INCLUDEDIR}/LiDIA
LIDIA_GEC_SRCDIR = ${topdir}/src/gec
LIDIA_GEC_INCLUDEDIR = ${LIDIA_GEC_SRCDIR}/include
LIDIA_GEC_PKGINCLUDEDIR = ${LIDIA_GEC_INCLUDEDIR}/LiDIA

#
# Path to the Libtool library libLiDIA.la resulting from the build
#
LIDIA_LTLIB = ${top_builddir}/library/libLiDIA.la

#
# libLiDIA's version info for Libtool,
# specified as a triplet CURRENT:REVISION:AGE of non-negative integers.
# CURRENT identifies the set of object interfaces exported by the library.
# REVISION specifies CURRENT's implementation release number.
# AGE specifies how many interface sets preceding CURRENT are supported.
# The precise meaning of the version info numbers is defined in the Libtool
# texinfo manual, together with rules for updating them.
# Never try to achieve similarity with the package version!
#
LIDIA_LTVERSION = 7:0:0

#
# Paths to each package's Libtool convenience library.
# The configure-determined variable LIDIA_LTCLIBS refers
# to a subset of these variables.
#
LIDIA_BASE_LTCLIB = ${top_builddir}/library/base/libLiDIA-base.la
LIDIA_FF_LTCLIB = ${top_builddir}/library/finite_fields/libLiDIA-FF.la
LIDIA_LA_LTCLIB = ${top_builddir}/library/linear_algebra/libLiDIA-LA.la
LIDIA_LT_LTCLIB = ${top_builddir}/library/lattices/libLiDIA-LT.la
LIDIA_NF_LTCLIB = ${top_builddir}/library/number_fields/libLiDIA-NF.la
LIDIA_EC_LTCLIB = ${top_builddir}/library/elliptic_curves/libLiDIA-EC.la
LIDIA_ECO_LTCLIB = ${top_builddir}/library/ec_order/libLiDIA-ECO.la
LIDIA_GEC_LTCLIB = ${top_builddir}/library/gec/libLiDIA-GEC.la
AM_CPPFLAGS = \
	-I$(LIDIA_CONFIG_INCLUDEDIR) \
	-I$(LIDIA_BASE_INCLUDEDIR) -I$(srcdir)/$(LIDIA_BASE_INCLUDEDIR) \
	-I$(LIDIA_FF_INCLUDEDIR) -I$(srcdir)/$(LIDIA_FF_INCLUDEDIR)

noinst_LTLIBRARIES = libLiDIA-FF.la
libLiDIA_FF_la_SOURCES = \
	$(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_pol_arithmetic.cc \
	$(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_pol_tools.cc \
	$(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_poly_modulus.cc \
	$(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_poly_multiplier.cc \
	$(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_polynomial.cc \
	$(LIDIA_FF_SRCDIR)/Fp_polynomial/compose.cc \
	$(LIDIA_FF_SRCDIR)/Fp_polynomial/crossover_class.cc \
	$(LIDIA_FF_SRCDIR)/Fp_polynomial/factoring.cc \
	$(LIDIA_FF_SRCDIR)/Fp_polynomial/fft_arith.cc \
	$(LIDIA_FF_SRCDIR)/Fp_polynomial/fft_reps.cc \
	$(LIDIA_FF_SRCDIR)/Fp_polynomial/fractions.cc \
	$(LIDIA_FF_SRCDIR)/Fp_polynomial/gcd.cc \
	$(LIDIA_FF_SRCDIR)/Fp_polynomial/plain_arith.cc \
	$(LIDIA_FF_SRCDIR)/Fp_polynomial/poly_argument.cc \
	$(LIDIA_FF_SRCDIR)/Fp_polynomial/poly_matrix.cc \
	$(LIDIA_FF_SRCDIR)/Fp_rational_function/Fp_rational_function.cc \
	$(LIDIA_FF_SRCDIR)/discrete_log/pohlig_hellman/dlp.cc \
	$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/Fp_factor.cc \
	$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/Fp_factor_generic.cc \
	$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/berlekamp.cc \
	$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/binomial.cc \
	$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/canzass.cc \
	$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/ddf.cc \
	$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/edf.cc \
	$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/find_factors.cc \
	$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/old_ddf.cc \
	$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/squarefree.cc \
	$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/checked_min_poly.cc \
	$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_berlekamp.cc \
	$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_can_zass.cc \
	$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_fact_util.cc \
	$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_factor.cc \
	$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_squarefree.cc \
	$(LIDIA_FF_SRCDIR)/factorization/sf_Fp_polynomial.cc \
	$(LIDIA_FF_SRCDIR)/factorization/sf_gf_polynomial.cc \
	$(LIDIA_FF_SRCDIR)/fft_prime/bit_reverse_table.cc \
	$(LIDIA_FF_SRCDIR)/fft_prime/fft_prime.cc \
	$(LIDIA_FF_SRCDIR)/gf2n/gf2n.cc \
	$(LIDIA_FF_SRCDIR)/gf2n/gf2nIO.cc \
	$(LIDIA_FF_SRCDIR)/gf2n/gf2n_init.cc \
	$(LIDIA_FF_SRCDIR)/gf2n/gf2n_invert.cc \
	$(LIDIA_FF_SRCDIR)/gf2n/gf2n_lib.cc \
	$(LIDIA_FF_SRCDIR)/gf2n/gf2n_mult.cc \
	$(LIDIA_FF_SRCDIR)/gf2n/gf2n_reduce.cc \
	$(LIDIA_FF_SRCDIR)/gf2n/gf2nin.cc \
	$(LIDIA_FF_SRCDIR)/gf2n/gf2nout.cc \
	$(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_find_root.cc \
	$(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_poly_karatzuba.cc \
	$(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_poly_modulus.cc \
	$(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_poly_remainder.cc \
	$(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_polynomial.cc \
	$(LIDIA_FF_SRCDIR)/gf2n_rational_function/gf2n_rational_function.cc \
	$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_pol_arith.cc \
	$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_pol_instant.cc \
	$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_pol_util.cc \
	$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_poly_argument.cc \
	$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_poly_modulus.cc \
	$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_polynomial.cc \
	$(LIDIA_FF_SRCDIR)/gfpn/galois_field.cc \
	$(LIDIA_FF_SRCDIR)/gfpn/galois_field_iterator.cc \
	$(LIDIA_FF_SRCDIR)/gfpn/galois_field_rep.cc \
	$(LIDIA_FF_SRCDIR)/gfpn/gf_element.cc \
	$(LIDIA_FF_SRCDIR)/gfpn/gf_rep_GF2n.cc \
	$(LIDIA_FF_SRCDIR)/gfpn/gf_rep_GFp.cc \
	$(LIDIA_FF_SRCDIR)/gfpn/gf_rep_GFpn.cc \
	$(LIDIA_FF_SRCDIR)/gfpn/info_gf2n.cc \
	$(LIDIA_FF_SRCDIR)/gfpn/info_gf2n_inv.cc \
	$(LIDIA_FF_SRCDIR)/gfpn/info_gf2n_mul.cc \
	$(LIDIA_FF_SRCDIR)/gfpn/info_gf2n_red.cc \
	$(LIDIA_FF_SRCDIR)/instantiate/bpf_gf2n.cc \
	$(LIDIA_FF_SRCDIR)/instantiate/bpf_gf_element.cc \
	$(LIDIA_FF_SRCDIR)/instantiate/bv_Fp_polynomial.cc \
	$(LIDIA_FF_SRCDIR)/instantiate/bv_gf2n.cc \
	$(LIDIA_FF_SRCDIR)/instantiate/bv_gf_element.cc \
	$(LIDIA_FF_SRCDIR)/instantiate/bv_pp_sf_Fp_polynomial.cc \
	$(LIDIA_FF_SRCDIR)/instantiate/bv_pp_sf_gf_polynomial.cc \
	$(LIDIA_FF_SRCDIR)/instantiate/bv_spc_bigint.cc \
	$(LIDIA_FF_SRCDIR)/instantiate/bv_spc_bigmod.cc \
	$(LIDIA_FF_SRCDIR)/instantiate/bv_spc_bigrational.cc \
	$(LIDIA_FF_SRCDIR)/instantiate/bv_spc_udigit_mod.cc \
	$(LIDIA_FF_SRCDIR)/instantiate/dpsr_bigint.cc \
	$(LIDIA_FF_SRCDIR)/instantiate/dpsr_bigrational.cc \
	$(LIDIA_FF_SRCDIR)/instantiate/fact_Fp_polynomial.cc \
	$(LIDIA_FF_SRCDIR)/instantiate/fact_gf_polynomial.cc \
	$(LIDIA_FF_SRCDIR)/instantiate/lpf_gf2n.cc \
	$(LIDIA_FF_SRCDIR)/instantiate/spsr_bigint.cc \
	$(LIDIA_FF_SRCDIR)/instantiate/spsr_bigrational.cc \
	$(LIDIA_FF_SRCDIR)/instantiate/spsr_udigit_mod.cc \
	$(LIDIA_FF_SRCDIR)/instantiate/sv_pp_sf_Fp_polynomial.cc \
	$(LIDIA_FF_SRCDIR)/instantiate/sv_pp_sf_gf_polynomial.cc \
	$(LIDIA_FF_SRCDIR)/instantiate/sv_spc_bigint.cc \
	$(LIDIA_FF_SRCDIR)/instantiate/sv_spc_bigmod.cc \
	$(LIDIA_FF_SRCDIR)/instantiate/sv_spc_bigrational.cc \
	$(LIDIA_FF_SRCDIR)/instantiate/sv_spc_udigit_mod.cc \
	$(LIDIA_FF_SRCDIR)/powser/dpsr_bigmod.cc \
	$(LIDIA_FF_SRCDIR)/powser/dpsr_udigit_mod.cc \
	$(LIDIA_FF_SRCDIR)/powser/spsr_bigmod.cc

instantincludedir = $(pkgincludedir)/instantiate
specialincludedir = $(pkgincludedir)/specialization
ffincludedir = $(pkgincludedir)/finite_fields
instantinclude_HEADERS = \
	$(LIDIA_FF_PKGINCLUDEDIR)/instantiate/power_series.cc

specialinclude_HEADERS = \
	$(LIDIA_FF_PKGINCLUDEDIR)/specialization/Fp_polynomial.special \
	$(LIDIA_FF_PKGINCLUDEDIR)/specialization/dense_power_series.special \
	$(LIDIA_FF_PKGINCLUDEDIR)/specialization/gf_element.special \
	$(LIDIA_FF_PKGINCLUDEDIR)/specialization/gf_polynomial.special

ffinclude_HEADERS = \
	$(LIDIA_FF_PKGINCLUDEDIR)/finite_fields/Fp_polynomial_fft.h \
	$(LIDIA_FF_PKGINCLUDEDIR)/finite_fields/Fp_polynomial_util.h \
	$(LIDIA_FF_PKGINCLUDEDIR)/finite_fields/base_dense_power_series.cc \
	$(LIDIA_FF_PKGINCLUDEDIR)/finite_fields/base_dense_power_series.h \
	$(LIDIA_FF_PKGINCLUDEDIR)/finite_fields/base_sparse_power_series.cc \
	$(LIDIA_FF_PKGINCLUDEDIR)/finite_fields/base_sparse_power_series.h \
	$(LIDIA_FF_PKGINCLUDEDIR)/finite_fields/bit_reverse_table.h \
	$(LIDIA_FF_PKGINCLUDEDIR)/finite_fields/coeff_sparse_power_series.cc \
	$(LIDIA_FF_PKGINCLUDEDIR)/finite_fields/coeff_sparse_power_series.h \
	$(LIDIA_FF_PKGINCLUDEDIR)/finite_fields/dense_power_series_bigmod.h \
	$(LIDIA_FF_PKGINCLUDEDIR)/finite_fields/dense_power_series_udigit_mod.h \
	$(LIDIA_FF_PKGINCLUDEDIR)/finite_fields/fft_mul_mod.inl \
	$(LIDIA_FF_PKGINCLUDEDIR)/finite_fields/galois_field_rep.h \
	$(LIDIA_FF_PKGINCLUDEDIR)/finite_fields/gf2nIO.h \
	$(LIDIA_FF_PKGINCLUDEDIR)/finite_fields/info_gf2n.h \
	$(LIDIA_FF_PKGINCLUDEDIR)/finite_fields/sf_Fp_polynomial.h \
	$(LIDIA_FF_PKGINCLUDEDIR)/finite_fields/sf_gf_polynomial.h

pkginclude_HEADERS = \
	$(LIDIA_FF_PKGINCLUDEDIR)/Fp_pol_crossover.h \
	$(LIDIA_FF_PKGINCLUDEDIR)/Fp_poly_modulus.h \
	$(LIDIA_FF_PKGINCLUDEDIR)/Fp_poly_multiplier.h \
	$(LIDIA_FF_PKGINCLUDEDIR)/Fp_polynomial.h \
	$(LIDIA_FF_PKGINCLUDEDIR)/Fp_rational_function.h \
	$(LIDIA_FF_PKGINCLUDEDIR)/dense_power_series.cc \
	$(LIDIA_FF_PKGINCLUDEDIR)/dense_power_series.h \
	$(LIDIA_FF_PKGINCLUDEDIR)/dlp.h \
	$(LIDIA_FF_PKGINCLUDEDIR)/fft_prime.h \
	$(LIDIA_FF_PKGINCLUDEDIR)/galois_field.h \
	$(LIDIA_FF_PKGINCLUDEDIR)/galois_field_iterator.h \
	$(LIDIA_FF_PKGINCLUDEDIR)/gf2n.h \
	$(LIDIA_FF_PKGINCLUDEDIR)/gf2n_poly_modulus.h \
	$(LIDIA_FF_PKGINCLUDEDIR)/gf2n_polynomial.h \
	$(LIDIA_FF_PKGINCLUDEDIR)/gf2n_rational_function.h \
	$(LIDIA_FF_PKGINCLUDEDIR)/gf_element.h \
	$(LIDIA_FF_PKGINCLUDEDIR)/gf_polynomial.h \
	$(LIDIA_FF_PKGINCLUDEDIR)/sparse_power_series.cc \
	$(LIDIA_FF_PKGINCLUDEDIR)/sparse_power_series.h

dist_pkgdata_DATA = \
	$(LIDIA_PKGDATADIR)/GF2n.database

EXTRA_DIST = \
	${LIDIA_FF_SRCDIR}/Fp_polynomial/crossover.tbl \
	${LIDIA_FF_SRCDIR}/Fp_polynomial/crossover.tbl.default \
	${LIDIA_FF_SRCDIR}/Fp_polynomial/make_crossover.cc \
	${LIDIA_FF_SRCDIR}/gf2n_polynomial/crossover.tbl \
	${LIDIA_FF_SRCDIR}/gf2n_polynomial/crossover.tbl.default \
	${LIDIA_FF_SRCDIR}/gf2n_polynomial/make_crossover.cc

all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Paths.def $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  library/finite_fields/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  library/finite_fields/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libLiDIA-FF.la: $(libLiDIA_FF_la_OBJECTS) $(libLiDIA_FF_la_DEPENDENCIES) 
	$(CXXLINK)  $(libLiDIA_FF_la_OBJECTS) $(libLiDIA_FF_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Fp_factor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Fp_factor_generic.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Fp_pol_arithmetic.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Fp_pol_tools.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Fp_poly_modulus.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Fp_poly_multiplier.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Fp_polynomial.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Fp_rational_function.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/berlekamp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/binomial.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bit_reverse_table.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bpf_gf2n.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bpf_gf_element.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_Fp_polynomial.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_gf2n.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_gf_element.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_pp_sf_Fp_polynomial.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_pp_sf_gf_polynomial.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_spc_bigint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_spc_bigmod.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_spc_bigrational.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_spc_udigit_mod.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/canzass.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/checked_min_poly.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/compose.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/crossover_class.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ddf.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dpsr_bigint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dpsr_bigmod.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dpsr_bigrational.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dpsr_udigit_mod.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/edf.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fact_Fp_polynomial.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fact_gf_polynomial.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/factoring.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fft_arith.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fft_prime.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fft_reps.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/find_factors.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fractions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/galois_field.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/galois_field_iterator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/galois_field_rep.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gcd.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gf2n.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gf2nIO.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gf2n_find_root.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gf2n_init.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gf2n_invert.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gf2n_lib.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gf2n_mult.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gf2n_poly_karatzuba.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gf2n_poly_modulus.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gf2n_poly_remainder.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gf2n_polynomial.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gf2n_rational_function.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gf2n_reduce.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gf2nin.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gf2nout.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gf_berlekamp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gf_can_zass.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gf_element.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gf_fact_util.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gf_factor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gf_pol_arith.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gf_pol_instant.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gf_pol_util.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gf_poly_argument.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gf_poly_modulus.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gf_polynomial.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gf_rep_GF2n.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gf_rep_GFp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gf_rep_GFpn.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gf_squarefree.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/info_gf2n.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/info_gf2n_inv.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/info_gf2n_mul.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/info_gf2n_red.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lpf_gf2n.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/old_ddf.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/plain_arith.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/poly_argument.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/poly_matrix.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sf_Fp_polynomial.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sf_gf_polynomial.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spsr_bigint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spsr_bigmod.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spsr_bigrational.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spsr_udigit_mod.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/squarefree.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sv_pp_sf_Fp_polynomial.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sv_pp_sf_gf_polynomial.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sv_spc_bigint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sv_spc_bigmod.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sv_spc_bigrational.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sv_spc_udigit_mod.Plo@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

Fp_pol_arithmetic.lo: $(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_pol_arithmetic.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Fp_pol_arithmetic.lo -MD -MP -MF $(DEPDIR)/Fp_pol_arithmetic.Tpo -c -o Fp_pol_arithmetic.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_pol_arithmetic.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_pol_arithmetic.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Fp_pol_arithmetic.Tpo $(DEPDIR)/Fp_pol_arithmetic.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_pol_arithmetic.cc' object='Fp_pol_arithmetic.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Fp_pol_arithmetic.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_pol_arithmetic.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_pol_arithmetic.cc

Fp_pol_tools.lo: $(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_pol_tools.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Fp_pol_tools.lo -MD -MP -MF $(DEPDIR)/Fp_pol_tools.Tpo -c -o Fp_pol_tools.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_pol_tools.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_pol_tools.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Fp_pol_tools.Tpo $(DEPDIR)/Fp_pol_tools.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_pol_tools.cc' object='Fp_pol_tools.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Fp_pol_tools.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_pol_tools.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_pol_tools.cc

Fp_poly_modulus.lo: $(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_poly_modulus.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Fp_poly_modulus.lo -MD -MP -MF $(DEPDIR)/Fp_poly_modulus.Tpo -c -o Fp_poly_modulus.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_poly_modulus.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_poly_modulus.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Fp_poly_modulus.Tpo $(DEPDIR)/Fp_poly_modulus.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_poly_modulus.cc' object='Fp_poly_modulus.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Fp_poly_modulus.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_poly_modulus.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_poly_modulus.cc

Fp_poly_multiplier.lo: $(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_poly_multiplier.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Fp_poly_multiplier.lo -MD -MP -MF $(DEPDIR)/Fp_poly_multiplier.Tpo -c -o Fp_poly_multiplier.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_poly_multiplier.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_poly_multiplier.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Fp_poly_multiplier.Tpo $(DEPDIR)/Fp_poly_multiplier.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_poly_multiplier.cc' object='Fp_poly_multiplier.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Fp_poly_multiplier.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_poly_multiplier.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_poly_multiplier.cc

Fp_polynomial.lo: $(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_polynomial.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Fp_polynomial.lo -MD -MP -MF $(DEPDIR)/Fp_polynomial.Tpo -c -o Fp_polynomial.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_polynomial.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Fp_polynomial.Tpo $(DEPDIR)/Fp_polynomial.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_polynomial.cc' object='Fp_polynomial.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Fp_polynomial.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_polynomial/Fp_polynomial.cc

compose.lo: $(LIDIA_FF_SRCDIR)/Fp_polynomial/compose.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compose.lo -MD -MP -MF $(DEPDIR)/compose.Tpo -c -o compose.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_polynomial/compose.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_polynomial/compose.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/compose.Tpo $(DEPDIR)/compose.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/Fp_polynomial/compose.cc' object='compose.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compose.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_polynomial/compose.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_polynomial/compose.cc

crossover_class.lo: $(LIDIA_FF_SRCDIR)/Fp_polynomial/crossover_class.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crossover_class.lo -MD -MP -MF $(DEPDIR)/crossover_class.Tpo -c -o crossover_class.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_polynomial/crossover_class.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_polynomial/crossover_class.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/crossover_class.Tpo $(DEPDIR)/crossover_class.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/Fp_polynomial/crossover_class.cc' object='crossover_class.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crossover_class.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_polynomial/crossover_class.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_polynomial/crossover_class.cc

factoring.lo: $(LIDIA_FF_SRCDIR)/Fp_polynomial/factoring.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT factoring.lo -MD -MP -MF $(DEPDIR)/factoring.Tpo -c -o factoring.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_polynomial/factoring.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_polynomial/factoring.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/factoring.Tpo $(DEPDIR)/factoring.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/Fp_polynomial/factoring.cc' object='factoring.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o factoring.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_polynomial/factoring.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_polynomial/factoring.cc

fft_arith.lo: $(LIDIA_FF_SRCDIR)/Fp_polynomial/fft_arith.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fft_arith.lo -MD -MP -MF $(DEPDIR)/fft_arith.Tpo -c -o fft_arith.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_polynomial/fft_arith.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_polynomial/fft_arith.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/fft_arith.Tpo $(DEPDIR)/fft_arith.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/Fp_polynomial/fft_arith.cc' object='fft_arith.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fft_arith.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_polynomial/fft_arith.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_polynomial/fft_arith.cc

fft_reps.lo: $(LIDIA_FF_SRCDIR)/Fp_polynomial/fft_reps.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fft_reps.lo -MD -MP -MF $(DEPDIR)/fft_reps.Tpo -c -o fft_reps.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_polynomial/fft_reps.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_polynomial/fft_reps.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/fft_reps.Tpo $(DEPDIR)/fft_reps.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/Fp_polynomial/fft_reps.cc' object='fft_reps.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fft_reps.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_polynomial/fft_reps.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_polynomial/fft_reps.cc

fractions.lo: $(LIDIA_FF_SRCDIR)/Fp_polynomial/fractions.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fractions.lo -MD -MP -MF $(DEPDIR)/fractions.Tpo -c -o fractions.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_polynomial/fractions.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_polynomial/fractions.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/fractions.Tpo $(DEPDIR)/fractions.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/Fp_polynomial/fractions.cc' object='fractions.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fractions.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_polynomial/fractions.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_polynomial/fractions.cc

gcd.lo: $(LIDIA_FF_SRCDIR)/Fp_polynomial/gcd.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gcd.lo -MD -MP -MF $(DEPDIR)/gcd.Tpo -c -o gcd.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_polynomial/gcd.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_polynomial/gcd.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/gcd.Tpo $(DEPDIR)/gcd.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/Fp_polynomial/gcd.cc' object='gcd.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gcd.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_polynomial/gcd.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_polynomial/gcd.cc

plain_arith.lo: $(LIDIA_FF_SRCDIR)/Fp_polynomial/plain_arith.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT plain_arith.lo -MD -MP -MF $(DEPDIR)/plain_arith.Tpo -c -o plain_arith.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_polynomial/plain_arith.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_polynomial/plain_arith.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/plain_arith.Tpo $(DEPDIR)/plain_arith.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/Fp_polynomial/plain_arith.cc' object='plain_arith.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o plain_arith.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_polynomial/plain_arith.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_polynomial/plain_arith.cc

poly_argument.lo: $(LIDIA_FF_SRCDIR)/Fp_polynomial/poly_argument.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT poly_argument.lo -MD -MP -MF $(DEPDIR)/poly_argument.Tpo -c -o poly_argument.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_polynomial/poly_argument.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_polynomial/poly_argument.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/poly_argument.Tpo $(DEPDIR)/poly_argument.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/Fp_polynomial/poly_argument.cc' object='poly_argument.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o poly_argument.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_polynomial/poly_argument.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_polynomial/poly_argument.cc

poly_matrix.lo: $(LIDIA_FF_SRCDIR)/Fp_polynomial/poly_matrix.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT poly_matrix.lo -MD -MP -MF $(DEPDIR)/poly_matrix.Tpo -c -o poly_matrix.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_polynomial/poly_matrix.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_polynomial/poly_matrix.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/poly_matrix.Tpo $(DEPDIR)/poly_matrix.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/Fp_polynomial/poly_matrix.cc' object='poly_matrix.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o poly_matrix.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_polynomial/poly_matrix.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_polynomial/poly_matrix.cc

Fp_rational_function.lo: $(LIDIA_FF_SRCDIR)/Fp_rational_function/Fp_rational_function.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Fp_rational_function.lo -MD -MP -MF $(DEPDIR)/Fp_rational_function.Tpo -c -o Fp_rational_function.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_rational_function/Fp_rational_function.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_rational_function/Fp_rational_function.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Fp_rational_function.Tpo $(DEPDIR)/Fp_rational_function.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/Fp_rational_function/Fp_rational_function.cc' object='Fp_rational_function.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Fp_rational_function.lo `test -f '$(LIDIA_FF_SRCDIR)/Fp_rational_function/Fp_rational_function.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/Fp_rational_function/Fp_rational_function.cc

dlp.lo: $(LIDIA_FF_SRCDIR)/discrete_log/pohlig_hellman/dlp.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dlp.lo -MD -MP -MF $(DEPDIR)/dlp.Tpo -c -o dlp.lo `test -f '$(LIDIA_FF_SRCDIR)/discrete_log/pohlig_hellman/dlp.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/discrete_log/pohlig_hellman/dlp.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/dlp.Tpo $(DEPDIR)/dlp.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/discrete_log/pohlig_hellman/dlp.cc' object='dlp.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dlp.lo `test -f '$(LIDIA_FF_SRCDIR)/discrete_log/pohlig_hellman/dlp.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/discrete_log/pohlig_hellman/dlp.cc

Fp_factor.lo: $(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/Fp_factor.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Fp_factor.lo -MD -MP -MF $(DEPDIR)/Fp_factor.Tpo -c -o Fp_factor.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/Fp_factor.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/Fp_factor.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Fp_factor.Tpo $(DEPDIR)/Fp_factor.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/Fp_factor.cc' object='Fp_factor.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Fp_factor.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/Fp_factor.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/Fp_factor.cc

Fp_factor_generic.lo: $(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/Fp_factor_generic.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Fp_factor_generic.lo -MD -MP -MF $(DEPDIR)/Fp_factor_generic.Tpo -c -o Fp_factor_generic.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/Fp_factor_generic.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/Fp_factor_generic.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Fp_factor_generic.Tpo $(DEPDIR)/Fp_factor_generic.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/Fp_factor_generic.cc' object='Fp_factor_generic.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Fp_factor_generic.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/Fp_factor_generic.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/Fp_factor_generic.cc

berlekamp.lo: $(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/berlekamp.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT berlekamp.lo -MD -MP -MF $(DEPDIR)/berlekamp.Tpo -c -o berlekamp.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/berlekamp.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/berlekamp.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/berlekamp.Tpo $(DEPDIR)/berlekamp.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/berlekamp.cc' object='berlekamp.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o berlekamp.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/berlekamp.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/berlekamp.cc

binomial.lo: $(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/binomial.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT binomial.lo -MD -MP -MF $(DEPDIR)/binomial.Tpo -c -o binomial.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/binomial.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/binomial.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/binomial.Tpo $(DEPDIR)/binomial.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/binomial.cc' object='binomial.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o binomial.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/binomial.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/binomial.cc

canzass.lo: $(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/canzass.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT canzass.lo -MD -MP -MF $(DEPDIR)/canzass.Tpo -c -o canzass.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/canzass.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/canzass.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/canzass.Tpo $(DEPDIR)/canzass.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/canzass.cc' object='canzass.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o canzass.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/canzass.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/canzass.cc

ddf.lo: $(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/ddf.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ddf.lo -MD -MP -MF $(DEPDIR)/ddf.Tpo -c -o ddf.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/ddf.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/ddf.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ddf.Tpo $(DEPDIR)/ddf.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/ddf.cc' object='ddf.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ddf.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/ddf.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/ddf.cc

edf.lo: $(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/edf.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT edf.lo -MD -MP -MF $(DEPDIR)/edf.Tpo -c -o edf.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/edf.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/edf.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/edf.Tpo $(DEPDIR)/edf.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/edf.cc' object='edf.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o edf.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/edf.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/edf.cc

find_factors.lo: $(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/find_factors.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT find_factors.lo -MD -MP -MF $(DEPDIR)/find_factors.Tpo -c -o find_factors.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/find_factors.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/find_factors.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/find_factors.Tpo $(DEPDIR)/find_factors.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/find_factors.cc' object='find_factors.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o find_factors.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/find_factors.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/find_factors.cc

old_ddf.lo: $(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/old_ddf.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT old_ddf.lo -MD -MP -MF $(DEPDIR)/old_ddf.Tpo -c -o old_ddf.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/old_ddf.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/old_ddf.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/old_ddf.Tpo $(DEPDIR)/old_ddf.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/old_ddf.cc' object='old_ddf.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o old_ddf.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/old_ddf.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/old_ddf.cc

squarefree.lo: $(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/squarefree.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT squarefree.lo -MD -MP -MF $(DEPDIR)/squarefree.Tpo -c -o squarefree.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/squarefree.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/squarefree.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/squarefree.Tpo $(DEPDIR)/squarefree.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/squarefree.cc' object='squarefree.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o squarefree.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/squarefree.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/Fp_polynomial/squarefree.cc

checked_min_poly.lo: $(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/checked_min_poly.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT checked_min_poly.lo -MD -MP -MF $(DEPDIR)/checked_min_poly.Tpo -c -o checked_min_poly.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/checked_min_poly.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/checked_min_poly.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/checked_min_poly.Tpo $(DEPDIR)/checked_min_poly.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/checked_min_poly.cc' object='checked_min_poly.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o checked_min_poly.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/checked_min_poly.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/checked_min_poly.cc

gf_berlekamp.lo: $(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_berlekamp.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gf_berlekamp.lo -MD -MP -MF $(DEPDIR)/gf_berlekamp.Tpo -c -o gf_berlekamp.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_berlekamp.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_berlekamp.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/gf_berlekamp.Tpo $(DEPDIR)/gf_berlekamp.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_berlekamp.cc' object='gf_berlekamp.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gf_berlekamp.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_berlekamp.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_berlekamp.cc

gf_can_zass.lo: $(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_can_zass.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gf_can_zass.lo -MD -MP -MF $(DEPDIR)/gf_can_zass.Tpo -c -o gf_can_zass.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_can_zass.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_can_zass.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/gf_can_zass.Tpo $(DEPDIR)/gf_can_zass.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_can_zass.cc' object='gf_can_zass.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gf_can_zass.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_can_zass.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_can_zass.cc

gf_fact_util.lo: $(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_fact_util.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gf_fact_util.lo -MD -MP -MF $(DEPDIR)/gf_fact_util.Tpo -c -o gf_fact_util.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_fact_util.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_fact_util.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/gf_fact_util.Tpo $(DEPDIR)/gf_fact_util.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_fact_util.cc' object='gf_fact_util.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gf_fact_util.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_fact_util.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_fact_util.cc

gf_factor.lo: $(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_factor.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gf_factor.lo -MD -MP -MF $(DEPDIR)/gf_factor.Tpo -c -o gf_factor.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_factor.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_factor.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/gf_factor.Tpo $(DEPDIR)/gf_factor.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_factor.cc' object='gf_factor.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gf_factor.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_factor.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_factor.cc

gf_squarefree.lo: $(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_squarefree.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gf_squarefree.lo -MD -MP -MF $(DEPDIR)/gf_squarefree.Tpo -c -o gf_squarefree.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_squarefree.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_squarefree.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/gf_squarefree.Tpo $(DEPDIR)/gf_squarefree.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_squarefree.cc' object='gf_squarefree.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gf_squarefree.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_squarefree.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/gf_polynomial/gf_squarefree.cc

sf_Fp_polynomial.lo: $(LIDIA_FF_SRCDIR)/factorization/sf_Fp_polynomial.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sf_Fp_polynomial.lo -MD -MP -MF $(DEPDIR)/sf_Fp_polynomial.Tpo -c -o sf_Fp_polynomial.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/sf_Fp_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/sf_Fp_polynomial.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sf_Fp_polynomial.Tpo $(DEPDIR)/sf_Fp_polynomial.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/factorization/sf_Fp_polynomial.cc' object='sf_Fp_polynomial.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sf_Fp_polynomial.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/sf_Fp_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/sf_Fp_polynomial.cc

sf_gf_polynomial.lo: $(LIDIA_FF_SRCDIR)/factorization/sf_gf_polynomial.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sf_gf_polynomial.lo -MD -MP -MF $(DEPDIR)/sf_gf_polynomial.Tpo -c -o sf_gf_polynomial.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/sf_gf_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/sf_gf_polynomial.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sf_gf_polynomial.Tpo $(DEPDIR)/sf_gf_polynomial.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/factorization/sf_gf_polynomial.cc' object='sf_gf_polynomial.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sf_gf_polynomial.lo `test -f '$(LIDIA_FF_SRCDIR)/factorization/sf_gf_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/factorization/sf_gf_polynomial.cc

bit_reverse_table.lo: $(LIDIA_FF_SRCDIR)/fft_prime/bit_reverse_table.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bit_reverse_table.lo -MD -MP -MF $(DEPDIR)/bit_reverse_table.Tpo -c -o bit_reverse_table.lo `test -f '$(LIDIA_FF_SRCDIR)/fft_prime/bit_reverse_table.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/fft_prime/bit_reverse_table.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bit_reverse_table.Tpo $(DEPDIR)/bit_reverse_table.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/fft_prime/bit_reverse_table.cc' object='bit_reverse_table.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bit_reverse_table.lo `test -f '$(LIDIA_FF_SRCDIR)/fft_prime/bit_reverse_table.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/fft_prime/bit_reverse_table.cc

fft_prime.lo: $(LIDIA_FF_SRCDIR)/fft_prime/fft_prime.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fft_prime.lo -MD -MP -MF $(DEPDIR)/fft_prime.Tpo -c -o fft_prime.lo `test -f '$(LIDIA_FF_SRCDIR)/fft_prime/fft_prime.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/fft_prime/fft_prime.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/fft_prime.Tpo $(DEPDIR)/fft_prime.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/fft_prime/fft_prime.cc' object='fft_prime.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fft_prime.lo `test -f '$(LIDIA_FF_SRCDIR)/fft_prime/fft_prime.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/fft_prime/fft_prime.cc

gf2n.lo: $(LIDIA_FF_SRCDIR)/gf2n/gf2n.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gf2n.lo -MD -MP -MF $(DEPDIR)/gf2n.Tpo -c -o gf2n.lo `test -f '$(LIDIA_FF_SRCDIR)/gf2n/gf2n.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf2n/gf2n.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/gf2n.Tpo $(DEPDIR)/gf2n.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gf2n/gf2n.cc' object='gf2n.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gf2n.lo `test -f '$(LIDIA_FF_SRCDIR)/gf2n/gf2n.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf2n/gf2n.cc

gf2nIO.lo: $(LIDIA_FF_SRCDIR)/gf2n/gf2nIO.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gf2nIO.lo -MD -MP -MF $(DEPDIR)/gf2nIO.Tpo -c -o gf2nIO.lo `test -f '$(LIDIA_FF_SRCDIR)/gf2n/gf2nIO.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf2n/gf2nIO.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/gf2nIO.Tpo $(DEPDIR)/gf2nIO.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gf2n/gf2nIO.cc' object='gf2nIO.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gf2nIO.lo `test -f '$(LIDIA_FF_SRCDIR)/gf2n/gf2nIO.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf2n/gf2nIO.cc

gf2n_init.lo: $(LIDIA_FF_SRCDIR)/gf2n/gf2n_init.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gf2n_init.lo -MD -MP -MF $(DEPDIR)/gf2n_init.Tpo -c -o gf2n_init.lo `test -f '$(LIDIA_FF_SRCDIR)/gf2n/gf2n_init.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf2n/gf2n_init.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/gf2n_init.Tpo $(DEPDIR)/gf2n_init.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gf2n/gf2n_init.cc' object='gf2n_init.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gf2n_init.lo `test -f '$(LIDIA_FF_SRCDIR)/gf2n/gf2n_init.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf2n/gf2n_init.cc

gf2n_invert.lo: $(LIDIA_FF_SRCDIR)/gf2n/gf2n_invert.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gf2n_invert.lo -MD -MP -MF $(DEPDIR)/gf2n_invert.Tpo -c -o gf2n_invert.lo `test -f '$(LIDIA_FF_SRCDIR)/gf2n/gf2n_invert.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf2n/gf2n_invert.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/gf2n_invert.Tpo $(DEPDIR)/gf2n_invert.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gf2n/gf2n_invert.cc' object='gf2n_invert.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gf2n_invert.lo `test -f '$(LIDIA_FF_SRCDIR)/gf2n/gf2n_invert.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf2n/gf2n_invert.cc

gf2n_lib.lo: $(LIDIA_FF_SRCDIR)/gf2n/gf2n_lib.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gf2n_lib.lo -MD -MP -MF $(DEPDIR)/gf2n_lib.Tpo -c -o gf2n_lib.lo `test -f '$(LIDIA_FF_SRCDIR)/gf2n/gf2n_lib.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf2n/gf2n_lib.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/gf2n_lib.Tpo $(DEPDIR)/gf2n_lib.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gf2n/gf2n_lib.cc' object='gf2n_lib.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gf2n_lib.lo `test -f '$(LIDIA_FF_SRCDIR)/gf2n/gf2n_lib.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf2n/gf2n_lib.cc

gf2n_mult.lo: $(LIDIA_FF_SRCDIR)/gf2n/gf2n_mult.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gf2n_mult.lo -MD -MP -MF $(DEPDIR)/gf2n_mult.Tpo -c -o gf2n_mult.lo `test -f '$(LIDIA_FF_SRCDIR)/gf2n/gf2n_mult.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf2n/gf2n_mult.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/gf2n_mult.Tpo $(DEPDIR)/gf2n_mult.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gf2n/gf2n_mult.cc' object='gf2n_mult.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gf2n_mult.lo `test -f '$(LIDIA_FF_SRCDIR)/gf2n/gf2n_mult.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf2n/gf2n_mult.cc

gf2n_reduce.lo: $(LIDIA_FF_SRCDIR)/gf2n/gf2n_reduce.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gf2n_reduce.lo -MD -MP -MF $(DEPDIR)/gf2n_reduce.Tpo -c -o gf2n_reduce.lo `test -f '$(LIDIA_FF_SRCDIR)/gf2n/gf2n_reduce.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf2n/gf2n_reduce.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/gf2n_reduce.Tpo $(DEPDIR)/gf2n_reduce.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gf2n/gf2n_reduce.cc' object='gf2n_reduce.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gf2n_reduce.lo `test -f '$(LIDIA_FF_SRCDIR)/gf2n/gf2n_reduce.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf2n/gf2n_reduce.cc

gf2nin.lo: $(LIDIA_FF_SRCDIR)/gf2n/gf2nin.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gf2nin.lo -MD -MP -MF $(DEPDIR)/gf2nin.Tpo -c -o gf2nin.lo `test -f '$(LIDIA_FF_SRCDIR)/gf2n/gf2nin.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf2n/gf2nin.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/gf2nin.Tpo $(DEPDIR)/gf2nin.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gf2n/gf2nin.cc' object='gf2nin.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gf2nin.lo `test -f '$(LIDIA_FF_SRCDIR)/gf2n/gf2nin.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf2n/gf2nin.cc

gf2nout.lo: $(LIDIA_FF_SRCDIR)/gf2n/gf2nout.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gf2nout.lo -MD -MP -MF $(DEPDIR)/gf2nout.Tpo -c -o gf2nout.lo `test -f '$(LIDIA_FF_SRCDIR)/gf2n/gf2nout.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf2n/gf2nout.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/gf2nout.Tpo $(DEPDIR)/gf2nout.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gf2n/gf2nout.cc' object='gf2nout.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gf2nout.lo `test -f '$(LIDIA_FF_SRCDIR)/gf2n/gf2nout.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf2n/gf2nout.cc

gf2n_find_root.lo: $(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_find_root.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gf2n_find_root.lo -MD -MP -MF $(DEPDIR)/gf2n_find_root.Tpo -c -o gf2n_find_root.lo `test -f '$(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_find_root.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_find_root.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/gf2n_find_root.Tpo $(DEPDIR)/gf2n_find_root.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_find_root.cc' object='gf2n_find_root.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gf2n_find_root.lo `test -f '$(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_find_root.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_find_root.cc

gf2n_poly_karatzuba.lo: $(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_poly_karatzuba.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gf2n_poly_karatzuba.lo -MD -MP -MF $(DEPDIR)/gf2n_poly_karatzuba.Tpo -c -o gf2n_poly_karatzuba.lo `test -f '$(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_poly_karatzuba.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_poly_karatzuba.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/gf2n_poly_karatzuba.Tpo $(DEPDIR)/gf2n_poly_karatzuba.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_poly_karatzuba.cc' object='gf2n_poly_karatzuba.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gf2n_poly_karatzuba.lo `test -f '$(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_poly_karatzuba.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_poly_karatzuba.cc

gf2n_poly_modulus.lo: $(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_poly_modulus.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gf2n_poly_modulus.lo -MD -MP -MF $(DEPDIR)/gf2n_poly_modulus.Tpo -c -o gf2n_poly_modulus.lo `test -f '$(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_poly_modulus.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_poly_modulus.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/gf2n_poly_modulus.Tpo $(DEPDIR)/gf2n_poly_modulus.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_poly_modulus.cc' object='gf2n_poly_modulus.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gf2n_poly_modulus.lo `test -f '$(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_poly_modulus.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_poly_modulus.cc

gf2n_poly_remainder.lo: $(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_poly_remainder.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gf2n_poly_remainder.lo -MD -MP -MF $(DEPDIR)/gf2n_poly_remainder.Tpo -c -o gf2n_poly_remainder.lo `test -f '$(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_poly_remainder.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_poly_remainder.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/gf2n_poly_remainder.Tpo $(DEPDIR)/gf2n_poly_remainder.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_poly_remainder.cc' object='gf2n_poly_remainder.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gf2n_poly_remainder.lo `test -f '$(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_poly_remainder.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_poly_remainder.cc

gf2n_polynomial.lo: $(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_polynomial.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gf2n_polynomial.lo -MD -MP -MF $(DEPDIR)/gf2n_polynomial.Tpo -c -o gf2n_polynomial.lo `test -f '$(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_polynomial.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/gf2n_polynomial.Tpo $(DEPDIR)/gf2n_polynomial.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_polynomial.cc' object='gf2n_polynomial.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gf2n_polynomial.lo `test -f '$(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf2n_polynomial/gf2n_polynomial.cc

gf2n_rational_function.lo: $(LIDIA_FF_SRCDIR)/gf2n_rational_function/gf2n_rational_function.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gf2n_rational_function.lo -MD -MP -MF $(DEPDIR)/gf2n_rational_function.Tpo -c -o gf2n_rational_function.lo `test -f '$(LIDIA_FF_SRCDIR)/gf2n_rational_function/gf2n_rational_function.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf2n_rational_function/gf2n_rational_function.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/gf2n_rational_function.Tpo $(DEPDIR)/gf2n_rational_function.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gf2n_rational_function/gf2n_rational_function.cc' object='gf2n_rational_function.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gf2n_rational_function.lo `test -f '$(LIDIA_FF_SRCDIR)/gf2n_rational_function/gf2n_rational_function.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf2n_rational_function/gf2n_rational_function.cc

gf_pol_arith.lo: $(LIDIA_FF_SRCDIR)/gf_polynomial/gf_pol_arith.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gf_pol_arith.lo -MD -MP -MF $(DEPDIR)/gf_pol_arith.Tpo -c -o gf_pol_arith.lo `test -f '$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_pol_arith.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_pol_arith.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/gf_pol_arith.Tpo $(DEPDIR)/gf_pol_arith.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_pol_arith.cc' object='gf_pol_arith.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gf_pol_arith.lo `test -f '$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_pol_arith.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_pol_arith.cc

gf_pol_instant.lo: $(LIDIA_FF_SRCDIR)/gf_polynomial/gf_pol_instant.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gf_pol_instant.lo -MD -MP -MF $(DEPDIR)/gf_pol_instant.Tpo -c -o gf_pol_instant.lo `test -f '$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_pol_instant.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_pol_instant.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/gf_pol_instant.Tpo $(DEPDIR)/gf_pol_instant.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_pol_instant.cc' object='gf_pol_instant.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gf_pol_instant.lo `test -f '$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_pol_instant.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_pol_instant.cc

gf_pol_util.lo: $(LIDIA_FF_SRCDIR)/gf_polynomial/gf_pol_util.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gf_pol_util.lo -MD -MP -MF $(DEPDIR)/gf_pol_util.Tpo -c -o gf_pol_util.lo `test -f '$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_pol_util.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_pol_util.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/gf_pol_util.Tpo $(DEPDIR)/gf_pol_util.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_pol_util.cc' object='gf_pol_util.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gf_pol_util.lo `test -f '$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_pol_util.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_pol_util.cc

gf_poly_argument.lo: $(LIDIA_FF_SRCDIR)/gf_polynomial/gf_poly_argument.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gf_poly_argument.lo -MD -MP -MF $(DEPDIR)/gf_poly_argument.Tpo -c -o gf_poly_argument.lo `test -f '$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_poly_argument.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_poly_argument.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/gf_poly_argument.Tpo $(DEPDIR)/gf_poly_argument.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_poly_argument.cc' object='gf_poly_argument.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gf_poly_argument.lo `test -f '$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_poly_argument.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_poly_argument.cc

gf_poly_modulus.lo: $(LIDIA_FF_SRCDIR)/gf_polynomial/gf_poly_modulus.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gf_poly_modulus.lo -MD -MP -MF $(DEPDIR)/gf_poly_modulus.Tpo -c -o gf_poly_modulus.lo `test -f '$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_poly_modulus.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_poly_modulus.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/gf_poly_modulus.Tpo $(DEPDIR)/gf_poly_modulus.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_poly_modulus.cc' object='gf_poly_modulus.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gf_poly_modulus.lo `test -f '$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_poly_modulus.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_poly_modulus.cc

gf_polynomial.lo: $(LIDIA_FF_SRCDIR)/gf_polynomial/gf_polynomial.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gf_polynomial.lo -MD -MP -MF $(DEPDIR)/gf_polynomial.Tpo -c -o gf_polynomial.lo `test -f '$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_polynomial.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/gf_polynomial.Tpo $(DEPDIR)/gf_polynomial.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_polynomial.cc' object='gf_polynomial.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gf_polynomial.lo `test -f '$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gf_polynomial/gf_polynomial.cc

galois_field.lo: $(LIDIA_FF_SRCDIR)/gfpn/galois_field.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT galois_field.lo -MD -MP -MF $(DEPDIR)/galois_field.Tpo -c -o galois_field.lo `test -f '$(LIDIA_FF_SRCDIR)/gfpn/galois_field.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gfpn/galois_field.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/galois_field.Tpo $(DEPDIR)/galois_field.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gfpn/galois_field.cc' object='galois_field.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o galois_field.lo `test -f '$(LIDIA_FF_SRCDIR)/gfpn/galois_field.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gfpn/galois_field.cc

galois_field_iterator.lo: $(LIDIA_FF_SRCDIR)/gfpn/galois_field_iterator.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT galois_field_iterator.lo -MD -MP -MF $(DEPDIR)/galois_field_iterator.Tpo -c -o galois_field_iterator.lo `test -f '$(LIDIA_FF_SRCDIR)/gfpn/galois_field_iterator.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gfpn/galois_field_iterator.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/galois_field_iterator.Tpo $(DEPDIR)/galois_field_iterator.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gfpn/galois_field_iterator.cc' object='galois_field_iterator.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o galois_field_iterator.lo `test -f '$(LIDIA_FF_SRCDIR)/gfpn/galois_field_iterator.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gfpn/galois_field_iterator.cc

galois_field_rep.lo: $(LIDIA_FF_SRCDIR)/gfpn/galois_field_rep.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT galois_field_rep.lo -MD -MP -MF $(DEPDIR)/galois_field_rep.Tpo -c -o galois_field_rep.lo `test -f '$(LIDIA_FF_SRCDIR)/gfpn/galois_field_rep.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gfpn/galois_field_rep.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/galois_field_rep.Tpo $(DEPDIR)/galois_field_rep.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gfpn/galois_field_rep.cc' object='galois_field_rep.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o galois_field_rep.lo `test -f '$(LIDIA_FF_SRCDIR)/gfpn/galois_field_rep.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gfpn/galois_field_rep.cc

gf_element.lo: $(LIDIA_FF_SRCDIR)/gfpn/gf_element.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gf_element.lo -MD -MP -MF $(DEPDIR)/gf_element.Tpo -c -o gf_element.lo `test -f '$(LIDIA_FF_SRCDIR)/gfpn/gf_element.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gfpn/gf_element.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/gf_element.Tpo $(DEPDIR)/gf_element.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gfpn/gf_element.cc' object='gf_element.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gf_element.lo `test -f '$(LIDIA_FF_SRCDIR)/gfpn/gf_element.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gfpn/gf_element.cc

gf_rep_GF2n.lo: $(LIDIA_FF_SRCDIR)/gfpn/gf_rep_GF2n.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gf_rep_GF2n.lo -MD -MP -MF $(DEPDIR)/gf_rep_GF2n.Tpo -c -o gf_rep_GF2n.lo `test -f '$(LIDIA_FF_SRCDIR)/gfpn/gf_rep_GF2n.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gfpn/gf_rep_GF2n.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/gf_rep_GF2n.Tpo $(DEPDIR)/gf_rep_GF2n.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gfpn/gf_rep_GF2n.cc' object='gf_rep_GF2n.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gf_rep_GF2n.lo `test -f '$(LIDIA_FF_SRCDIR)/gfpn/gf_rep_GF2n.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gfpn/gf_rep_GF2n.cc

gf_rep_GFp.lo: $(LIDIA_FF_SRCDIR)/gfpn/gf_rep_GFp.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gf_rep_GFp.lo -MD -MP -MF $(DEPDIR)/gf_rep_GFp.Tpo -c -o gf_rep_GFp.lo `test -f '$(LIDIA_FF_SRCDIR)/gfpn/gf_rep_GFp.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gfpn/gf_rep_GFp.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/gf_rep_GFp.Tpo $(DEPDIR)/gf_rep_GFp.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gfpn/gf_rep_GFp.cc' object='gf_rep_GFp.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gf_rep_GFp.lo `test -f '$(LIDIA_FF_SRCDIR)/gfpn/gf_rep_GFp.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gfpn/gf_rep_GFp.cc

gf_rep_GFpn.lo: $(LIDIA_FF_SRCDIR)/gfpn/gf_rep_GFpn.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gf_rep_GFpn.lo -MD -MP -MF $(DEPDIR)/gf_rep_GFpn.Tpo -c -o gf_rep_GFpn.lo `test -f '$(LIDIA_FF_SRCDIR)/gfpn/gf_rep_GFpn.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gfpn/gf_rep_GFpn.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/gf_rep_GFpn.Tpo $(DEPDIR)/gf_rep_GFpn.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gfpn/gf_rep_GFpn.cc' object='gf_rep_GFpn.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gf_rep_GFpn.lo `test -f '$(LIDIA_FF_SRCDIR)/gfpn/gf_rep_GFpn.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gfpn/gf_rep_GFpn.cc

info_gf2n.lo: $(LIDIA_FF_SRCDIR)/gfpn/info_gf2n.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT info_gf2n.lo -MD -MP -MF $(DEPDIR)/info_gf2n.Tpo -c -o info_gf2n.lo `test -f '$(LIDIA_FF_SRCDIR)/gfpn/info_gf2n.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gfpn/info_gf2n.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/info_gf2n.Tpo $(DEPDIR)/info_gf2n.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gfpn/info_gf2n.cc' object='info_gf2n.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o info_gf2n.lo `test -f '$(LIDIA_FF_SRCDIR)/gfpn/info_gf2n.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gfpn/info_gf2n.cc

info_gf2n_inv.lo: $(LIDIA_FF_SRCDIR)/gfpn/info_gf2n_inv.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT info_gf2n_inv.lo -MD -MP -MF $(DEPDIR)/info_gf2n_inv.Tpo -c -o info_gf2n_inv.lo `test -f '$(LIDIA_FF_SRCDIR)/gfpn/info_gf2n_inv.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gfpn/info_gf2n_inv.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/info_gf2n_inv.Tpo $(DEPDIR)/info_gf2n_inv.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gfpn/info_gf2n_inv.cc' object='info_gf2n_inv.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o info_gf2n_inv.lo `test -f '$(LIDIA_FF_SRCDIR)/gfpn/info_gf2n_inv.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gfpn/info_gf2n_inv.cc

info_gf2n_mul.lo: $(LIDIA_FF_SRCDIR)/gfpn/info_gf2n_mul.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT info_gf2n_mul.lo -MD -MP -MF $(DEPDIR)/info_gf2n_mul.Tpo -c -o info_gf2n_mul.lo `test -f '$(LIDIA_FF_SRCDIR)/gfpn/info_gf2n_mul.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gfpn/info_gf2n_mul.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/info_gf2n_mul.Tpo $(DEPDIR)/info_gf2n_mul.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gfpn/info_gf2n_mul.cc' object='info_gf2n_mul.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o info_gf2n_mul.lo `test -f '$(LIDIA_FF_SRCDIR)/gfpn/info_gf2n_mul.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gfpn/info_gf2n_mul.cc

info_gf2n_red.lo: $(LIDIA_FF_SRCDIR)/gfpn/info_gf2n_red.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT info_gf2n_red.lo -MD -MP -MF $(DEPDIR)/info_gf2n_red.Tpo -c -o info_gf2n_red.lo `test -f '$(LIDIA_FF_SRCDIR)/gfpn/info_gf2n_red.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gfpn/info_gf2n_red.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/info_gf2n_red.Tpo $(DEPDIR)/info_gf2n_red.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/gfpn/info_gf2n_red.cc' object='info_gf2n_red.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o info_gf2n_red.lo `test -f '$(LIDIA_FF_SRCDIR)/gfpn/info_gf2n_red.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/gfpn/info_gf2n_red.cc

bpf_gf2n.lo: $(LIDIA_FF_SRCDIR)/instantiate/bpf_gf2n.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bpf_gf2n.lo -MD -MP -MF $(DEPDIR)/bpf_gf2n.Tpo -c -o bpf_gf2n.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/bpf_gf2n.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/bpf_gf2n.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bpf_gf2n.Tpo $(DEPDIR)/bpf_gf2n.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/instantiate/bpf_gf2n.cc' object='bpf_gf2n.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bpf_gf2n.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/bpf_gf2n.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/bpf_gf2n.cc

bpf_gf_element.lo: $(LIDIA_FF_SRCDIR)/instantiate/bpf_gf_element.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bpf_gf_element.lo -MD -MP -MF $(DEPDIR)/bpf_gf_element.Tpo -c -o bpf_gf_element.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/bpf_gf_element.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/bpf_gf_element.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bpf_gf_element.Tpo $(DEPDIR)/bpf_gf_element.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/instantiate/bpf_gf_element.cc' object='bpf_gf_element.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bpf_gf_element.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/bpf_gf_element.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/bpf_gf_element.cc

bv_Fp_polynomial.lo: $(LIDIA_FF_SRCDIR)/instantiate/bv_Fp_polynomial.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_Fp_polynomial.lo -MD -MP -MF $(DEPDIR)/bv_Fp_polynomial.Tpo -c -o bv_Fp_polynomial.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/bv_Fp_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/bv_Fp_polynomial.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bv_Fp_polynomial.Tpo $(DEPDIR)/bv_Fp_polynomial.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/instantiate/bv_Fp_polynomial.cc' object='bv_Fp_polynomial.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_Fp_polynomial.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/bv_Fp_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/bv_Fp_polynomial.cc

bv_gf2n.lo: $(LIDIA_FF_SRCDIR)/instantiate/bv_gf2n.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_gf2n.lo -MD -MP -MF $(DEPDIR)/bv_gf2n.Tpo -c -o bv_gf2n.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/bv_gf2n.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/bv_gf2n.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bv_gf2n.Tpo $(DEPDIR)/bv_gf2n.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/instantiate/bv_gf2n.cc' object='bv_gf2n.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_gf2n.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/bv_gf2n.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/bv_gf2n.cc

bv_gf_element.lo: $(LIDIA_FF_SRCDIR)/instantiate/bv_gf_element.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_gf_element.lo -MD -MP -MF $(DEPDIR)/bv_gf_element.Tpo -c -o bv_gf_element.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/bv_gf_element.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/bv_gf_element.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bv_gf_element.Tpo $(DEPDIR)/bv_gf_element.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/instantiate/bv_gf_element.cc' object='bv_gf_element.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_gf_element.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/bv_gf_element.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/bv_gf_element.cc

bv_pp_sf_Fp_polynomial.lo: $(LIDIA_FF_SRCDIR)/instantiate/bv_pp_sf_Fp_polynomial.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_pp_sf_Fp_polynomial.lo -MD -MP -MF $(DEPDIR)/bv_pp_sf_Fp_polynomial.Tpo -c -o bv_pp_sf_Fp_polynomial.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/bv_pp_sf_Fp_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/bv_pp_sf_Fp_polynomial.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bv_pp_sf_Fp_polynomial.Tpo $(DEPDIR)/bv_pp_sf_Fp_polynomial.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/instantiate/bv_pp_sf_Fp_polynomial.cc' object='bv_pp_sf_Fp_polynomial.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_pp_sf_Fp_polynomial.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/bv_pp_sf_Fp_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/bv_pp_sf_Fp_polynomial.cc

bv_pp_sf_gf_polynomial.lo: $(LIDIA_FF_SRCDIR)/instantiate/bv_pp_sf_gf_polynomial.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_pp_sf_gf_polynomial.lo -MD -MP -MF $(DEPDIR)/bv_pp_sf_gf_polynomial.Tpo -c -o bv_pp_sf_gf_polynomial.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/bv_pp_sf_gf_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/bv_pp_sf_gf_polynomial.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bv_pp_sf_gf_polynomial.Tpo $(DEPDIR)/bv_pp_sf_gf_polynomial.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/instantiate/bv_pp_sf_gf_polynomial.cc' object='bv_pp_sf_gf_polynomial.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_pp_sf_gf_polynomial.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/bv_pp_sf_gf_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/bv_pp_sf_gf_polynomial.cc

bv_spc_bigint.lo: $(LIDIA_FF_SRCDIR)/instantiate/bv_spc_bigint.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_spc_bigint.lo -MD -MP -MF $(DEPDIR)/bv_spc_bigint.Tpo -c -o bv_spc_bigint.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/bv_spc_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/bv_spc_bigint.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bv_spc_bigint.Tpo $(DEPDIR)/bv_spc_bigint.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/instantiate/bv_spc_bigint.cc' object='bv_spc_bigint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_spc_bigint.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/bv_spc_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/bv_spc_bigint.cc

bv_spc_bigmod.lo: $(LIDIA_FF_SRCDIR)/instantiate/bv_spc_bigmod.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_spc_bigmod.lo -MD -MP -MF $(DEPDIR)/bv_spc_bigmod.Tpo -c -o bv_spc_bigmod.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/bv_spc_bigmod.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/bv_spc_bigmod.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bv_spc_bigmod.Tpo $(DEPDIR)/bv_spc_bigmod.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/instantiate/bv_spc_bigmod.cc' object='bv_spc_bigmod.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_spc_bigmod.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/bv_spc_bigmod.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/bv_spc_bigmod.cc

bv_spc_bigrational.lo: $(LIDIA_FF_SRCDIR)/instantiate/bv_spc_bigrational.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_spc_bigrational.lo -MD -MP -MF $(DEPDIR)/bv_spc_bigrational.Tpo -c -o bv_spc_bigrational.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/bv_spc_bigrational.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/bv_spc_bigrational.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bv_spc_bigrational.Tpo $(DEPDIR)/bv_spc_bigrational.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/instantiate/bv_spc_bigrational.cc' object='bv_spc_bigrational.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_spc_bigrational.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/bv_spc_bigrational.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/bv_spc_bigrational.cc

bv_spc_udigit_mod.lo: $(LIDIA_FF_SRCDIR)/instantiate/bv_spc_udigit_mod.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_spc_udigit_mod.lo -MD -MP -MF $(DEPDIR)/bv_spc_udigit_mod.Tpo -c -o bv_spc_udigit_mod.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/bv_spc_udigit_mod.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/bv_spc_udigit_mod.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bv_spc_udigit_mod.Tpo $(DEPDIR)/bv_spc_udigit_mod.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/instantiate/bv_spc_udigit_mod.cc' object='bv_spc_udigit_mod.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_spc_udigit_mod.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/bv_spc_udigit_mod.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/bv_spc_udigit_mod.cc

dpsr_bigint.lo: $(LIDIA_FF_SRCDIR)/instantiate/dpsr_bigint.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dpsr_bigint.lo -MD -MP -MF $(DEPDIR)/dpsr_bigint.Tpo -c -o dpsr_bigint.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/dpsr_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/dpsr_bigint.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/dpsr_bigint.Tpo $(DEPDIR)/dpsr_bigint.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/instantiate/dpsr_bigint.cc' object='dpsr_bigint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dpsr_bigint.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/dpsr_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/dpsr_bigint.cc

dpsr_bigrational.lo: $(LIDIA_FF_SRCDIR)/instantiate/dpsr_bigrational.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dpsr_bigrational.lo -MD -MP -MF $(DEPDIR)/dpsr_bigrational.Tpo -c -o dpsr_bigrational.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/dpsr_bigrational.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/dpsr_bigrational.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/dpsr_bigrational.Tpo $(DEPDIR)/dpsr_bigrational.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/instantiate/dpsr_bigrational.cc' object='dpsr_bigrational.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dpsr_bigrational.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/dpsr_bigrational.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/dpsr_bigrational.cc

fact_Fp_polynomial.lo: $(LIDIA_FF_SRCDIR)/instantiate/fact_Fp_polynomial.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fact_Fp_polynomial.lo -MD -MP -MF $(DEPDIR)/fact_Fp_polynomial.Tpo -c -o fact_Fp_polynomial.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/fact_Fp_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/fact_Fp_polynomial.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/fact_Fp_polynomial.Tpo $(DEPDIR)/fact_Fp_polynomial.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/instantiate/fact_Fp_polynomial.cc' object='fact_Fp_polynomial.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fact_Fp_polynomial.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/fact_Fp_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/fact_Fp_polynomial.cc

fact_gf_polynomial.lo: $(LIDIA_FF_SRCDIR)/instantiate/fact_gf_polynomial.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fact_gf_polynomial.lo -MD -MP -MF $(DEPDIR)/fact_gf_polynomial.Tpo -c -o fact_gf_polynomial.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/fact_gf_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/fact_gf_polynomial.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/fact_gf_polynomial.Tpo $(DEPDIR)/fact_gf_polynomial.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/instantiate/fact_gf_polynomial.cc' object='fact_gf_polynomial.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fact_gf_polynomial.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/fact_gf_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/fact_gf_polynomial.cc

lpf_gf2n.lo: $(LIDIA_FF_SRCDIR)/instantiate/lpf_gf2n.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lpf_gf2n.lo -MD -MP -MF $(DEPDIR)/lpf_gf2n.Tpo -c -o lpf_gf2n.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/lpf_gf2n.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/lpf_gf2n.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/lpf_gf2n.Tpo $(DEPDIR)/lpf_gf2n.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/instantiate/lpf_gf2n.cc' object='lpf_gf2n.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lpf_gf2n.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/lpf_gf2n.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/lpf_gf2n.cc

spsr_bigint.lo: $(LIDIA_FF_SRCDIR)/instantiate/spsr_bigint.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spsr_bigint.lo -MD -MP -MF $(DEPDIR)/spsr_bigint.Tpo -c -o spsr_bigint.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/spsr_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/spsr_bigint.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/spsr_bigint.Tpo $(DEPDIR)/spsr_bigint.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/instantiate/spsr_bigint.cc' object='spsr_bigint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spsr_bigint.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/spsr_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/spsr_bigint.cc

spsr_bigrational.lo: $(LIDIA_FF_SRCDIR)/instantiate/spsr_bigrational.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spsr_bigrational.lo -MD -MP -MF $(DEPDIR)/spsr_bigrational.Tpo -c -o spsr_bigrational.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/spsr_bigrational.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/spsr_bigrational.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/spsr_bigrational.Tpo $(DEPDIR)/spsr_bigrational.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/instantiate/spsr_bigrational.cc' object='spsr_bigrational.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spsr_bigrational.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/spsr_bigrational.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/spsr_bigrational.cc

spsr_udigit_mod.lo: $(LIDIA_FF_SRCDIR)/instantiate/spsr_udigit_mod.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spsr_udigit_mod.lo -MD -MP -MF $(DEPDIR)/spsr_udigit_mod.Tpo -c -o spsr_udigit_mod.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/spsr_udigit_mod.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/spsr_udigit_mod.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/spsr_udigit_mod.Tpo $(DEPDIR)/spsr_udigit_mod.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/instantiate/spsr_udigit_mod.cc' object='spsr_udigit_mod.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spsr_udigit_mod.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/spsr_udigit_mod.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/spsr_udigit_mod.cc

sv_pp_sf_Fp_polynomial.lo: $(LIDIA_FF_SRCDIR)/instantiate/sv_pp_sf_Fp_polynomial.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sv_pp_sf_Fp_polynomial.lo -MD -MP -MF $(DEPDIR)/sv_pp_sf_Fp_polynomial.Tpo -c -o sv_pp_sf_Fp_polynomial.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/sv_pp_sf_Fp_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/sv_pp_sf_Fp_polynomial.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sv_pp_sf_Fp_polynomial.Tpo $(DEPDIR)/sv_pp_sf_Fp_polynomial.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/instantiate/sv_pp_sf_Fp_polynomial.cc' object='sv_pp_sf_Fp_polynomial.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sv_pp_sf_Fp_polynomial.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/sv_pp_sf_Fp_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/sv_pp_sf_Fp_polynomial.cc

sv_pp_sf_gf_polynomial.lo: $(LIDIA_FF_SRCDIR)/instantiate/sv_pp_sf_gf_polynomial.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sv_pp_sf_gf_polynomial.lo -MD -MP -MF $(DEPDIR)/sv_pp_sf_gf_polynomial.Tpo -c -o sv_pp_sf_gf_polynomial.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/sv_pp_sf_gf_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/sv_pp_sf_gf_polynomial.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sv_pp_sf_gf_polynomial.Tpo $(DEPDIR)/sv_pp_sf_gf_polynomial.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/instantiate/sv_pp_sf_gf_polynomial.cc' object='sv_pp_sf_gf_polynomial.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sv_pp_sf_gf_polynomial.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/sv_pp_sf_gf_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/sv_pp_sf_gf_polynomial.cc

sv_spc_bigint.lo: $(LIDIA_FF_SRCDIR)/instantiate/sv_spc_bigint.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sv_spc_bigint.lo -MD -MP -MF $(DEPDIR)/sv_spc_bigint.Tpo -c -o sv_spc_bigint.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/sv_spc_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/sv_spc_bigint.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sv_spc_bigint.Tpo $(DEPDIR)/sv_spc_bigint.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/instantiate/sv_spc_bigint.cc' object='sv_spc_bigint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sv_spc_bigint.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/sv_spc_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/sv_spc_bigint.cc

sv_spc_bigmod.lo: $(LIDIA_FF_SRCDIR)/instantiate/sv_spc_bigmod.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sv_spc_bigmod.lo -MD -MP -MF $(DEPDIR)/sv_spc_bigmod.Tpo -c -o sv_spc_bigmod.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/sv_spc_bigmod.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/sv_spc_bigmod.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sv_spc_bigmod.Tpo $(DEPDIR)/sv_spc_bigmod.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/instantiate/sv_spc_bigmod.cc' object='sv_spc_bigmod.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sv_spc_bigmod.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/sv_spc_bigmod.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/sv_spc_bigmod.cc

sv_spc_bigrational.lo: $(LIDIA_FF_SRCDIR)/instantiate/sv_spc_bigrational.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sv_spc_bigrational.lo -MD -MP -MF $(DEPDIR)/sv_spc_bigrational.Tpo -c -o sv_spc_bigrational.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/sv_spc_bigrational.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/sv_spc_bigrational.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sv_spc_bigrational.Tpo $(DEPDIR)/sv_spc_bigrational.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/instantiate/sv_spc_bigrational.cc' object='sv_spc_bigrational.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sv_spc_bigrational.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/sv_spc_bigrational.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/sv_spc_bigrational.cc

sv_spc_udigit_mod.lo: $(LIDIA_FF_SRCDIR)/instantiate/sv_spc_udigit_mod.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sv_spc_udigit_mod.lo -MD -MP -MF $(DEPDIR)/sv_spc_udigit_mod.Tpo -c -o sv_spc_udigit_mod.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/sv_spc_udigit_mod.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/sv_spc_udigit_mod.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sv_spc_udigit_mod.Tpo $(DEPDIR)/sv_spc_udigit_mod.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/instantiate/sv_spc_udigit_mod.cc' object='sv_spc_udigit_mod.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sv_spc_udigit_mod.lo `test -f '$(LIDIA_FF_SRCDIR)/instantiate/sv_spc_udigit_mod.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/instantiate/sv_spc_udigit_mod.cc

dpsr_bigmod.lo: $(LIDIA_FF_SRCDIR)/powser/dpsr_bigmod.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dpsr_bigmod.lo -MD -MP -MF $(DEPDIR)/dpsr_bigmod.Tpo -c -o dpsr_bigmod.lo `test -f '$(LIDIA_FF_SRCDIR)/powser/dpsr_bigmod.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/powser/dpsr_bigmod.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/dpsr_bigmod.Tpo $(DEPDIR)/dpsr_bigmod.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/powser/dpsr_bigmod.cc' object='dpsr_bigmod.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dpsr_bigmod.lo `test -f '$(LIDIA_FF_SRCDIR)/powser/dpsr_bigmod.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/powser/dpsr_bigmod.cc

dpsr_udigit_mod.lo: $(LIDIA_FF_SRCDIR)/powser/dpsr_udigit_mod.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dpsr_udigit_mod.lo -MD -MP -MF $(DEPDIR)/dpsr_udigit_mod.Tpo -c -o dpsr_udigit_mod.lo `test -f '$(LIDIA_FF_SRCDIR)/powser/dpsr_udigit_mod.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/powser/dpsr_udigit_mod.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/dpsr_udigit_mod.Tpo $(DEPDIR)/dpsr_udigit_mod.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/powser/dpsr_udigit_mod.cc' object='dpsr_udigit_mod.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dpsr_udigit_mod.lo `test -f '$(LIDIA_FF_SRCDIR)/powser/dpsr_udigit_mod.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/powser/dpsr_udigit_mod.cc

spsr_bigmod.lo: $(LIDIA_FF_SRCDIR)/powser/spsr_bigmod.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spsr_bigmod.lo -MD -MP -MF $(DEPDIR)/spsr_bigmod.Tpo -c -o spsr_bigmod.lo `test -f '$(LIDIA_FF_SRCDIR)/powser/spsr_bigmod.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/powser/spsr_bigmod.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/spsr_bigmod.Tpo $(DEPDIR)/spsr_bigmod.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_FF_SRCDIR)/powser/spsr_bigmod.cc' object='spsr_bigmod.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spsr_bigmod.lo `test -f '$(LIDIA_FF_SRCDIR)/powser/spsr_bigmod.cc' || echo '$(srcdir)/'`$(LIDIA_FF_SRCDIR)/powser/spsr_bigmod.cc

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-dist_pkgdataDATA: $(dist_pkgdata_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(pkgdatadir)" || $(MKDIR_P) "$(DESTDIR)$(pkgdatadir)"
	@list='$(dist_pkgdata_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_pkgdataDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(pkgdatadir)/$$f'"; \
	  $(dist_pkgdataDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(pkgdatadir)/$$f"; \
	done

uninstall-dist_pkgdataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_pkgdata_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(pkgdatadir)/$$f'"; \
	  rm -f "$(DESTDIR)$(pkgdatadir)/$$f"; \
	done
install-ffincludeHEADERS: $(ffinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(ffincludedir)" || $(MKDIR_P) "$(DESTDIR)$(ffincludedir)"
	@list='$(ffinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(ffincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(ffincludedir)/$$f'"; \
	  $(ffincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(ffincludedir)/$$f"; \
	done

uninstall-ffincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(ffinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(ffincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(ffincludedir)/$$f"; \
	done
install-instantincludeHEADERS: $(instantinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(instantincludedir)" || $(MKDIR_P) "$(DESTDIR)$(instantincludedir)"
	@list='$(instantinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(instantincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(instantincludedir)/$$f'"; \
	  $(instantincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(instantincludedir)/$$f"; \
	done

uninstall-instantincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(instantinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(instantincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(instantincludedir)/$$f"; \
	done
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(pkgincludedir)" || $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)"
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(pkgincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(pkgincludedir)/$$f'"; \
	  $(pkgincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(pkgincludedir)/$$f"; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(pkgincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(pkgincludedir)/$$f"; \
	done
install-specialincludeHEADERS: $(specialinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(specialincludedir)" || $(MKDIR_P) "$(DESTDIR)$(specialincludedir)"
	@list='$(specialinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(specialincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(specialincludedir)/$$f'"; \
	  $(specialincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(specialincludedir)/$$f"; \
	done

uninstall-specialincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(specialinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(specialincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(specialincludedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(pkgdatadir)" "$(DESTDIR)$(ffincludedir)" "$(DESTDIR)$(instantincludedir)" "$(DESTDIR)$(pkgincludedir)" "$(DESTDIR)$(specialincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-dist_pkgdataDATA install-ffincludeHEADERS \
	install-instantincludeHEADERS install-pkgincludeHEADERS \
	install-specialincludeHEADERS

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-dist_pkgdataDATA uninstall-ffincludeHEADERS \
	uninstall-instantincludeHEADERS uninstall-pkgincludeHEADERS \
	uninstall-specialincludeHEADERS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook

.MAKE: install-am install-strip uninstall-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am \
	install-dist_pkgdataDATA install-dvi install-dvi-am \
	install-exec install-exec-am install-ffincludeHEADERS \
	install-html install-html-am install-info install-info-am \
	install-instantincludeHEADERS install-man install-pdf \
	install-pdf-am install-pkgincludeHEADERS install-ps \
	install-ps-am install-specialincludeHEADERS install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-dist_pkgdataDATA \
	uninstall-ffincludeHEADERS uninstall-hook \
	uninstall-instantincludeHEADERS uninstall-pkgincludeHEADERS \
	uninstall-specialincludeHEADERS


 #

# Remove installation subdirectories after uninstalling, unless left non-empty.
uninstall-hook:
	rmdir	$(DESTDIR)$(instantincludedir) \
		$(DESTDIR)$(specialincludedir) \
		$(DESTDIR)$(ffincludedir) \
		$(DESTDIR)$(pkgincludedir) \
		$(DESTDIR)$(pkgdatadir) \
		2>/dev/null; :

# Delete half-made targets when their commands fail
.DELETE_ON_ERROR:
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
