# Makefile.in generated by automake 1.13.4 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(top_srcdir)/Paths.def $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.am $(top_srcdir)/depcomp \
	$(dist_discriminants_DATA) $(pkginclude_HEADERS)
subdir = library/gec
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h \
	$(top_builddir)/include/LiDIA/LiDIA.h \
	$(top_builddir)/include/LiDIA/path.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libLiDIA_GEC_la_LIBADD =
am_libLiDIA_GEC_la_OBJECTS = gec.lo is_cryptographically_strong.lo \
	assign_class_invariant_to_curve.lo \
	assign_efficient_curve_parameters.lo \
	compute_class_polynomial.lo find_discriminant.lo \
	find_good_prime.lo find_good_prime_0_mod_4.lo \
	find_good_prime_1_mod_8.lo find_good_prime_5_mod_8.lo \
	find_good_prime_power.lo find_oef.lo \
	gec_complex_multiplication.lo generate.lo generate_oef.lo \
	set_complex_precision.lo set_generation_mode.lo \
	assign_class_invariant_to_curve_and_twist.lo \
	assign_efficient_curve_parameters_and_twist.lo \
	find_good_prime_twist.lo gec_E_and_twist_prime.lo \
	generate_twist.lo gec_point_counting_mod_p.lo \
	gec_point_counting_mod_2n.lo certificate.lo prime_proof.lo \
	prime_proof_ecpp.lo \
	prime_proof_ecpp_assign_class_invariant_to_curve.lo \
	prime_proof_ecpp_compute_class_polynomial.lo \
	prime_proof_ecpp_discriminant.lo prime_proof_ecpp_generate.lo \
	prime_proof_ecpp_is_good_order.lo \
	prime_proof_ecpp_primelist.lo \
	prime_proof_ecpp_set_complex_precision.lo \
	prime_proof_ecpp_set_generation_mode.lo \
	prime_proof_factorize.lo prime_proof_n_minus_one.lo \
	prime_proof_n_plus_one.lo prime_proof_spp.lo
libLiDIA_GEC_la_OBJECTS = $(am_libLiDIA_GEC_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = 
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libLiDIA_GEC_la_SOURCES)
DIST_SOURCES = $(libLiDIA_GEC_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(discriminantsdir)" \
	"$(DESTDIR)$(pkgincludedir)"
DATA = $(dist_discriminants_DATA)
HEADERS = $(pkginclude_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BIBTEX = @BIBTEX@
BUNZIP2 = @BUNZIP2@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
DVIPS = @DVIPS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
GUNZIP = @GUNZIP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LATEX = @LATEX@
LATEX2HTML = @LATEX2HTML@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@

# We don't want to have $(LIBS) in the convenience library.
# FIXME: This is not safe against command-line overrides.
LIBS = 
LIBTOOL = @LIBTOOL@
LIDIA_BASE_XLIBOBJS = @LIDIA_BASE_XLIBOBJS@
LIDIA_BASE_XLTLIBOBJS = @LIDIA_BASE_XLTLIBOBJS@
LIDIA_LTCLIBS = @LIDIA_LTCLIBS@
LIDIA_LT_XLIBOBJS = @LIDIA_LT_XLIBOBJS@
LIDIA_LT_XLTLIBOBJS = @LIDIA_LT_XLTLIBOBJS@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINDEX = @MAKEINDEX@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PDFLATEX = @PDFLATEX@
PKG_DIRS = @PKG_DIRS@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TEXI2DVI = @TEXI2DVI@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = 1.5 nostdinc
ETAGS_ARGS = -C -l c++

#
# Use the following prefix for stuff that is normally found in ${top_srcdir}
# but must be specified in a simple-minded fashion (i.e. ${top_builddir}).
# Note that the normal path can be made by prepending ${srcdir}/,
# though that results in weird paths like ../../../library/base/../../xxx.
#
topdir = ${top_builddir}

#
# Main directories of the LiDIA packages
#
LIDIA_DATADIR = ${topdir}/share
LIDIA_PKGDATADIR = ${LIDIA_DATADIR}/LiDIA
LIDIA_CONFIG_LINKDIR = ${top_builddir}/src/base/interfaces
LIDIA_CONFIG_SRCDIR = ${topdir}/src/interfaces
LIDIA_CONFIG_INCLUDEDIR = ${top_builddir}/include
LIDIA_CONFIG_PKGINCLUDEDIR = ${LIDIA_CONFIG_INCLUDEDIR}/LiDIA
LIDIA_PORTAB_SRCDIR = ${topdir}/src/portability
LIDIA_BASE_SRCDIR = ${topdir}/src/base
LIDIA_BASE_INCLUDEDIR = ${LIDIA_BASE_SRCDIR}/include
LIDIA_BASE_PKGINCLUDEDIR = ${LIDIA_BASE_INCLUDEDIR}/LiDIA
LIDIA_FF_SRCDIR = ${topdir}/src/finite_fields
LIDIA_FF_INCLUDEDIR = ${LIDIA_FF_SRCDIR}/include
LIDIA_FF_PKGINCLUDEDIR = ${LIDIA_FF_INCLUDEDIR}/LiDIA
LIDIA_LA_SRCDIR = ${topdir}/src/linear_algebra
LIDIA_LA_INCLUDEDIR = ${LIDIA_LA_SRCDIR}/include
LIDIA_LA_PKGINCLUDEDIR = ${LIDIA_LA_INCLUDEDIR}/LiDIA
LIDIA_LT_SRCDIR = ${topdir}/src/lattices
LIDIA_LT_INCLUDEDIR = ${LIDIA_LT_SRCDIR}/include
LIDIA_LT_PKGINCLUDEDIR = ${LIDIA_LT_INCLUDEDIR}/LiDIA
LIDIA_NF_SRCDIR = ${topdir}/src/number_fields
LIDIA_NF_INCLUDEDIR = ${LIDIA_NF_SRCDIR}/include
LIDIA_NF_PKGINCLUDEDIR = ${LIDIA_NF_INCLUDEDIR}/LiDIA
LIDIA_EC_SRCDIR = ${topdir}/src/elliptic_curves
LIDIA_EC_INCLUDEDIR = ${LIDIA_EC_SRCDIR}/include
LIDIA_EC_PKGINCLUDEDIR = ${LIDIA_EC_INCLUDEDIR}/LiDIA
LIDIA_ECO_SRCDIR = ${topdir}/src/ec_order
LIDIA_ECO_INCLUDEDIR = ${LIDIA_ECO_SRCDIR}/include
LIDIA_ECO_PKGINCLUDEDIR = ${LIDIA_ECO_INCLUDEDIR}/LiDIA
LIDIA_GEC_SRCDIR = ${topdir}/src/gec
LIDIA_GEC_INCLUDEDIR = ${LIDIA_GEC_SRCDIR}/include
LIDIA_GEC_PKGINCLUDEDIR = ${LIDIA_GEC_INCLUDEDIR}/LiDIA

#
# Path to the Libtool library libLiDIA.la resulting from the build
#
LIDIA_LTLIB = ${top_builddir}/library/libLiDIA.la

#
# libLiDIA's version info for Libtool,
# specified as a triplet CURRENT:REVISION:AGE of non-negative integers.
# CURRENT identifies the set of object interfaces exported by the library.
# REVISION specifies CURRENT's implementation release number.
# AGE specifies how many interface sets preceding CURRENT are supported.
# The precise meaning of the version info numbers is defined in the Libtool
# texinfo manual, together with rules for updating them.
# Never try to achieve similarity with the package version!
#
LIDIA_LTVERSION = 7:0:0

#
# Paths to each package's Libtool convenience library.
# The configure-determined variable LIDIA_LTCLIBS refers
# to a subset of these variables.
#
LIDIA_BASE_LTCLIB = ${top_builddir}/library/base/libLiDIA-base.la
LIDIA_FF_LTCLIB = ${top_builddir}/library/finite_fields/libLiDIA-FF.la
LIDIA_LA_LTCLIB = ${top_builddir}/library/linear_algebra/libLiDIA-LA.la
LIDIA_LT_LTCLIB = ${top_builddir}/library/lattices/libLiDIA-LT.la
LIDIA_NF_LTCLIB = ${top_builddir}/library/number_fields/libLiDIA-NF.la
LIDIA_EC_LTCLIB = ${top_builddir}/library/elliptic_curves/libLiDIA-EC.la
LIDIA_ECO_LTCLIB = ${top_builddir}/library/ec_order/libLiDIA-ECO.la
LIDIA_GEC_LTCLIB = ${top_builddir}/library/gec/libLiDIA-GEC.la
AM_CPPFLAGS = \
	-I$(LIDIA_CONFIG_INCLUDEDIR) \
	-I$(LIDIA_BASE_INCLUDEDIR) -I$(srcdir)/$(LIDIA_BASE_INCLUDEDIR) \
	-I$(LIDIA_FF_INCLUDEDIR) -I$(srcdir)/$(LIDIA_FF_INCLUDEDIR) \
	-I$(LIDIA_LA_INCLUDEDIR) -I$(srcdir)/$(LIDIA_LA_INCLUDEDIR) \
	-I$(LIDIA_NF_INCLUDEDIR) -I$(srcdir)/$(LIDIA_NF_INCLUDEDIR) \
	-I$(LIDIA_EC_INCLUDEDIR) -I$(srcdir)/$(LIDIA_EC_INCLUDEDIR) \
	-I$(LIDIA_ECO_INCLUDEDIR) -I$(srcdir)/$(LIDIA_ECO_INCLUDEDIR) \
	-I$(LIDIA_GEC_INCLUDEDIR) -I$(srcdir)/$(LIDIA_GEC_INCLUDEDIR)

noinst_LTLIBRARIES = libLiDIA-GEC.la
libLiDIA_GEC_la_SOURCES = \
	$(LIDIA_GEC_SRCDIR)/gec.cc \
	$(LIDIA_GEC_SRCDIR)/is_cryptographically_strong.cc \
	$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/assign_class_invariant_to_curve.cc \
	$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/assign_efficient_curve_parameters.cc \
	$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/compute_class_polynomial.cc \
	$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_discriminant.cc \
	$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime.cc \
	$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime_0_mod_4.cc \
	$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime_1_mod_8.cc \
	$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime_5_mod_8.cc \
	$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime_power.cc \
	$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_oef.cc \
	$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_complex_multiplication.cc \
	$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/generate.cc \
	$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/generate_oef.cc \
	$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/set_complex_precision.cc \
	$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/set_generation_mode.cc \
	$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/assign_class_invariant_to_curve_and_twist.cc \
	$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/assign_efficient_curve_parameters_and_twist.cc \
	$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/find_good_prime_twist.cc \
	$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/gec_E_and_twist_prime.cc \
	$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/generate_twist.cc \
	$(LIDIA_GEC_SRCDIR)/gec_point_counting_mod_p/gec_point_counting_mod_p.cc \
	$(LIDIA_GEC_SRCDIR)/gec_point_counting_mod_2n/gec_point_counting_mod_2n.cc \
	$(LIDIA_GEC_SRCDIR)/prime_proof/certificate.cc \
	$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof.cc \
	$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp.cc \
	$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_assign_class_invariant_to_curve.cc \
	$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_compute_class_polynomial.cc \
	$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_discriminant.cc \
	$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_generate.cc \
	$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_is_good_order.cc \
	$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_primelist.cc \
	$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_set_complex_precision.cc \
	$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_set_generation_mode.cc \
	$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_factorize.cc \
	$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_n_minus_one.cc \
	$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_n_plus_one.cc \
	$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_spp.cc

pkginclude_HEADERS = \
	$(LIDIA_GEC_PKGINCLUDEDIR)/gec.h \
	$(LIDIA_GEC_PKGINCLUDEDIR)/gec_E_and_twist_prime.h \
	$(LIDIA_GEC_PKGINCLUDEDIR)/gec_complex_multiplication.h \
	$(LIDIA_GEC_PKGINCLUDEDIR)/gec_point_counting_mod_2n.h \
	$(LIDIA_GEC_PKGINCLUDEDIR)/gec_point_counting_mod_p.h \
	$(LIDIA_GEC_PKGINCLUDEDIR)/certificate.h \
	$(LIDIA_GEC_PKGINCLUDEDIR)/prime_proof.h

discriminantsdir = $(pkgdatadir)/Discriminants
dist_discriminants_DATA = \
        $(LIDIA_PKGDATADIR)/Discriminants/h_1 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_2 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_3 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_4 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_5 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_6 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_7 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_8 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_9 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_10 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_11 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_12 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_13 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_14 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_15 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_16 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_17 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_18 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_19 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_20 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_21 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_22 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_23 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_24 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_25 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_26 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_27 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_28 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_29 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_30 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_31 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_32 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_33 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_34 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_35 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_36 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_37 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_38 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_39 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_40 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_41 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_42 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_43 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_44 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_45 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_46 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_47 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_48 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_49 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_50 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_51 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_52 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_53 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_54 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_55 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_56 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_57 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_58 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_59 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_60 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_61 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_62 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_63 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_64 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_65 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_66 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_67 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_68 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_69 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_70 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_71 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_72 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_73 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_74 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_75 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_76 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_77 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_78 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_79 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_80 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_81 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_82 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_83 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_84 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_85 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_86 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_87 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_88 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_89 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_90 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_91 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_92 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_93 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_94 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_95 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_96 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_97 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_98 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_99 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_100 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_101 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_102 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_103 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_104 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_105 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_106 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_107 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_108 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_109 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_110 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_111 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_112 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_113 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_114 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_115 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_116 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_117 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_118 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_119 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_120 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_121 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_122 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_123 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_124 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_125 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_126 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_127 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_128 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_129 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_130 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_131 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_132 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_133 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_134 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_135 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_136 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_137 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_138 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_139 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_140 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_141 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_142 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_143 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_144 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_145 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_146 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_147 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_148 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_149 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_150 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_151 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_152 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_153 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_154 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_155 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_156 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_157 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_158 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_159 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_160 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_161 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_162 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_163 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_164 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_165 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_166 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_167 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_168 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_169 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_170 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_171 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_172 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_173 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_174 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_175 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_176 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_177 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_178 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_179 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_180 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_181 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_182 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_183 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_184 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_185 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_186 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_187 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_188 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_189 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_190 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_191 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_192 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_193 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_194 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_195 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_196 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_197 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_198 \
        $(LIDIA_PKGDATADIR)/Discriminants/h_199 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_200 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_201 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_202 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_203 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_204 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_205 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_206 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_207 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_208 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_209 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_210 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_211 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_212 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_213 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_214 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_215 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_216 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_217 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_218 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_219 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_220 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_221 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_222 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_223 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_224 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_225 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_226 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_227 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_228 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_229 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_230 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_231 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_232 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_233 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_234 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_235 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_236 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_237 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_238 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_239 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_240 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_241 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_242 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_243 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_244 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_245 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_246 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_247 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_248 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_249 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_250 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_251 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_252 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_253 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_254 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_255 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_256 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_257 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_258 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_259 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_260 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_261 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_262 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_263 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_264 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_265 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_266 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_267 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_268 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_269 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_270 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_271 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_272 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_273 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_274 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_275 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_276 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_277 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_278 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_279 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_280 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_281 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_282 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_283 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_284 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_285 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_286 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_287 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_288 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_289 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_290 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_291 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_292 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_293 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_294 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_295 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_296 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_297 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_298 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_299 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_300 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_301 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_302 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_303 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_304 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_305 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_306 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_307 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_308 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_309 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_310 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_311 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_312 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_313 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_314 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_315 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_316 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_317 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_318 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_319 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_320 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_321 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_322 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_323 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_324 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_325 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_326 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_327 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_328 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_329 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_330 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_331 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_332 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_333 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_334 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_335 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_336 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_337 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_338 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_339 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_340 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_341 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_342 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_343 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_344 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_345 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_346 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_347 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_348 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_349 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_350 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_351 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_352 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_353 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_354 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_355 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_356 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_357 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_358 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_359 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_360 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_361 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_362 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_363 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_364 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_365 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_366 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_367 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_368 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_369 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_370 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_371 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_372 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_373 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_374 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_375 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_376 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_377 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_378 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_379 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_380 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_381 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_382 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_383 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_384 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_385 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_386 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_387 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_388 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_389 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_390 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_391 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_392 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_393 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_394 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_395 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_396 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_397 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_398 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_399 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_400 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_401 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_402 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_403 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_404 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_405 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_406 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_407 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_408 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_409 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_410 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_411 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_412 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_413 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_414 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_415 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_416 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_417 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_418 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_419 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_420 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_421 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_422 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_423 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_424 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_425 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_426 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_427 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_428 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_429 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_430 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_431 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_432 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_433 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_434 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_435 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_436 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_437 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_438 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_439 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_440 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_441 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_442 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_443 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_444 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_445 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_446 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_447 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_448 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_449 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_450 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_451 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_452 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_453 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_454 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_455 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_456 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_457 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_458 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_459 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_460 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_461 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_462 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_463 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_464 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_465 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_466 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_467 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_468 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_469 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_470 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_471 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_472 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_473 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_474 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_475 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_476 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_477 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_478 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_479 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_480 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_481 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_482 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_483 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_484 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_485 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_486 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_487 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_488 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_489 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_490 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_491 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_492 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_493 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_494 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_495 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_496 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_497 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_498 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_499 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_500 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_501 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_502 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_503 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_504 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_505 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_506 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_507 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_508 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_509 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_510 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_511 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_512 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_513 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_514 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_515 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_516 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_517 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_518 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_519 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_520 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_521 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_522 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_523 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_524 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_525 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_526 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_527 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_528 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_529 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_530 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_531 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_532 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_533 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_534 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_535 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_536 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_537 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_538 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_539 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_540 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_541 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_542 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_543 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_544 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_545 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_546 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_547 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_548 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_549 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_550 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_551 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_552 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_553 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_554 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_555 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_556 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_557 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_558 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_559 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_560 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_561 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_562 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_563 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_564 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_565 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_566 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_567 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_568 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_569 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_570 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_571 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_572 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_573 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_574 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_575 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_576 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_577 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_578 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_579 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_580 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_581 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_582 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_583 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_584 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_585 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_586 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_587 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_588 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_589 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_590 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_591 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_592 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_593 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_594 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_595 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_596 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_597 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_598 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_599 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_600 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_601 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_602 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_603 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_604 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_605 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_606 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_607 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_608 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_609 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_610 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_611 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_612 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_613 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_614 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_615 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_616 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_617 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_618 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_619 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_620 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_621 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_622 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_623 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_624 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_625 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_626 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_627 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_628 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_629 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_630 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_631 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_632 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_633 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_634 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_635 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_636 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_637 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_638 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_639 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_640 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_641 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_642 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_643 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_644 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_645 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_646 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_647 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_648 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_649 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_650 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_651 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_652 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_653 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_654 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_655 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_656 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_657 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_658 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_659 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_660 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_661 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_662 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_663 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_664 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_665 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_666 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_667 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_668 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_669 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_670 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_671 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_672 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_673 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_674 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_675 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_676 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_677 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_678 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_679 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_680 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_681 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_682 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_683 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_684 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_685 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_686 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_687 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_688 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_689 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_690 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_691 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_692 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_693 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_694 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_695 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_696 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_697 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_698 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_699 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_700 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_701 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_702 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_703 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_704 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_705 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_706 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_707 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_708 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_709 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_710 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_711 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_712 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_713 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_714 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_715 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_716 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_717 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_718 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_719 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_720 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_721 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_722 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_723 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_724 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_725 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_726 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_727 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_728 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_729 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_730 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_731 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_732 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_733 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_734 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_735 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_736 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_737 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_738 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_739 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_740 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_741 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_742 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_743 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_744 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_745 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_746 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_747 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_748 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_749 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_750 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_751 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_752 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_753 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_754 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_755 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_756 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_757 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_758 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_759 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_760 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_761 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_762 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_763 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_764 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_765 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_766 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_767 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_768 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_769 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_770 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_771 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_772 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_773 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_774 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_775 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_776 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_777 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_778 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_779 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_780 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_781 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_782 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_783 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_784 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_785 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_786 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_787 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_788 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_789 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_790 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_791 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_792 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_793 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_794 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_795 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_796 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_797 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_798 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_799 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_800 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_801 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_802 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_803 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_804 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_805 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_806 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_807 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_808 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_809 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_810 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_811 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_812 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_813 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_814 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_815 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_816 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_817 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_818 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_819 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_820 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_821 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_822 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_823 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_824 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_825 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_826 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_827 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_828 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_829 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_830 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_831 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_832 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_833 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_834 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_835 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_836 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_837 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_838 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_839 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_840 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_841 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_842 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_843 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_844 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_845 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_846 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_847 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_848 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_849 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_850 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_851 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_852 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_853 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_854 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_855 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_856 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_857 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_858 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_859 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_860 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_861 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_862 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_863 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_864 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_865 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_866 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_867 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_868 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_869 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_870 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_871 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_872 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_873 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_874 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_875 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_876 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_877 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_878 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_879 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_880 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_881 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_882 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_883 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_884 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_885 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_886 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_887 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_888 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_889 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_890 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_891 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_892 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_893 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_894 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_895 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_896 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_897 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_898 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_899 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_900 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_901 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_902 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_903 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_904 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_905 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_906 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_907 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_908 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_909 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_910 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_911 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_912 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_913 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_914 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_915 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_916 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_917 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_918 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_919 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_920 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_921 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_922 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_923 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_924 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_925 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_926 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_927 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_928 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_929 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_930 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_931 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_932 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_933 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_934 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_935 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_936 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_937 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_938 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_939 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_940 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_941 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_942 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_943 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_944 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_945 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_946 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_947 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_948 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_949 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_950 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_951 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_952 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_953 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_954 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_955 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_956 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_957 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_958 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_959 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_960 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_961 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_962 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_963 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_964 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_965 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_966 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_967 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_968 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_969 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_970 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_971 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_972 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_973 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_974 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_975 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_976 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_977 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_978 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_979 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_980 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_981 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_982 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_983 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_984 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_985 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_986 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_987 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_988 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_989 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_990 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_991 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_992 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_993 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_994 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_995 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_996 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_997 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_998 \
	$(LIDIA_PKGDATADIR)/Discriminants/h_999

EXTRA_DIST = 
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Paths.def $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu library/gec/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu library/gec/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/Paths.def:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libLiDIA-GEC.la: $(libLiDIA_GEC_la_OBJECTS) $(libLiDIA_GEC_la_DEPENDENCIES) $(EXTRA_libLiDIA_GEC_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK)  $(libLiDIA_GEC_la_OBJECTS) $(libLiDIA_GEC_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/assign_class_invariant_to_curve.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/assign_class_invariant_to_curve_and_twist.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/assign_efficient_curve_parameters.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/assign_efficient_curve_parameters_and_twist.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/certificate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/compute_class_polynomial.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/find_discriminant.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/find_good_prime.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/find_good_prime_0_mod_4.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/find_good_prime_1_mod_8.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/find_good_prime_5_mod_8.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/find_good_prime_power.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/find_good_prime_twist.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/find_oef.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gec.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gec_E_and_twist_prime.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gec_complex_multiplication.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gec_point_counting_mod_2n.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gec_point_counting_mod_p.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/generate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/generate_oef.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/generate_twist.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/is_cryptographically_strong.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prime_proof.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prime_proof_ecpp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prime_proof_ecpp_assign_class_invariant_to_curve.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prime_proof_ecpp_compute_class_polynomial.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prime_proof_ecpp_discriminant.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prime_proof_ecpp_generate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prime_proof_ecpp_is_good_order.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prime_proof_ecpp_primelist.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prime_proof_ecpp_set_complex_precision.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prime_proof_ecpp_set_generation_mode.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prime_proof_factorize.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prime_proof_n_minus_one.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prime_proof_n_plus_one.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prime_proof_spp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/set_complex_precision.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/set_generation_mode.Plo@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

gec.lo: $(LIDIA_GEC_SRCDIR)/gec.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gec.lo -MD -MP -MF $(DEPDIR)/gec.Tpo -c -o gec.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/gec.Tpo $(DEPDIR)/gec.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/gec.cc' object='gec.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gec.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec.cc

is_cryptographically_strong.lo: $(LIDIA_GEC_SRCDIR)/is_cryptographically_strong.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT is_cryptographically_strong.lo -MD -MP -MF $(DEPDIR)/is_cryptographically_strong.Tpo -c -o is_cryptographically_strong.lo `test -f '$(LIDIA_GEC_SRCDIR)/is_cryptographically_strong.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/is_cryptographically_strong.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/is_cryptographically_strong.Tpo $(DEPDIR)/is_cryptographically_strong.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/is_cryptographically_strong.cc' object='is_cryptographically_strong.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o is_cryptographically_strong.lo `test -f '$(LIDIA_GEC_SRCDIR)/is_cryptographically_strong.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/is_cryptographically_strong.cc

assign_class_invariant_to_curve.lo: $(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/assign_class_invariant_to_curve.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT assign_class_invariant_to_curve.lo -MD -MP -MF $(DEPDIR)/assign_class_invariant_to_curve.Tpo -c -o assign_class_invariant_to_curve.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/assign_class_invariant_to_curve.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/assign_class_invariant_to_curve.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/assign_class_invariant_to_curve.Tpo $(DEPDIR)/assign_class_invariant_to_curve.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/assign_class_invariant_to_curve.cc' object='assign_class_invariant_to_curve.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o assign_class_invariant_to_curve.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/assign_class_invariant_to_curve.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/assign_class_invariant_to_curve.cc

assign_efficient_curve_parameters.lo: $(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/assign_efficient_curve_parameters.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT assign_efficient_curve_parameters.lo -MD -MP -MF $(DEPDIR)/assign_efficient_curve_parameters.Tpo -c -o assign_efficient_curve_parameters.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/assign_efficient_curve_parameters.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/assign_efficient_curve_parameters.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/assign_efficient_curve_parameters.Tpo $(DEPDIR)/assign_efficient_curve_parameters.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/assign_efficient_curve_parameters.cc' object='assign_efficient_curve_parameters.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o assign_efficient_curve_parameters.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/assign_efficient_curve_parameters.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/assign_efficient_curve_parameters.cc

compute_class_polynomial.lo: $(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/compute_class_polynomial.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compute_class_polynomial.lo -MD -MP -MF $(DEPDIR)/compute_class_polynomial.Tpo -c -o compute_class_polynomial.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/compute_class_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/compute_class_polynomial.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/compute_class_polynomial.Tpo $(DEPDIR)/compute_class_polynomial.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/compute_class_polynomial.cc' object='compute_class_polynomial.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compute_class_polynomial.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/compute_class_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/compute_class_polynomial.cc

find_discriminant.lo: $(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_discriminant.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT find_discriminant.lo -MD -MP -MF $(DEPDIR)/find_discriminant.Tpo -c -o find_discriminant.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_discriminant.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_discriminant.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/find_discriminant.Tpo $(DEPDIR)/find_discriminant.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_discriminant.cc' object='find_discriminant.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o find_discriminant.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_discriminant.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_discriminant.cc

find_good_prime.lo: $(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT find_good_prime.lo -MD -MP -MF $(DEPDIR)/find_good_prime.Tpo -c -o find_good_prime.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/find_good_prime.Tpo $(DEPDIR)/find_good_prime.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime.cc' object='find_good_prime.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o find_good_prime.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime.cc

find_good_prime_0_mod_4.lo: $(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime_0_mod_4.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT find_good_prime_0_mod_4.lo -MD -MP -MF $(DEPDIR)/find_good_prime_0_mod_4.Tpo -c -o find_good_prime_0_mod_4.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime_0_mod_4.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime_0_mod_4.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/find_good_prime_0_mod_4.Tpo $(DEPDIR)/find_good_prime_0_mod_4.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime_0_mod_4.cc' object='find_good_prime_0_mod_4.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o find_good_prime_0_mod_4.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime_0_mod_4.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime_0_mod_4.cc

find_good_prime_1_mod_8.lo: $(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime_1_mod_8.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT find_good_prime_1_mod_8.lo -MD -MP -MF $(DEPDIR)/find_good_prime_1_mod_8.Tpo -c -o find_good_prime_1_mod_8.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime_1_mod_8.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime_1_mod_8.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/find_good_prime_1_mod_8.Tpo $(DEPDIR)/find_good_prime_1_mod_8.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime_1_mod_8.cc' object='find_good_prime_1_mod_8.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o find_good_prime_1_mod_8.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime_1_mod_8.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime_1_mod_8.cc

find_good_prime_5_mod_8.lo: $(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime_5_mod_8.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT find_good_prime_5_mod_8.lo -MD -MP -MF $(DEPDIR)/find_good_prime_5_mod_8.Tpo -c -o find_good_prime_5_mod_8.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime_5_mod_8.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime_5_mod_8.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/find_good_prime_5_mod_8.Tpo $(DEPDIR)/find_good_prime_5_mod_8.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime_5_mod_8.cc' object='find_good_prime_5_mod_8.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o find_good_prime_5_mod_8.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime_5_mod_8.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime_5_mod_8.cc

find_good_prime_power.lo: $(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime_power.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT find_good_prime_power.lo -MD -MP -MF $(DEPDIR)/find_good_prime_power.Tpo -c -o find_good_prime_power.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime_power.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime_power.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/find_good_prime_power.Tpo $(DEPDIR)/find_good_prime_power.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime_power.cc' object='find_good_prime_power.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o find_good_prime_power.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime_power.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_good_prime_power.cc

find_oef.lo: $(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_oef.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT find_oef.lo -MD -MP -MF $(DEPDIR)/find_oef.Tpo -c -o find_oef.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_oef.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_oef.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/find_oef.Tpo $(DEPDIR)/find_oef.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_oef.cc' object='find_oef.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o find_oef.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_oef.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/find_oef.cc

gec_complex_multiplication.lo: $(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_complex_multiplication.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gec_complex_multiplication.lo -MD -MP -MF $(DEPDIR)/gec_complex_multiplication.Tpo -c -o gec_complex_multiplication.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_complex_multiplication.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_complex_multiplication.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/gec_complex_multiplication.Tpo $(DEPDIR)/gec_complex_multiplication.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_complex_multiplication.cc' object='gec_complex_multiplication.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gec_complex_multiplication.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_complex_multiplication.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_complex_multiplication.cc

generate.lo: $(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/generate.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT generate.lo -MD -MP -MF $(DEPDIR)/generate.Tpo -c -o generate.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/generate.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/generate.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/generate.Tpo $(DEPDIR)/generate.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/generate.cc' object='generate.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o generate.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/generate.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/generate.cc

generate_oef.lo: $(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/generate_oef.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT generate_oef.lo -MD -MP -MF $(DEPDIR)/generate_oef.Tpo -c -o generate_oef.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/generate_oef.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/generate_oef.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/generate_oef.Tpo $(DEPDIR)/generate_oef.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/generate_oef.cc' object='generate_oef.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o generate_oef.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/generate_oef.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/generate_oef.cc

set_complex_precision.lo: $(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/set_complex_precision.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT set_complex_precision.lo -MD -MP -MF $(DEPDIR)/set_complex_precision.Tpo -c -o set_complex_precision.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/set_complex_precision.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/set_complex_precision.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/set_complex_precision.Tpo $(DEPDIR)/set_complex_precision.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/set_complex_precision.cc' object='set_complex_precision.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o set_complex_precision.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/set_complex_precision.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/set_complex_precision.cc

set_generation_mode.lo: $(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/set_generation_mode.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT set_generation_mode.lo -MD -MP -MF $(DEPDIR)/set_generation_mode.Tpo -c -o set_generation_mode.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/set_generation_mode.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/set_generation_mode.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/set_generation_mode.Tpo $(DEPDIR)/set_generation_mode.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/set_generation_mode.cc' object='set_generation_mode.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o set_generation_mode.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/set_generation_mode.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/set_generation_mode.cc

assign_class_invariant_to_curve_and_twist.lo: $(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/assign_class_invariant_to_curve_and_twist.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT assign_class_invariant_to_curve_and_twist.lo -MD -MP -MF $(DEPDIR)/assign_class_invariant_to_curve_and_twist.Tpo -c -o assign_class_invariant_to_curve_and_twist.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/assign_class_invariant_to_curve_and_twist.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/assign_class_invariant_to_curve_and_twist.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/assign_class_invariant_to_curve_and_twist.Tpo $(DEPDIR)/assign_class_invariant_to_curve_and_twist.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/assign_class_invariant_to_curve_and_twist.cc' object='assign_class_invariant_to_curve_and_twist.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o assign_class_invariant_to_curve_and_twist.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/assign_class_invariant_to_curve_and_twist.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/assign_class_invariant_to_curve_and_twist.cc

assign_efficient_curve_parameters_and_twist.lo: $(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/assign_efficient_curve_parameters_and_twist.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT assign_efficient_curve_parameters_and_twist.lo -MD -MP -MF $(DEPDIR)/assign_efficient_curve_parameters_and_twist.Tpo -c -o assign_efficient_curve_parameters_and_twist.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/assign_efficient_curve_parameters_and_twist.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/assign_efficient_curve_parameters_and_twist.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/assign_efficient_curve_parameters_and_twist.Tpo $(DEPDIR)/assign_efficient_curve_parameters_and_twist.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/assign_efficient_curve_parameters_and_twist.cc' object='assign_efficient_curve_parameters_and_twist.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o assign_efficient_curve_parameters_and_twist.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/assign_efficient_curve_parameters_and_twist.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/assign_efficient_curve_parameters_and_twist.cc

find_good_prime_twist.lo: $(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/find_good_prime_twist.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT find_good_prime_twist.lo -MD -MP -MF $(DEPDIR)/find_good_prime_twist.Tpo -c -o find_good_prime_twist.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/find_good_prime_twist.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/find_good_prime_twist.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/find_good_prime_twist.Tpo $(DEPDIR)/find_good_prime_twist.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/find_good_prime_twist.cc' object='find_good_prime_twist.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o find_good_prime_twist.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/find_good_prime_twist.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/find_good_prime_twist.cc

gec_E_and_twist_prime.lo: $(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/gec_E_and_twist_prime.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gec_E_and_twist_prime.lo -MD -MP -MF $(DEPDIR)/gec_E_and_twist_prime.Tpo -c -o gec_E_and_twist_prime.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/gec_E_and_twist_prime.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/gec_E_and_twist_prime.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/gec_E_and_twist_prime.Tpo $(DEPDIR)/gec_E_and_twist_prime.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/gec_E_and_twist_prime.cc' object='gec_E_and_twist_prime.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gec_E_and_twist_prime.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/gec_E_and_twist_prime.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/gec_E_and_twist_prime.cc

generate_twist.lo: $(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/generate_twist.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT generate_twist.lo -MD -MP -MF $(DEPDIR)/generate_twist.Tpo -c -o generate_twist.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/generate_twist.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/generate_twist.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/generate_twist.Tpo $(DEPDIR)/generate_twist.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/generate_twist.cc' object='generate_twist.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o generate_twist.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/generate_twist.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_complex_multiplication/gec_E_and_twist_prime/generate_twist.cc

gec_point_counting_mod_p.lo: $(LIDIA_GEC_SRCDIR)/gec_point_counting_mod_p/gec_point_counting_mod_p.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gec_point_counting_mod_p.lo -MD -MP -MF $(DEPDIR)/gec_point_counting_mod_p.Tpo -c -o gec_point_counting_mod_p.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_point_counting_mod_p/gec_point_counting_mod_p.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_point_counting_mod_p/gec_point_counting_mod_p.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/gec_point_counting_mod_p.Tpo $(DEPDIR)/gec_point_counting_mod_p.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/gec_point_counting_mod_p/gec_point_counting_mod_p.cc' object='gec_point_counting_mod_p.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gec_point_counting_mod_p.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_point_counting_mod_p/gec_point_counting_mod_p.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_point_counting_mod_p/gec_point_counting_mod_p.cc

gec_point_counting_mod_2n.lo: $(LIDIA_GEC_SRCDIR)/gec_point_counting_mod_2n/gec_point_counting_mod_2n.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gec_point_counting_mod_2n.lo -MD -MP -MF $(DEPDIR)/gec_point_counting_mod_2n.Tpo -c -o gec_point_counting_mod_2n.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_point_counting_mod_2n/gec_point_counting_mod_2n.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_point_counting_mod_2n/gec_point_counting_mod_2n.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/gec_point_counting_mod_2n.Tpo $(DEPDIR)/gec_point_counting_mod_2n.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/gec_point_counting_mod_2n/gec_point_counting_mod_2n.cc' object='gec_point_counting_mod_2n.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gec_point_counting_mod_2n.lo `test -f '$(LIDIA_GEC_SRCDIR)/gec_point_counting_mod_2n/gec_point_counting_mod_2n.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/gec_point_counting_mod_2n/gec_point_counting_mod_2n.cc

certificate.lo: $(LIDIA_GEC_SRCDIR)/prime_proof/certificate.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT certificate.lo -MD -MP -MF $(DEPDIR)/certificate.Tpo -c -o certificate.lo `test -f '$(LIDIA_GEC_SRCDIR)/prime_proof/certificate.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/prime_proof/certificate.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/certificate.Tpo $(DEPDIR)/certificate.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/prime_proof/certificate.cc' object='certificate.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o certificate.lo `test -f '$(LIDIA_GEC_SRCDIR)/prime_proof/certificate.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/prime_proof/certificate.cc

prime_proof.lo: $(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT prime_proof.lo -MD -MP -MF $(DEPDIR)/prime_proof.Tpo -c -o prime_proof.lo `test -f '$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/prime_proof.Tpo $(DEPDIR)/prime_proof.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof.cc' object='prime_proof.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o prime_proof.lo `test -f '$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof.cc

prime_proof_ecpp.lo: $(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT prime_proof_ecpp.lo -MD -MP -MF $(DEPDIR)/prime_proof_ecpp.Tpo -c -o prime_proof_ecpp.lo `test -f '$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/prime_proof_ecpp.Tpo $(DEPDIR)/prime_proof_ecpp.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp.cc' object='prime_proof_ecpp.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o prime_proof_ecpp.lo `test -f '$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp.cc

prime_proof_ecpp_assign_class_invariant_to_curve.lo: $(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_assign_class_invariant_to_curve.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT prime_proof_ecpp_assign_class_invariant_to_curve.lo -MD -MP -MF $(DEPDIR)/prime_proof_ecpp_assign_class_invariant_to_curve.Tpo -c -o prime_proof_ecpp_assign_class_invariant_to_curve.lo `test -f '$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_assign_class_invariant_to_curve.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_assign_class_invariant_to_curve.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/prime_proof_ecpp_assign_class_invariant_to_curve.Tpo $(DEPDIR)/prime_proof_ecpp_assign_class_invariant_to_curve.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_assign_class_invariant_to_curve.cc' object='prime_proof_ecpp_assign_class_invariant_to_curve.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o prime_proof_ecpp_assign_class_invariant_to_curve.lo `test -f '$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_assign_class_invariant_to_curve.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_assign_class_invariant_to_curve.cc

prime_proof_ecpp_compute_class_polynomial.lo: $(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_compute_class_polynomial.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT prime_proof_ecpp_compute_class_polynomial.lo -MD -MP -MF $(DEPDIR)/prime_proof_ecpp_compute_class_polynomial.Tpo -c -o prime_proof_ecpp_compute_class_polynomial.lo `test -f '$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_compute_class_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_compute_class_polynomial.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/prime_proof_ecpp_compute_class_polynomial.Tpo $(DEPDIR)/prime_proof_ecpp_compute_class_polynomial.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_compute_class_polynomial.cc' object='prime_proof_ecpp_compute_class_polynomial.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o prime_proof_ecpp_compute_class_polynomial.lo `test -f '$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_compute_class_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_compute_class_polynomial.cc

prime_proof_ecpp_discriminant.lo: $(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_discriminant.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT prime_proof_ecpp_discriminant.lo -MD -MP -MF $(DEPDIR)/prime_proof_ecpp_discriminant.Tpo -c -o prime_proof_ecpp_discriminant.lo `test -f '$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_discriminant.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_discriminant.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/prime_proof_ecpp_discriminant.Tpo $(DEPDIR)/prime_proof_ecpp_discriminant.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_discriminant.cc' object='prime_proof_ecpp_discriminant.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o prime_proof_ecpp_discriminant.lo `test -f '$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_discriminant.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_discriminant.cc

prime_proof_ecpp_generate.lo: $(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_generate.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT prime_proof_ecpp_generate.lo -MD -MP -MF $(DEPDIR)/prime_proof_ecpp_generate.Tpo -c -o prime_proof_ecpp_generate.lo `test -f '$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_generate.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_generate.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/prime_proof_ecpp_generate.Tpo $(DEPDIR)/prime_proof_ecpp_generate.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_generate.cc' object='prime_proof_ecpp_generate.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o prime_proof_ecpp_generate.lo `test -f '$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_generate.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_generate.cc

prime_proof_ecpp_is_good_order.lo: $(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_is_good_order.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT prime_proof_ecpp_is_good_order.lo -MD -MP -MF $(DEPDIR)/prime_proof_ecpp_is_good_order.Tpo -c -o prime_proof_ecpp_is_good_order.lo `test -f '$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_is_good_order.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_is_good_order.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/prime_proof_ecpp_is_good_order.Tpo $(DEPDIR)/prime_proof_ecpp_is_good_order.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_is_good_order.cc' object='prime_proof_ecpp_is_good_order.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o prime_proof_ecpp_is_good_order.lo `test -f '$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_is_good_order.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_is_good_order.cc

prime_proof_ecpp_primelist.lo: $(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_primelist.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT prime_proof_ecpp_primelist.lo -MD -MP -MF $(DEPDIR)/prime_proof_ecpp_primelist.Tpo -c -o prime_proof_ecpp_primelist.lo `test -f '$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_primelist.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_primelist.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/prime_proof_ecpp_primelist.Tpo $(DEPDIR)/prime_proof_ecpp_primelist.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_primelist.cc' object='prime_proof_ecpp_primelist.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o prime_proof_ecpp_primelist.lo `test -f '$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_primelist.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_primelist.cc

prime_proof_ecpp_set_complex_precision.lo: $(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_set_complex_precision.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT prime_proof_ecpp_set_complex_precision.lo -MD -MP -MF $(DEPDIR)/prime_proof_ecpp_set_complex_precision.Tpo -c -o prime_proof_ecpp_set_complex_precision.lo `test -f '$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_set_complex_precision.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_set_complex_precision.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/prime_proof_ecpp_set_complex_precision.Tpo $(DEPDIR)/prime_proof_ecpp_set_complex_precision.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_set_complex_precision.cc' object='prime_proof_ecpp_set_complex_precision.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o prime_proof_ecpp_set_complex_precision.lo `test -f '$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_set_complex_precision.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_set_complex_precision.cc

prime_proof_ecpp_set_generation_mode.lo: $(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_set_generation_mode.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT prime_proof_ecpp_set_generation_mode.lo -MD -MP -MF $(DEPDIR)/prime_proof_ecpp_set_generation_mode.Tpo -c -o prime_proof_ecpp_set_generation_mode.lo `test -f '$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_set_generation_mode.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_set_generation_mode.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/prime_proof_ecpp_set_generation_mode.Tpo $(DEPDIR)/prime_proof_ecpp_set_generation_mode.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_set_generation_mode.cc' object='prime_proof_ecpp_set_generation_mode.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o prime_proof_ecpp_set_generation_mode.lo `test -f '$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_set_generation_mode.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_ecpp_set_generation_mode.cc

prime_proof_factorize.lo: $(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_factorize.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT prime_proof_factorize.lo -MD -MP -MF $(DEPDIR)/prime_proof_factorize.Tpo -c -o prime_proof_factorize.lo `test -f '$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_factorize.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_factorize.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/prime_proof_factorize.Tpo $(DEPDIR)/prime_proof_factorize.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_factorize.cc' object='prime_proof_factorize.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o prime_proof_factorize.lo `test -f '$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_factorize.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_factorize.cc

prime_proof_n_minus_one.lo: $(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_n_minus_one.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT prime_proof_n_minus_one.lo -MD -MP -MF $(DEPDIR)/prime_proof_n_minus_one.Tpo -c -o prime_proof_n_minus_one.lo `test -f '$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_n_minus_one.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_n_minus_one.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/prime_proof_n_minus_one.Tpo $(DEPDIR)/prime_proof_n_minus_one.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_n_minus_one.cc' object='prime_proof_n_minus_one.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o prime_proof_n_minus_one.lo `test -f '$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_n_minus_one.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_n_minus_one.cc

prime_proof_n_plus_one.lo: $(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_n_plus_one.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT prime_proof_n_plus_one.lo -MD -MP -MF $(DEPDIR)/prime_proof_n_plus_one.Tpo -c -o prime_proof_n_plus_one.lo `test -f '$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_n_plus_one.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_n_plus_one.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/prime_proof_n_plus_one.Tpo $(DEPDIR)/prime_proof_n_plus_one.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_n_plus_one.cc' object='prime_proof_n_plus_one.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o prime_proof_n_plus_one.lo `test -f '$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_n_plus_one.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_n_plus_one.cc

prime_proof_spp.lo: $(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_spp.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT prime_proof_spp.lo -MD -MP -MF $(DEPDIR)/prime_proof_spp.Tpo -c -o prime_proof_spp.lo `test -f '$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_spp.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_spp.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/prime_proof_spp.Tpo $(DEPDIR)/prime_proof_spp.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_spp.cc' object='prime_proof_spp.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o prime_proof_spp.lo `test -f '$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_spp.cc' || echo '$(srcdir)/'`$(LIDIA_GEC_SRCDIR)/prime_proof/prime_proof_spp.cc

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-dist_discriminantsDATA: $(dist_discriminants_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_discriminants_DATA)'; test -n "$(discriminantsdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(discriminantsdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(discriminantsdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(discriminantsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(discriminantsdir)" || exit $$?; \
	done

uninstall-dist_discriminantsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_discriminants_DATA)'; test -n "$(discriminantsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(discriminantsdir)'; $(am__uninstall_files_from_dir)
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgincludedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(discriminantsdir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-dist_discriminantsDATA \
	install-pkgincludeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-dist_discriminantsDATA \
	uninstall-pkgincludeHEADERS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook
.MAKE: install-am install-strip uninstall-am

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dist_discriminantsDATA install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-pkgincludeHEADERS \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am \
	uninstall-dist_discriminantsDATA uninstall-hook \
	uninstall-pkgincludeHEADERS


 #

# Remove installation subdirectories after uninstalling, unless left non-empty.
uninstall-hook:
	rmdir	$(DESTDIR)$(pkgincludedir) \
		$(DESTDIR)$(discriminantsdir) \
		$(DESTDIR)$(pkgdatadir) \
		2>/dev/null; :

# Delete half-made targets when their commands fail
.DELETE_ON_ERROR:

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
